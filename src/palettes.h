/* Palettes */

static unsigned long linradPalette[256] =
{
    // from spectrum lab
    0x00000101,0x00030101,0x00060101,0x00090101,0x000C0101,0x000F0101,0x00120101,0x00150101,
    0x00190101,0x001C0101,0x001F0101,0x00220101,0x00250101,0x00280000,0x002B0000,0x002E0000,
    0x00320000,0x00350000,0x00380000,0x003B0101,0x003E0101,0x00410101,0x00440101,0x00470101,
    0x004B0000,0x004D0000,0x004F0000,0x00510000,0x00540000,0x00560000,0x00580000,0x005B0000,
    0x005D0000,0x005F0000,0x00610100,0x00640300,0x00660500,0x00680800,0x006B0A00,0x006C0D00,
    0x006D0F00,0x006E1200,0x006F1400,0x00711700,0x00721900,0x00731C00,0x00741E00,0x00752100,
    0x00772300,0x00782600,0x00792800,0x007A2B00,0x007C2D00,0x007C3000,0x007C3200,0x007C3500,
    0x007C3700,0x007C3900,0x007C3C00,0x007C3E00,0x007C4101,0x007C4301,0x007C4601,0x007C4801,
    0x007C4B01,0x007D4D01,0x007C5001,0x007B5201,0x007A5501,0x00795700,0x00785A00,0x00775C00,
    0x00765F01,0x00746101,0x00726401,0x00706601,0x006E6900,0x006C6B00,0x006A6E01,0x00676F01,
    0x00657001,0x00637201,0x00617301,0x005F7501,0x005C7601,0x005A7801,0x00587901,0x00567B01,
    0x00507C00,0x00517E00,0x004E7F00,0x004B8100,0x00488200,0x00458300,0x00428500,0x003F8600,
    0x003C8800,0x00398900,0x00368B00,0x00338C00,0x00308E00,0x002D8F01,0x002A9101,0x00279200,
    0x00249400,0x00219501,0x001E9600,0x001B9700,0x00189800,0x00159902,0x00129A07,0x000F9B0D,
    0x000C9C13,0x00099D19,0x00069E1F,0x0003A025,0x0000A02B,0x0000A031,0x0000A037,0x0001A03D,
    0x0001A043,0x0000A049,0x0001A04F,0x0001A055,0x0001A05B,0x0000A061,0x0000A067,0x0000A06D,
    0x0000A073,0x00009F79,0x00009E7C,0x00009D80,0x00019C83,0x00019B87,0x00019B8A,0x00019A8E,
    0x00019991,0x00019895,0x00019799,0x0001959C,0x000194A0,0x000193A3,0x000191A7,0x000190AA,
    0x00018EAE,0x00018DB1,0x00018BB2,0x00018AB4,0x000188B6,0x000187B8,0x000185B9,0x000184BB,
    0x000083BC,0x000281BE,0x000080BF,0x00017EC0,0x00017DC1,0x00017BC2,0x00017AC3,0x000178C4,
    0x000177C5,0x000175C6,0x000173C7,0x000170C8,0x00016EC9,0x00016BCA,0x000169CB,0x000166CC,
    0x000164CC,0x000161CD,0x00015ECE,0x00015CCE,0x000159CF,0x000057D0,0x000054D0,0x000052D1,
    0x00004FD2,0x00004CD3,0x00004AD4,0x000047D5,0x000045D6,0x000042D8,0x000140D9,0x00013DDA,
    0x00013BDB,0x000138DC,0x000135DD,0x000133DE,0x000130DF,0x00002EE0,0x00002BE2,0x000229E3,
    0x000226E4,0x000223E5,0x000222E6,0x000220E7,0x00021FE8,0x00021DE9,0x00021CEA,0x00061AEC,
    0x000A19ED,0x000F17EE,0x001315EF,0x001818F0,0x001C1CF1,0x002121F2,0x002525F3,0x002929F4,
    0x002E2EF6,0x003232F7,0x003737F8,0x003B3BF9,0x004040FA,0x004444FB,0x004949FC,0x004D4DFD,
    0x005151FF,0x005656FF,0x005A5AFF,0x005F5FFF,0x006363FF,0x006868FF,0x006C6CFF,0x007070FF,
    0x007575FF,0x007979FF,0x007E7EFF,0x008282FF,0x008787FF,0x008B8BFF,0x009090FF,0x009494FF,
    0x009898FF,0x009D9DFF,0x00A1A1FF,0x00A6A6FF,0x00AAAAFF,0x00AFAFFF,0x00B3B3FF,0x00B7B7FF,
    0x00BCBCFF,0x00C0C0FF,0x00C5C5FF,0x00C9C9FF,0x00CECEFF,0x00D2D2FF,0x00D7D7FE,0x00DBDBFF,
    0x00DFDFFF,0x00E4E4FF,0x00E8E8FF,0x00EDEDFF,0x00F1F1FF,0x00F6F6FF,0x00FAFAFF,0x00FFFFFF
};
/*
// linrad
// from fldigi
static short Palette[9][3] = {
    {   0,  0,  0 }, {   0,  0, 87 }, {   0, 79,114 }, {   0,141, 61 }, {  96,158,  0 },
    { 204,124,  0 }, { 253, 50, 17 }, { 255,138,138 }, { 255,255,255 }
};
for (int n = 0; n < 8; n++) {
    for (int i = 0; i < 32; i++) {
        spec_r[i + 32*n] = Palette[n][0] + (int)(1.0 * i * (Palette[n+1][0] - Palette[n][0]) / 32.0);
        spec_g[i + 32*n] = Palette[n][1] + (int)(1.0 * i * (Palette[n+1][1] - Palette[n][1]) / 32.0);
        spec_b[i + 32*n] = Palette[n][2] + (int)(1.0 * i * (Palette[n+1][2] - Palette[n][2]) / 32.0);
    }
}


          // linrad from Winrad
          0x00030101,0x00050101,0x00080101,0x000A0101,0x000D0101,0x00100101,0x00130101,0x00160101,
          0x00190101,0x001C0101,0x001F0101,0x00220101,0x00250101,0x00280000,0x002B0000,0x002E0000,
          0x00320000,0x00350000,0x00380000,0x003C0101,0x003E0101,0x00410101,0x00430101,0x00460101,
          0x00480000,0x004A0000,0x004B0000,0x004D0000,0x004E0000,0x00500000,0x00520000,0x00530000,
          0x00550000,0x00560000,0x00580000,0x005A0200,0x005C0500,0x005D0800,0x005F0A00,0x00610B00,
          0x00620E00,0x00631100,0x00641500,0x00661900,0x00671C00,0x00681F00,0x00692100,0x006A2400,
          0x006A2600,0x006B2900,0x006C2B00,0x006D2E00,0x006E3000,0x006E3200,0x006F3500,0x006F3700,
          0x00703A00,0x00703D00,0x00704000,0x00704300,0x00714501,0x00714701,0x00724A01,0x00724C01,
          0x00724E01,0x00725001,0x00725201,0x00725401,0x00725701,0x00725800,0x00725B00,0x00715E00,
          0x00706001,0x006E6301,0x006D6501,0x006A6701,0x00696900,0x00676C00,0x00656E01,0x00647001,
          0x00617201,0x005E7301,0x005C7601,0x005A7701,0x00587801,0x00567A01,0x00557C01,0x00537D01,
          0x00517F00,0x004F8100,0x004D8300,0x004A8400,0x00488600,0x00458800,0x00428900,0x003F8B00,
          0x003D8C00,0x003A8D00,0x00368D00,0x00338E00,0x00308F00,0x002D9101,0x00299101,0x00259300,
          0x00229400,0x001F9501,0x001C9600,0x00189700,0x00149800,0x00119900,0x000D9900,0x00089906,
          0x00059A0C,0x00019B12,0x00009B18,0x00009C20,0x00009C28,0x00009C2F,0x00009D38,0x00019D3D,
          0x00019D43,0x00009D48,0x00019D4E,0x00019D56,0x00019D5E,0x00009D65,0x00009D6D,0x00009D72,
          0x00009D78,0x00009C7B,0x00009B7D,0x00009B81,0x00019A85,0x00019A87,0x0001998B,0x0001998E,
          0x00019793,0x00019696,0x0001959A,0x0001949D,0x000193A0,0x000192A3,0x000191A7,0x000190A9,
          0x00018EAC,0x00018DB0,0x00018BB2,0x00018AB4,0x000189B6,0x000187B8,0x000186B9,0x000184BB,
          0x000082BC,0x000280BE,0x00007EBF,0x00017CC0,0x00017BC1,0x000179C2,0x000177C3,0x000175C4,
          0x000173C5,0x000171C7,0x00016FC7,0x00016DC8,0x00016AC9,0x000168CA,0x000167CB,0x000164CC,
          0x000161CC,0x00015FCD,0x00015DCE,0x00015ACE,0x000158CF,0x000056D0,0x000054D0,0x000052D1,
          0x00004FD2,0x00004DD3,0x00004BD4,0x000049D5,0x000046D6,0x000043D7,0x000141D9,0x00013DDA,
          0x00013ADB,0x000138DC,0x000135DE,0x000132DE,0x00012FE0,0x00002DE2,0x00002AE3,0x000027E4,
          0x000024E7,0x000021E7,0x00001FEA,0x00001DEC,0x00211BEE,0x002118EF,0x002116F1,0x001414F3,
          0x001818F4,0x001D1DF6,0x002424FB,0x002C2CFD,0x002F2FFE,0x003535FF,0x003B3BFF,0x003F3FFF,
          0x004444FF,0x004949FF,0x004E4EFF,0x005353FF,0x005656FF,0x005B5BFF,0x005F5FFF,0x006161FF,
          0x006565FF,0x006969FF,0x006B6BFF,0x006F6FFF,0x007373FF,0x007676FF,0x007A7AFF,0x007D7DFF,
          0x008282FF,0x008787FF,0x008D8DFF,0x009191FF,0x009595FF,0x009999FF,0x009D9DFF,0x00A0A0FF,
          0x00A6A6FF,0x00AAAAFF,0x00B2B2FF,0x00B7B7FF,0x00BBBBFF,0x00BFBFFF,0x00C4C4FF,0x00C7C7FF,
          0x00CACAFF,0x00CBCBFF,0x00CFCFFF,0x00D3D3FF,0x00D5D5FF,0x00D7D7FF,0x00DBDBFF,0x00DDDDFF,
          0x00E1E1FF,0x00E4E4FF,0x00E7E7FF,0x00E9E9FF,0x00EDEDFF,0x00F1F1FF,0x00F4F4FF,0x00FAFAFF

*/

static unsigned long linradPalette2[256] =
{
    0x00000000, 0x00030000, 0x00060000, 0x00090000, 0x000C0000, 0x000F0000, 0x00120000, 0x00150000,
    0x00180000, 0x001B0000, 0x001E0000, 0x00210000, 0x00240000, 0x00270000, 0x002A0000, 0x002D0000,
    0x00300000, 0x00320000, 0x00350000, 0x00380000, 0x003B0000, 0x003D0000, 0x00400000, 0x00420000,
    0x00450000, 0x00470000, 0x004A0000, 0x004C0000, 0x004E0000, 0x00510000, 0x00530000, 0x00550000,
    0x00570000, 0x00590000, 0x005B0000, 0x005D0000, 0x005F0200, 0x00600500, 0x00620800, 0x00640B00,
    0x00650E00, 0x00671100, 0x00681300, 0x00691600, 0x006A1900, 0x006C1C00, 0x006D1F00, 0x006E2200,
    0x006E2400, 0x006F2700, 0x00702A00, 0x00712D00, 0x00712F00, 0x00723200, 0x00723500, 0x00733800,
    0x00733A00, 0x00733D00, 0x00733F00, 0x00734200, 0x00734500, 0x00734700, 0x00734A00, 0x00724C00,
    0x00724F00, 0x00715100, 0x00715400, 0x00705600, 0x006F5800, 0x006E5B00, 0x006E5D00, 0x006D5F00,
    0x006C6200, 0x006A6400, 0x00696600, 0x00686800, 0x00676A00, 0x00656D00, 0x00646F00, 0x00627100,
    0x00607300, 0x005F7500, 0x005D7700, 0x005B7800, 0x00597A00, 0x00577C00, 0x00557E00, 0x00538000,
    0x00518100, 0x004E8300, 0x004C8500, 0x004A8600, 0x00478800, 0x00458900, 0x00428A00, 0x00408C00,
    0x003D8D00, 0x003B8E00, 0x00389000, 0x00359100, 0x00329200, 0x00309300, 0x002D9400, 0x002A9500,
    0x00279600, 0x00249700, 0x00219804, 0x001E9908, 0x001B9A0C, 0x00189A11, 0x00159B15, 0x00129B19,
    0x000F9C1E, 0x000C9D22, 0x00099D26, 0x00069D2A, 0x00039E2F, 0x00009E33, 0x00009E37, 0x00009F3B,
    0x00009F3F, 0x00009F44, 0x00009F48, 0x00009F4C, 0x00009F50, 0x00009F54, 0x00009F58, 0x00009E5C,
    0x00009E60, 0x00009E64, 0x00009D68, 0x00009D6C, 0x00009D70, 0x00009C74, 0x00009B77, 0x00009B7B,
    0x00009A7F, 0x00009A83, 0x00009986, 0x0000988A, 0x0000978E, 0x00009691, 0x00009595, 0x00009498,
    0x0000939C, 0x0000929F, 0x000091A2, 0x000090A6, 0x00008EA9, 0x00008DAC, 0x00008CAF, 0x00008AB2,
    0x000089B5, 0x000088B8, 0x000086BB, 0x000085BE, 0x000083C1, 0x000081C4, 0x000080C6, 0x00007EC9,
    0x00007CCC, 0x00007ACE, 0x000078D1, 0x000077D3, 0x000075D6, 0x000073D8, 0x000071DA, 0x00006FDC,
    0x00006DDE, 0x00006AE1, 0x000068E3, 0x000066E4, 0x000064E6, 0x000062E8, 0x00005FEA, 0x00005DEB,
    0x00005BED, 0x000058EF, 0x000056F0, 0x000054F1, 0x000051F3, 0x00004FF4, 0x00004CF5, 0x00004AF6,
    0x000047F7, 0x000045F8, 0x000042F9, 0x00003FFA, 0x00033DFB, 0x00073AFC, 0x000A38FC, 0x000E35FD,
    0x001132FD, 0x00152FFE, 0x00182DFE, 0x001C2AFE, 0x001F27FE, 0x002324FE, 0x002626FF, 0x002A2AFF,
    0x002D2DFF, 0x003131FF, 0x003434FF, 0x003838FF, 0x003B3BFF, 0x003F3FFF, 0x004242FF, 0x004646FF,
    0x004A4AFF, 0x004D4DFF, 0x005151FF, 0x005555FF, 0x005858FF, 0x005C5CFF, 0x006060FF, 0x006464FF,
    0x006868FF, 0x006C6CFF, 0x007070FF, 0x007474FF, 0x007878FF, 0x007C7CFF, 0x008181FF, 0x008585FF,
    0x008A8AFF, 0x008E8EFF, 0x009393FF, 0x009898FF, 0x009C9CFF, 0x00A1A1FF, 0x00A6A6FF, 0x00ABABFF,
    0x00B1B1FF, 0x00B6B6FF, 0x00BBBBFF, 0x00C1C1FF, 0x00C7C7FF, 0x00CCCCFF, 0x00D2D2FF, 0x00D8D8FF,
    0x00DEDEFF, 0x00E5E5FF, 0x00EBEBFF, 0x00F2F2FF, 0x00F8F8FF, 0x00FFFFFF, 0x00FFFFFF, 0x00FFFFFF,
    0x00FFFFFF, 0x00FFFFFF, 0x00FFFFFF, 0x00FFFFFF, 0x00FFFFFF, 0x00FFFFFF, 0x00FFFFFF, 0x0064FFFF
};

// GQRX
static unsigned long gqrxPalette[256] =
{
    // generated by NO3M from GQRX source
    /*
            for (int i = 0; i < DEFAPERTURE_SIZE; i++)
            {
                // level 0: black background
                if (i < 20) {
                    //m_ColorTbl[i].setRgb(0, 0, 0);
                    spec_r[i] = 0;
                    spec_g[i] = 0;
                    spec_b[i] = 0;
                // level 1: black -> blue
                } else if ((i >= 20) && (i < 70)) {
                    //m_ColorTbl[i].setRgb(0, 0, 140*(i-20)/50);
                    spec_r[i] = 0;
                    spec_g[i] = 0;
                    spec_b[i] = 140*(i-20)/50;
                // level 2: blue -> light-blue / greenish
                } else if ((i >= 70) && (i < 100)) {
                    //m_ColorTbl[i].setRgb(60*(i-70)/30, 125*(i-70)/30, 115*(i-70)/30 + 140);
                    spec_r[i] = 60*(i-70)/30;
                    spec_g[i] = 125*(i-70)/30;
                    spec_b[i] = 115*(i-70)/30 + 140;
                // level 3: light blue -> yellow
                } else if ((i >= 100) && (i < 150)) {
                    //m_ColorTbl[i].setRgb(195*(i-100)/50 + 60, 130*(i-100)/50 + 125, 255-(255*(i-100)/50));
                    spec_r[i] = 195*(i-100)/50 + 60;
                    spec_g[i] = 130*(i-100)/50 + 125;
                    spec_b[i] = 255-(255*(i-100)/50);
                // level 4: yellow -> red
                } else if ((i >= 150) && (i < 250)) {
                    //m_ColorTbl[i].setRgb(255, 255-255*(i-150)/100, 0);
                    spec_r[i] = 255;
                    spec_g[i] = 255-255*(i-150)/100;
                    spec_b[i] = 0;
                // level 5: red -> white
                } else if (i >= 250) {
                    //m_ColorTbl[i].setRgb(255, 255*(i-250)/5, 255*(i-250)/5);
                    spec_r[i] = 255;
                    spec_g[i] = 255*(i-250)/5;
                    spec_b[i] = 255*(i-250)/5;
                }
            }
     */
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00020000, 0x00050000, 0x00080000,
    0x000B0000, 0x000E0000, 0x00100000, 0x00130000, 0x00160000, 0x00190000, 0x001C0000, 0x001E0000,
    0x00210000, 0x00240000, 0x00270000, 0x002A0000, 0x002C0000, 0x002F0000, 0x00320000, 0x00350000,
    0x00380000, 0x003A0000, 0x003D0000, 0x00400000, 0x00430000, 0x00460000, 0x00480000, 0x004B0000,
    0x004E0000, 0x00510000, 0x00540000, 0x00560000, 0x00590000, 0x005C0000, 0x005F0000, 0x00620000,
    0x00640000, 0x00670000, 0x006A0000, 0x006D0000, 0x00700000, 0x00720000, 0x00750000, 0x00780000,
    0x007B0000, 0x007E0000, 0x00800000, 0x00830000, 0x00860000, 0x00890000, 0x008C0000, 0x008F0402,
    0x00930804, 0x00970C06, 0x009B1008, 0x009F140A, 0x00A3190C, 0x00A61D0E, 0x00AA2110, 0x00AE2512,
    0x00B22914, 0x00B62D16, 0x00BA3218, 0x00BD361A, 0x00C13A1C, 0x00C53E1E, 0x00C94220, 0x00CD4622,
    0x00D14B24, 0x00D44F26, 0x00D85328, 0x00DC572A, 0x00E05B2C, 0x00E45F2E, 0x00E86430, 0x00EB6832,
    0x00EF6C34, 0x00F37036, 0x00F77438, 0x00FB783A, 0x00FF7D3C, 0x00F97F3F, 0x00F48243, 0x00EF8447,
    0x00EA874B, 0x00E58A4F, 0x00E08C53, 0x00DB8F57, 0x00D6915B, 0x00D1945F, 0x00CC9763, 0x00C69966,
    0x00C19C6A, 0x00BC9E6E, 0x00B7A172, 0x00B2A476, 0x00ADA67A, 0x00A8A97E, 0x00A3AB82, 0x009EAE86,
    0x0099B18A, 0x0093B38D, 0x008EB691, 0x0089B895, 0x0084BB99, 0x007FBE9D, 0x007AC0A1, 0x0075C3A5,
    0x0070C5A9, 0x006BC8AD, 0x0066CBB1, 0x0060CDB4, 0x005BD0B8, 0x0056D2BC, 0x0051D5C0, 0x004CD8C4,
    0x0047DAC8, 0x0042DDCC, 0x003DDFD0, 0x0038E2D4, 0x0033E5D8, 0x002DE7DB, 0x0028EADF, 0x0023ECE3,
    0x001EEFE7, 0x0019F2EB, 0x0014F4EF, 0x000FF7F3, 0x000AF9F7, 0x0005FCFB, 0x0000FFFF, 0x0000FCFF,
    0x0000F9FF, 0x0000F7FF, 0x0000F4FF, 0x0000F2FF, 0x0000EFFF, 0x0000EDFF, 0x0000EAFF, 0x0000E8FF,
    0x0000E5FF, 0x0000E2FF, 0x0000E0FF, 0x0000DDFF, 0x0000DBFF, 0x0000D8FF, 0x0000D6FF, 0x0000D3FF,
    0x0000D1FF, 0x0000CEFF, 0x0000CCFF, 0x0000C9FF, 0x0000C6FF, 0x0000C4FF, 0x0000C1FF, 0x0000BFFF,
    0x0000BCFF, 0x0000BAFF, 0x0000B7FF, 0x0000B5FF, 0x0000B2FF, 0x0000AFFF, 0x0000ADFF, 0x0000AAFF,
    0x0000A8FF, 0x0000A5FF, 0x0000A3FF, 0x0000A0FF, 0x00009EFF, 0x00009BFF, 0x000099FF, 0x000096FF,
    0x000093FF, 0x000091FF, 0x00008EFF, 0x00008CFF, 0x000089FF, 0x000087FF, 0x000084FF, 0x000082FF,
    0x00007FFF, 0x00007CFF, 0x00007AFF, 0x000077FF, 0x000075FF, 0x000072FF, 0x000070FF, 0x00006DFF,
    0x00006BFF, 0x000068FF, 0x000066FF, 0x000063FF, 0x000060FF, 0x00005EFF, 0x00005BFF, 0x000059FF,
    0x000056FF, 0x000054FF, 0x000051FF, 0x00004FFF, 0x00004CFF, 0x000049FF, 0x000047FF, 0x000044FF,
    0x000042FF, 0x00003FFF, 0x00003DFF, 0x00003AFF, 0x000038FF, 0x000035FF, 0x000033FF, 0x000030FF,
    0x00002DFF, 0x00002BFF, 0x000028FF, 0x000026FF, 0x000023FF, 0x000021FF, 0x00001EFF, 0x00001CFF,
    0x000019FF, 0x000016FF, 0x000014FF, 0x000011FF, 0x00000FFF, 0x00000CFF, 0x00000AFF, 0x000007FF,
    0x000005FF, 0x000002FF, 0x000000FF, 0x003333FF, 0x006666FF, 0x009999FF, 0x00CCCCFF, 0x00FFFFFF
};

static unsigned long winradPalette[256] =
{
    // generated by NO3M
    /*
    { 0, 4, 56}, { 0, 4, 56}, { 0, 4, 56}, { 0, 5, 58}, { 0, 5, 59},
    { 0, 5, 61}, { 0, 7, 64}, { 0, 9, 68}, { 0, 10, 72}, { 0, 12, 76},
    { 0, 14, 80}, { 0, 15, 85}, { 0, 17, 90}, { 0, 19, 95}, { 0, 22, 101},
    { 1, 24, 106}, { 2, 26, 111}, { 4, 27, 115}, { 5, 29, 119}, { 6, 31, 125},
    { 7, 33, 129}, { 9, 35, 134}, { 10, 36, 138}, { 12, 38, 142}, { 13, 40, 146},
    { 14, 41, 149}, { 15, 43, 153}, { 16, 44, 155}, { 17, 46, 159}, { 18, 47, 161},
    { 19, 49, 165}, { 21, 51, 168}, { 22, 53, 172}, { 22, 54, 175}, { 23, 55, 178},
    { 24, 57, 181}, { 25, 58, 185}, { 26, 60, 187}, { 27, 61, 191}, { 28, 62, 194},
    { 29, 64, 197}, { 29, 65, 199}, { 30, 66, 201}, { 31, 67, 204}, { 32, 70, 208},
    { 33, 72, 211}, { 34, 74, 213}, { 35, 75, 216}, { 36, 76, 218}, { 36, 78, 219},
    { 37, 79, 220}, { 37, 81, 220}, { 38, 83, 221}, { 39, 85, 221}, { 39, 87, 220},
    { 38, 89, 218}, { 37, 92, 214}, { 37, 94, 210}, { 35, 96, 204}, { 34, 98, 198},
    { 33, 101, 192}, { 32, 104, 185}, { 31, 106, 178}, { 29, 109, 170}, { 27, 112, 162},
    { 25, 115, 154}, { 23, 118, 145}, { 22, 120, 137}, { 21, 123, 130}, { 19, 125, 123},
    { 18, 128, 117}, { 17, 130, 111}, { 16, 133, 105}, { 15, 135, 99}, { 14, 138, 94},
    { 14, 140, 89}, { 14, 143, 85}, { 14, 146, 81}, { 14, 148, 78}, { 14, 151, 73},
    { 15, 154, 70}, { 15, 157, 66}, { 16, 160, 64}, { 17, 163, 61}, { 19, 167, 59},
    { 20, 171, 57}, { 22, 175, 55}, { 25, 178, 54}, { 28, 182, 53}, { 31, 186, 54},
    { 35, 189, 53}, { 38, 192, 53}, { 42, 194, 52}, { 46, 196, 53}, { 49, 197, 53},
    { 53, 198, 53}, { 57, 199, 54}, { 61, 200, 54}, { 65, 200, 53}, { 69, 199, 53},
    { 73, 199, 52}, { 76, 198, 52}, { 80, 197, 51}, { 84, 196, 51}, { 89, 194, 50},
    { 93, 192, 50}, { 98, 191, 50}, {103, 189, 49}, {109, 186, 49}, {115, 183, 48},
    {122, 179, 47}, {129, 175, 46}, {136, 171, 45}, {144, 165, 44}, {152, 159, 42},
    {160, 153, 40}, {169, 145, 37}, {177, 137, 34}, {185, 129, 31}, {193, 120, 28},
    {200, 111, 25}, {208, 101, 22}, {215, 93, 18}, {221, 85, 15}, {226, 77, 12},
    {230, 71, 10}, {233, 65, 8}, {237, 62, 6}, {238, 58, 5}, {240, 56, 4},
    {241, 55, 3}, {243, 54, 3}, {244, 53, 4}, {244, 53, 4}, {244, 53, 3},
    {244, 53, 2}, {245, 53, 2}, {245, 53, 2}, {245, 53, 2}, {245, 53, 2},
    {246, 54, 3}, {246, 54, 3}, {246, 54, 3}, {246, 54, 3}, {246, 54, 3},
    {246, 54, 3}, {246, 54, 3}, {246, 54, 3}, {246, 54, 3}, {246, 54, 3},
    {246, 53, 3}, {247, 53, 3}, {247, 52, 3}, {247, 52, 3}, {247, 52, 3},
    {247, 52, 3}, {247, 52, 2}, {247, 52, 2}, {247, 53, 2}, {247, 53, 3},
    {248, 53, 4}, {247, 53, 3}, {246, 53, 3}, {246, 54, 3}, {246, 55, 4},
    {246, 57, 4}, {246, 59, 5}, {246, 63, 7}, {246, 66, 9}, {247, 71, 11},
    {246, 75, 13}, {247, 80, 15}, {248, 85, 18}, {248, 90, 20}, {249, 95, 23},
    {249, 101, 26}, {249, 105, 28}, {250, 110, 30}, {250, 114, 31}, {250, 119, 33},
    {250, 122, 35}, {251, 125, 36}, {251, 128, 37}, {252, 130, 39}, {252, 133, 40},
    {252, 135, 41}, {252, 136, 41}, {252, 138, 41}, {252, 139, 42}, {252, 141, 43},
    {252, 142, 43}, {252, 143, 42}, {252, 144, 42}, {252, 146, 43}, {251, 147, 43},
    {251, 148, 43}, {251, 150, 43}, {250, 151, 42}, {251, 153, 42}, {250, 154, 42},
    {250, 156, 41}, {250, 158, 41}, {251, 160, 41}, {251, 163, 41}, {252, 166, 41},
    {252, 168, 39}, {251, 170, 38}, {251, 173, 37}, {251, 176, 36}, {251, 179, 34},
    {251, 182, 33}, {250, 185, 32}, {250, 188, 32}, {250, 191, 33}, {251, 194, 34},
    {251, 197, 35}, {251, 200, 37}, {251, 203, 40}, {252, 206, 43}, {252, 209, 48},
    {252, 211, 52}, {252, 214, 58}, {252, 216, 64}, {252, 219, 70}, {253, 220, 76},
    {253, 222, 82}, {253, 224, 88}, {253, 225, 93}, {252, 227, 99}, {252, 228, 105},
    {252, 229, 111}, {252, 230, 116}, {252, 231, 121}, {253, 232, 127}, {253, 233, 133},
    {253, 234, 138}, {252, 236, 144}, {252, 237, 149}, {252, 237, 154}, {251, 238, 159},
    {251, 238, 164}, {250, 239, 169}, {251, 240, 174}, {251, 241, 180}, {251, 242, 185},
    {251, 243, 190}, {251, 244, 195}, {251, 245, 200}, {250, 245, 205}, {250, 246, 209},
    {250, 246, 213}, {250, 248, 217}, {250, 249, 220}, {250, 251, 234}, {250, 253, 245},
    {250, 255, 255}
    */
    0x00380400, 0x00380400, 0x00380400, 0x003A0500, 0x003B0500, 0x003D0500, 0x00400700, 0x00440900,
    0x00480A00, 0x004C0C00, 0x00500E00, 0x00550F00, 0x005A1100, 0x005F1300, 0x00651600, 0x006A1801,
    0x006F1A02, 0x00731B04, 0x00771D05, 0x007D1F06, 0x00812107, 0x00862309, 0x008A240A, 0x008E260C,
    0x0092280D, 0x0095290E, 0x00992B0F, 0x009B2C10, 0x009F2E11, 0x00A12F12, 0x00A53113, 0x00A83315,
    0x00AC3516, 0x00AF3616, 0x00B23717, 0x00B53918, 0x00B93A19, 0x00BB3C1A, 0x00BF3D1B, 0x00C23E1C,
    0x00C5401D, 0x00C7411D, 0x00C9421E, 0x00CC431F, 0x00D04620, 0x00D34821, 0x00D54A22, 0x00D84B23,
    0x00DA4C24, 0x00DB4E24, 0x00DC4F25, 0x00DC5125, 0x00DD5326, 0x00DD5527, 0x00DC5727, 0x00DA5926,
    0x00D65C25, 0x00D25E25, 0x00CC6023, 0x00C66222, 0x00C06521, 0x00B96820, 0x00B26A1F, 0x00AA6D1D,
    0x00A2701B, 0x009A7319, 0x00917617, 0x00897816, 0x00827B15, 0x007B7D13, 0x00758012, 0x006F8211,
    0x00698510, 0x0063870F, 0x005E8A0E, 0x00598C0E, 0x00558F0E, 0x0051920E, 0x004E940E, 0x0049970E,
    0x00469A0F, 0x00429D0F, 0x0040A010, 0x003DA311, 0x003BA713, 0x0039AB14, 0x0037AF16, 0x0036B219,
    0x0035B61C, 0x0036BA1F, 0x0035BD23, 0x0035C026, 0x0034C22A, 0x0035C42E, 0x0035C531, 0x0035C635,
    0x0036C739, 0x0036C83D, 0x0035C841, 0x0035C745, 0x0034C749, 0x0034C64C, 0x0033C550, 0x0033C454,
    0x0032C259, 0x0032C05D, 0x0032BF62, 0x0031BD67, 0x0031BA6D, 0x0030B773, 0x002FB37A, 0x002EAF81,
    0x002DAB88, 0x002CA590, 0x002A9F98, 0x002899A0, 0x002591A9, 0x002289B1, 0x001F81B9, 0x001C78C1,
    0x00196FC8, 0x001665D0, 0x00125DD7, 0x000F55DD, 0x000C4DE2, 0x000A47E6, 0x000841E9, 0x00063EED,
    0x00053AEE, 0x000438F0, 0x000337F1, 0x000336F3, 0x000435F4, 0x000435F4, 0x000335F4, 0x000235F4,
    0x000235F5, 0x000235F5, 0x000235F5, 0x000235F5, 0x000336F6, 0x000336F6, 0x000336F6, 0x000336F6,
    0x000336F6, 0x000336F6, 0x000336F6, 0x000336F6, 0x000336F6, 0x000336F6, 0x000335F6, 0x000335F7,
    0x000334F7, 0x000334F7, 0x000334F7, 0x000334F7, 0x000234F7, 0x000234F7, 0x000235F7, 0x000335F7,
    0x000435F8, 0x000335F7, 0x000335F6, 0x000336F6, 0x000437F6, 0x000439F6, 0x00053BF6, 0x00073FF6,
    0x000942F6, 0x000B47F7, 0x000D4BF6, 0x000F50F7, 0x001255F8, 0x00145AF8, 0x00175FF9, 0x001A65F9,
    0x001C69F9, 0x001E6EFA, 0x001F72FA, 0x002177FA, 0x00237AFA, 0x00247DFB, 0x002580FB, 0x002782FC,
    0x002885FC, 0x002987FC, 0x002988FC, 0x00298AFC, 0x002A8BFC, 0x002B8DFC, 0x002B8EFC, 0x002A8FFC,
    0x002A90FC, 0x002B92FC, 0x002B93FB, 0x002B94FB, 0x002B96FB, 0x002A97FA, 0x002A99FB, 0x002A9AFA,
    0x00299CFA, 0x00299EFA, 0x0029A0FB, 0x0029A3FB, 0x0029A6FC, 0x0027A8FC, 0x0026AAFB, 0x0025ADFB,
    0x0024B0FB, 0x0022B3FB, 0x0021B6FB, 0x0020B9FA, 0x0020BCFA, 0x0021BFFA, 0x0022C2FB, 0x0023C5FB,
    0x0025C8FB, 0x0028CBFB, 0x002BCEFC, 0x0030D1FC, 0x0034D3FC, 0x003AD6FC, 0x0040D8FC, 0x0046DBFC,
    0x004CDCFD, 0x0052DEFD, 0x0058E0FD, 0x005DE1FD, 0x0063E3FC, 0x0069E4FC, 0x006FE5FC, 0x0074E6FC,
    0x0079E7FC, 0x007FE8FD, 0x0085E9FD, 0x008AEAFD, 0x0090ECFC, 0x0095EDFC, 0x009AEDFC, 0x009FEEFB,
    0x00A4EEFB, 0x00A9EFFA, 0x00AEF0FB, 0x00B4F1FB, 0x00B9F2FB, 0x00BEF3FB, 0x00C3F4FB, 0x00C8F5FB,
    0x00CDF5FA, 0x00D1F6FA, 0x00D5F6FA, 0x00D9F8FA, 0x00DCF9FA, 0x00EAFBFA, 0x00F5FDFA, 0x00FFFFFA
};

static unsigned long ghpsdrPalette[256] =
{
    // GHPSDR source
    /*
            for(int i = 0; i < 256; i++) {
                float percent=((float)i/(float)apertureSize);
                if(percent<(2.0f/9.0f)) {
                    float local_percent = percent / (2.0f/9.0f);
                    spec_r[i] = 0;
                    spec_g[i] = 0;
                    spec_b[i] = (int)(local_percent*255);
                } else if(percent<(3.0f/9.0f)) {
                    float local_percent = (percent - 2.0f/9.0f) / (1.0f/9.0f);
                    spec_r[i] = 0;
                    spec_g[i] = (int)(local_percent*255);
                    spec_b[i] = 255;
                } else if(percent<(4.0f/9.0f)) {
                    float local_percent = (percent - 3.0f/9.0f) / (1.0f/9.0f);
                    spec_r[i] = 0;
                    spec_g[i] = 255;
                    spec_b[i] = (int)((1.0f-local_percent)*255);
                } else if(percent<(5.0f/9.0f)) {
                    float local_percent = (percent - 4.0f/9.0f) / (1.0f/9.0f);
                    spec_r[i] = (int)(local_percent*255);
                    spec_g[i] = 255;
                    spec_b[i] = 0;
                } else if(percent<(7.0f/9.0f)) {
                    float local_percent = (percent - 5.0f/9.0f) / (2.0f/9.0f);
                    spec_r[i] = 255;
                    spec_g[i] = (int)((1.0f-local_percent)*255);
                    spec_b[i] = 0;
                } else if(percent<(8.0f/9.0f)) {
                    float local_percent = (percent - 7.0f/9.0f) / (1.0f/9.0f);
                    spec_r[i] = 255;
                    spec_g[i] = 0;
                    spec_b[i] = (int)(local_percent*255);
                } else {
                    float local_percent = (percent - 8.0f/9.0f) / (1.0f/9.0f);
                    spec_r[i] = (int)((0.75f + 0.25f*(1.0f-local_percent))*255.0f);
                    spec_g[i] = (int)(local_percent*255.0f*0.5f);
                    spec_b[i] = 255;
                }
            }
    */
    0x00000000, 0x00040000, 0x00080000, 0x000D0000, 0x00110000, 0x00160000, 0x001A0000, 0x001F0000,
    0x00230000, 0x00280000, 0x002C0000, 0x00310000, 0x00350000, 0x003A0000, 0x003E0000, 0x00430000,
    0x00470000, 0x004C0000, 0x00500000, 0x00550000, 0x00590000, 0x005E0000, 0x00620000, 0x00670000,
    0x006B0000, 0x00700000, 0x00740000, 0x00790000, 0x007D0000, 0x00810000, 0x00860000, 0x008A0000,
    0x008F0000, 0x00930000, 0x00980000, 0x009C0000, 0x00A10000, 0x00A50000, 0x00AA0000, 0x00AE0000,
    0x00B30000, 0x00B70000, 0x00BC0000, 0x00C00000, 0x00C50000, 0x00C90000, 0x00CE0000, 0x00D20000,
    0x00D70000, 0x00DB0000, 0x00E00000, 0x00E40000, 0x00E90000, 0x00ED0000, 0x00F20000, 0x00F60000,
    0x00FB0000, 0x00FF0000, 0x00FF0900, 0x00FF1200, 0x00FF1B00, 0x00FF2400, 0x00FF2D00, 0x00FF3600,
    0x00FF3F00, 0x00FF4800, 0x00FF5100, 0x00FF5A00, 0x00FF6300, 0x00FF6C00, 0x00FF7500, 0x00FF7E00,
    0x00FF8700, 0x00FF9000, 0x00FF9900, 0x00FFA200, 0x00FFAB00, 0x00FFB400, 0x00FFBD00, 0x00FFC600,
    0x00FFCF00, 0x00FFD800, 0x00FFE100, 0x00FFEA00, 0x00FFF300, 0x00FFFC00, 0x00F9FF00, 0x00F0FF00,
    0x00E7FF00, 0x00DEFF00, 0x00D5FF00, 0x00CCFF00, 0x00C3FF00, 0x00BAFF00, 0x00B1FF00, 0x00A8FF00,
    0x009FFF00, 0x0096FF00, 0x008DFF00, 0x0084FF00, 0x007BFF00, 0x0072FF00, 0x0069FF00, 0x0060FF00,
    0x0057FF00, 0x004EFF00, 0x0045FF00, 0x003CFF00, 0x0033FF00, 0x002AFF00, 0x0021FF00, 0x0018FF00,
    0x000FFF00, 0x0006FF00, 0x0000FF01, 0x0000FF0A, 0x0000FF13, 0x0000FF1C, 0x0000FF25, 0x0000FF2E,
    0x0000FF37, 0x0000FF40, 0x0000FF49, 0x0000FF52, 0x0000FF5B, 0x0000FF64, 0x0000FF6D, 0x0000FF76,
    0x0000FF7F, 0x0000FF88, 0x0000FF91, 0x0000FF9A, 0x0000FFA3, 0x0000FFAC, 0x0000FFB5, 0x0000FFBE,
    0x0000FFC7, 0x0000FFD0, 0x0000FFD9, 0x0000FFE2, 0x0000FFEB, 0x0000FFF4, 0x0000FFFD, 0x0000FBFF,
    0x0000F7FF, 0x0000F2FF, 0x0000EEFF, 0x0000E9FF, 0x0000E5FF, 0x0000E0FF, 0x0000DCFF, 0x0000D7FF,
    0x0000D3FF, 0x0000CEFF, 0x0000CAFF, 0x0000C5FF, 0x0000C1FF, 0x0000BCFF, 0x0000B8FF, 0x0000B3FF,
    0x0000AFFF, 0x0000AAFF, 0x0000A6FF, 0x0000A1FF, 0x00009DFF, 0x000098FF, 0x000094FF, 0x00008FFF,
    0x00008BFF, 0x000086FF, 0x000082FF, 0x00007EFF, 0x000079FF, 0x000075FF, 0x000070FF, 0x00006CFF,
    0x000067FF, 0x000063FF, 0x00005EFF, 0x00005AFF, 0x000055FF, 0x000051FF, 0x00004CFF, 0x000048FF,
    0x000043FF, 0x00003FFF, 0x00003AFF, 0x000036FF, 0x000031FF, 0x00002DFF, 0x000028FF, 0x000024FF,
    0x00001FFF, 0x00001BFF, 0x000016FF, 0x000012FF, 0x00000DFF, 0x000009FF, 0x000004FF, 0x000000FF,
    0x000700FF, 0x001000FF, 0x001900FF, 0x002200FF, 0x002B00FF, 0x003400FF, 0x003D00FF, 0x004600FF,
    0x004F00FF, 0x005800FF, 0x006100FF, 0x006A00FF, 0x007300FF, 0x007C00FF, 0x008500FF, 0x008E00FF,
    0x009700FF, 0x00A000FF, 0x00A900FF, 0x00B200FF, 0x00BB00FF, 0x00C400FF, 0x00CD00FF, 0x00D600FF,
    0x00DF00FF, 0x00E800FF, 0x00F100FF, 0x00FA00FF, 0x00FF01FE, 0x00FF06FB, 0x00FF0AF9, 0x00FF0FF7,
    0x00FF13F5, 0x00FF18F2, 0x00FF1CF0, 0x00FF21EE, 0x00FF25EC, 0x00FF2AE9, 0x00FF2EE7, 0x00FF33E5,
    0x00FF37E3, 0x00FF3CE0, 0x00FF40DE, 0x00FF45DC, 0x00FF49DA, 0x00FF4ED7, 0x00FF52D5, 0x00FF57D3,
    0x00FF5BD1, 0x00FF60CE, 0x00FF64CC, 0x00FF69CA, 0x00FF6DC8, 0x00FF72C5, 0x00FF76C3, 0x00FF7BC1
};

static unsigned long spectranPalette[256] =
{
    /*
    // from Winrad
    static short LogPaletteData[256][3] =
    // loglut
    {
    { 0, 0, 0}, { 0, 0, 4}, { 0, 1, 8}, { 0, 1, 11}, { 0, 2, 15},
     { 0, 2, 18}, { 0, 3, 21}, { 1, 3, 24}, { 1, 4, 28}, { 1, 4, 31},
     { 1, 5, 33}, { 2, 5, 36}, { 2, 6, 39}, { 2, 6, 42}, { 2, 7, 44},
     { 3, 7, 47}, { 3, 8, 50}, { 3, 8, 52}, { 4, 9, 55}, { 4, 9, 57},
     { 5, 10, 59}, { 5, 11, 61}, { 5, 11, 64}, { 6, 12, 66}, { 6, 13, 68},
     { 7, 13, 70}, { 7, 14, 72}, { 8, 14, 74}, { 8, 15, 76}, { 9, 16, 78},
     { 9, 16, 80}, { 10, 17, 82}, { 10, 18, 84}, { 11, 18, 86}, { 12, 19, 87},
     { 12, 20, 89}, { 13, 21, 91}, { 13, 21, 93}, { 14, 22, 94}, { 15, 23, 96},
     { 15, 23, 98}, { 16, 24, 99}, { 17, 25, 101}, { 17, 26, 102}, { 18, 26, 104},
     { 19, 27, 105}, { 19, 28, 107}, { 20, 29, 108}, { 21, 30, 110}, { 21, 30, 111},
     { 22, 31, 113}, { 23, 32, 114}, { 23, 33, 116}, { 24, 33, 117}, { 25, 34, 118},
     { 26, 35, 120}, { 26, 36, 121}, { 27, 37, 122}, { 28, 38, 124}, { 29, 38, 125},
     { 30, 39, 126}, { 30, 40, 127}, { 31, 41, 129}, { 32, 42, 130}, { 33, 43, 131},
     { 34, 43, 132}, { 34, 44, 133}, { 35, 45, 135}, { 36, 46, 136}, { 37, 47, 137},
     { 38, 48, 138}, { 39, 49, 139}, { 39, 50, 140}, { 40, 50, 141}, { 41, 51, 142},
     { 42, 52, 144}, { 43, 53, 145}, { 44, 54, 146}, { 45, 55, 147}, { 46, 56, 148},
     { 46, 57, 149}, { 47, 58, 150}, { 48, 59, 151}, { 49, 59, 152}, { 50, 60, 153},
     { 51, 61, 154}, { 52, 62, 155}, { 53, 63, 156}, { 54, 64, 157}, { 55, 65, 158},
     { 56, 66, 159}, { 57, 67, 160}, { 58, 68, 160}, { 59, 69, 161}, { 60, 70, 162},
     { 61, 71, 163}, { 62, 72, 164}, { 63, 73, 165}, { 63, 74, 166}, { 64, 75, 167},
     { 65, 76, 168}, { 66, 77, 168}, { 67, 78, 169}, { 68, 79, 170}, { 69, 80, 171},
     { 70, 81, 172}, { 72, 82, 173}, { 73, 83, 174}, { 74, 84, 174}, { 75, 85, 175},
     { 76, 86, 176}, { 77, 87, 177}, { 78, 88, 178}, { 79, 89, 178}, { 80, 90, 179},
     { 81, 91, 180}, { 82, 92, 181}, { 83, 93, 181}, { 84, 94, 182}, { 85, 95, 183},
     { 86, 96, 184}, { 87, 97, 184}, { 88, 98, 185}, { 89, 99, 186}, { 90, 100, 187},
     { 91, 101, 187}, { 93, 102, 188}, { 94, 103, 189}, { 95, 104, 190}, { 96, 105, 190},
     { 97, 106, 191}, { 98, 107, 192}, { 99, 108, 192}, {100, 110, 193}, {101, 111, 194},
     {103, 112, 194}, {104, 113, 195}, {105, 114, 196}, {106, 115, 196}, {107, 116, 197},
     {108, 117, 198}, {109, 118, 198}, {110, 119, 199}, {112, 120, 200}, {113, 121, 200},
     {114, 123, 201}, {115, 124, 202}, {116, 125, 202}, {117, 126, 203}, {118, 127, 204},
     {120, 128, 204}, {121, 129, 205}, {122, 130, 205}, {123, 131, 206}, {124, 133, 207},
     {125, 134, 207}, {127, 135, 208}, {128, 136, 208}, {129, 137, 209}, {130, 138, 210},
     {131, 139, 210}, {133, 140, 211}, {134, 142, 211}, {135, 143, 212}, {136, 144, 213},
     {137, 145, 213}, {139, 146, 214}, {140, 147, 214}, {141, 148, 215}, {142, 150, 215},
     {143, 151, 216}, {145, 152, 217}, {146, 153, 217}, {147, 154, 218}, {148, 155, 218},
     {150, 156, 219}, {151, 158, 219}, {152, 159, 220}, {153, 160, 220}, {154, 161, 221},
     {156, 162, 221}, {157, 163, 222}, {158, 165, 222}, {159, 166, 223}, {161, 167, 224},
     {162, 168, 224}, {163, 169, 225}, {164, 171, 225}, {166, 172, 226}, {167, 173, 226},
     {168, 174, 227}, {169, 175, 227}, {171, 176, 228}, {172, 178, 228}, {173, 179, 229},
     {175, 180, 229}, {176, 181, 230}, {177, 182, 230}, {178, 184, 231}, {180, 185, 231},
     {181, 186, 232}, {182, 187, 232}, {184, 188, 233}, {185, 190, 233}, {186, 191, 234},
     {187, 192, 234}, {189, 193, 235}, {190, 195, 235}, {191, 196, 235}, {193, 197, 236},
     {194, 198, 236}, {195, 199, 237}, {197, 201, 237}, {198, 202, 238}, {199, 203, 238},
     {200, 204, 239}, {202, 206, 239}, {203, 207, 240}, {204, 208, 240}, {206, 209, 241},
     {207, 210, 241}, {208, 212, 241}, {210, 213, 242}, {211, 214, 242}, {212, 215, 243},
     {214, 217, 243}, {215, 218, 244}, {216, 219, 244}, {218, 220, 244}, {219, 222, 245},
     {220, 223, 245}, {222, 224, 246}, {223, 225, 246}, {224, 227, 247}, {226, 228, 247},
     {227, 229, 247}, {229, 230, 248}, {230, 232, 248}, {231, 233, 249}, {233, 234, 249},
     {234, 236, 250}, {235, 237, 250}, {237, 238, 250}, {238, 239, 251}, {239, 241, 251},
     {241, 242, 252}, {242, 243, 252}, {244, 244, 252}, {245, 246, 253}, {246, 247, 253},
     {248, 248, 254}, {249, 250, 254}, {250, 251, 254}, {252, 252, 255}, {253, 253, 255},
     {255, 255, 255}
    };
*/
    // from speclab
    0x00030202,0x00050202,0x00070303,0x00090303,0x000B0404,0x000D0404,0x000F0505,0x00110505,
    0x00130606,0x00150606,0x00170707,0x00190707,0x001B0808,0x001D0808,0x001F0909,0x00210909,
    0x00230A0A,0x00250A0A,0x00270B0B,0x00290B0B,0x002B0C0C,0x002E0C0C,0x00300D0D,0x00320D0D,
    0x00340E0E,0x00360E0E,0x00380F0F,0x003A0F0F,0x003C1010,0x003E1010,0x00401111,0x00421111,
    0x00441212,0x00461212,0x00481313,0x004A1313,0x004C1414,0x004E1414,0x00501515,0x00521515,
    0x00541616,0x00571616,0x00591717,0x005B1717,0x005D1818,0x005F1818,0x00611919,0x00631919,
    0x00651A1A,0x00671B1B,0x00691B1B,0x006B1C1C,0x006D1C1C,0x006F1D1D,0x00711D1D,0x00731E1E,
    0x00751E1E,0x00771F1F,0x00791F1F,0x007B2020,0x007D2020,0x007F2121,0x00822121,0x00842222,
    0x00862222,0x00882323,0x008A2323,0x008C2424,0x008E2424,0x00902525,0x00922525,0x00942626,
    0x00962626,0x00982727,0x009A2727,0x009C2828,0x009E2828,0x00A02929,0x00A22929,0x00A42A2A,
    0x00A62A2A,0x00A82B2B,0x00AB2B2B,0x00AD2C2C,0x00AF2C2C,0x00B12D2D,0x00B32D2D,0x00B52E2E,
    0x00B72E2E,0x00B92F2F,0x00BB2F2F,0x00BD3030,0x00BF3030,0x00C13131,0x00C33131,0x00C53232,
    0x00C73333,0x00C93333,0x00CB3434,0x00CD3434,0x00CF3535,0x00D13636,0x00D33636,0x00D63737,
    0x00D83737,0x00DA3838,0x00DC3939,0x00DE3939,0x00E03A3A,0x00E23B3B,0x00E43B3B,0x00E63C3C,
    0x00E83C3C,0x00EA3D3D,0x00EC3E3E,0x00EE3E3E,0x00F03F3F,0x00F24040,0x00F44040,0x00F64141,
    0x00F84141,0x00FA4242,0x00FC4343,0x00FF4343,0x00FE4444,0x00FE4444,0x00FE4545,0x00FF4646,
    0x00FF4646,0x00FF4747,0x00FF4848,0x00FF4848,0x00FF4949,0x00FF4949,0x00FF4A4A,0x00FF4B4B,
    0x00FF4B4B,0x00FF4C4C,0x00FF4D4D,0x00FF4D4D,0x00FF4E4E,0x00FF4F4F,0x00FF5050,0x00FF5151,
    0x00FF5151,0x00FF5252,0x00FF5353,0x00FF5454,0x00FF5555,0x00FF5555,0x00FF5656,0x00FF5757,
    0x00FF5858,0x00FF5959,0x00FF5959,0x00FF5A5A,0x00FF5B5B,0x00FF5C5C,0x00FF5D5D,0x00FF5D5D,
    0x00FF5E5E,0x00FF5F5F,0x00FF6060,0x00FF6161,0x00FF6161,0x00FF6262,0x00FF6363,0x00FF6464,
    0x00FF6565,0x00FF6565,0x00FF6666,0x00FF6767,0x00FF6868,0x00FF6969,0x00FF6969,0x00FF6A6A,
    0x00FF6B6B,0x00FF6C6C,0x00FF6D6D,0x00FF6D6D,0x00FF6E6E,0x00FF6F6F,0x00FF7070,0x00FF7171,
    0x00FF7272,0x00FF7373,0x00FF7474,0x00FF7676,0x00FF7777,0x00FF7878,0x00FF7A7A,0x00FF7B7B,
    0x00FF7C7C,0x00FF7E7E,0x00FF7F7F,0x00FF8080,0x00FF8282,0x00FF8383,0x00FF8484,0x00FF8686,
    0x00FF8787,0x00FF8989,0x00FF8A8A,0x00FF8C8C,0x00FF8E8E,0x00FF8F8F,0x00FF9191,0x00FF9393,
    0x00FF9595,0x00FF9696,0x00FF9898,0x00FF9A9A,0x00FF9B9B,0x00FF9D9D,0x00FF9F9F,0x00FFA1A1,
    0x00FFA2A2,0x00FFA4A4,0x00FFA6A6,0x00FFA7A7,0x00FFA9A9,0x00FFABAB,0x00FFADAD,0x00FFAEAE,
    0x00FFB0B0,0x00FFB2B2,0x00FFB5B5,0x00FFB7B7,0x00FFBABA,0x00FFBCBC,0x00FFBFBF,0x00FFC1C1,
    0x00FFC4C4,0x00FFC6C6,0x00FFC9C9,0x00FFCBCB,0x00FFCECE,0x00FFD1D1,0x00FFD3D3,0x00FFD6D6,
    0x00FFD8D8,0x00FFDBDB,0x00FFDDDD,0x00FFE0E0,0x00FFE2E2,0x00FFE5E5,0x00FFE8E8,0x00FFEAEA,
    0x00FFEDED,0x00FFEFEF,0x00FFF2F2,0x00FFF4F4,0x00FFF7F7,0x00FFF9F9,0x00FFFCFC,0x00FEFFFF
};

static unsigned long hornePalette[256] =
{
    // generated by NO3M
    // Palette di Horne, R G B  come data da Romero
    /*
    {
    { 0, 0, 0}, { 0, 0, 7}, { 0, 0, 12}, { 0, 0, 22}, { 0, 0, 24},
     { 0, 0, 31}, { 0, 0, 41}, { 0, 0, 52}, { 0, 0, 70}, { 0, 0, 76},
     { 0, 0, 86}, { 0, 0,101}, { 0, 0,114}, { 0, 0,122}, { 0, 0,131},
     { 0, 0,142}, { 0, 0,152}, { 0, 0,157}, { 0, 0,169}, { 0, 1,185},
     { 0, 4,192}, { 0, 8,194}, { 0, 10,197}, { 0, 13,198}, { 0, 14,198},
     { 0, 17,199}, { 0, 21,201}, { 0, 25,202}, { 0, 26,203}, { 0, 28,203},
     { 0, 30,203}, { 0, 33,204}, { 0, 34,205}, { 0, 37,207}, { 0, 40,208},
     { 0, 42,209}, { 0, 44,211}, { 0, 46,212}, { 0, 49,212}, { 0, 52,212},
     { 0, 52,212}, { 0, 54,213}, { 0, 59,213}, { 0, 61,213}, { 0, 66,213},
     { 0, 70,215}, { 0, 72,216}, { 0, 74,216}, { 0, 76,217}, { 0, 78,217},
     { 0, 80,217}, { 0, 81,217}, { 0, 83,217}, { 0, 86,218}, { 0, 89,219},
     { 0, 92,220}, { 0, 94,220}, { 0, 95,221}, { 0, 97,221}, { 0, 98,221},
     { 0, 99,222}, { 0,102,222}, { 0,105,223}, { 0,107,223}, { 0,109,223},
     { 0,113,223}, { 0,117,224}, { 0,120,224}, { 0,123,224}, { 0,127,225},
     { 0,129,225}, { 0,131,226}, { 0,133,227}, { 0,136,228}, { 0,139,229},
     { 0,142,229}, { 0,144,229}, { 0,146,230}, { 0,147,230}, { 0,150,231},
     { 0,151,231}, { 0,155,231}, { 0,156,232}, { 0,158,232}, { 0,161,233},
     { 0,164,233}, { 0,167,234}, { 0,170,235}, { 0,173,235}, { 0,175,236},
     { 0,176,237}, { 0,178,238}, { 0,179,238}, { 0,181,238}, { 0,184,239},
     { 0,186,239}, { 0,188,239}, { 0,191,239}, { 0,192,239}, { 0,194,239},
     { 0,196,239}, { 0,200,240}, { 0,203,240}, { 0,207,241}, { 0,212,241},
     { 0,218,242}, { 0,223,243}, { 0,225,243}, { 0,226,245}, { 0,230,245},
     { 0,233,245}, { 0,235,247}, { 0,238,248}, { 0,240,248}, { 0,244,249},
     { 0,248,250}, { 3,250,251}, { 4,251,252}, { 8,253,253}, { 9,254,254},
     { 11,255,254}, { 14,255,254}, { 15,255,252}, { 20,255,251}, { 23,255,250},
     { 26,255,248}, { 27,255,246}, { 30,255,245}, { 32,255,244}, { 35,255,242},
     { 36,255,240}, { 38,255,238}, { 40,255,236}, { 43,255,234}, { 45,255,234},
     { 48,255,232}, { 51,255,232}, { 54,255,229}, { 57,255,226}, { 60,255,223},
     { 63,255,220}, { 67,255,217}, { 71,255,215}, { 74,255,212}, { 78,255,210},
     { 83,255,208}, { 87,255,207}, { 92,255,203}, { 95,255,200}, { 99,255,198},
     {103,255,196}, {104,255,193}, {108,255,192}, {113,255,191}, {117,255,189},
     {121,255,186}, {126,255,184}, {130,255,181}, {134,255,179}, {137,254,177},
     {140,254,175}, {144,254,173}, {150,254,172}, {154,254,170}, {157,254,168},
     {159,254,167}, {163,254,165}, {167,254,162}, {171,254,161}, {175,254,159},
     {179,254,157}, {182,254,156}, {184,254,154}, {186,254,153}, {187,254,152},
     {190,254,151}, {192,254,150}, {195,254,147}, {199,254,145}, {202,254,142},
     {204,254,140}, {207,254,137}, {211,254,135}, {214,254,133}, {218,254,131},
     {221,254,129}, {223,254,128}, {227,254,125}, {230,254,123}, {233,254,122},
     {235,254,120}, {238,254,116}, {241,254,114}, {245,254,113}, {248,254,111},
     {252,254,110}, {254,254,109}, {254,253,107}, {255,254,106}, {255,254,105},
     {255,252,104}, {255,248,104}, {254,242,104}, {252,239,103}, {251,236,103},
     {249,233,102}, {248,229,101}, {247,225,101}, {246,220,100}, {246,217,100},
     {246,214, 99}, {245,211, 99}, {245,207, 97}, {241,203, 96}, {239,199, 96},
     {236,196, 95}, {235,191, 95}, {233,185, 95}, {231,180, 94}, {230,177, 94},
     {228,173, 94}, {227,171, 94}, {227,166, 94}, {225,163, 94}, {225,158, 94},
     {223,154, 94}, {221,151, 94}, {218,147, 94}, {216,143, 94}, {215,141, 94},
     {214,137, 94}, {213,134, 94}, {212,130, 94}, {211,128, 94}, {210,125, 94},
     {208,123, 94}, {207,114, 93}, {205,111, 93}, {205,108, 93}, {203,105, 93},
     {202, 98, 92}, {199, 92, 92}, {198, 88, 92}, {198, 84, 92}, {196, 82, 92},
     {195, 80, 92}, {194, 77, 92}, {192, 73, 92}, {191, 68, 92}, {191, 65, 92},
     {189, 62, 92}, {188, 60, 92}, {188, 57, 92}, {188, 55, 92}, {188, 51, 92},
     {188, 48, 92}
    };
    */
    0x00000000, 0x00070000, 0x000C0000, 0x00160000, 0x00180000, 0x001F0000, 0x00290000, 0x00340000,
    0x00460000, 0x004C0000, 0x00560000, 0x00650000, 0x00720000, 0x007A0000, 0x00830000, 0x008E0000,
    0x00980000, 0x009D0000, 0x00A90000, 0x00B90100, 0x00C00400, 0x00C20800, 0x00C50A00, 0x00C60D00,
    0x00C60E00, 0x00C71100, 0x00C91500, 0x00CA1900, 0x00CB1A00, 0x00CB1C00, 0x00CB1E00, 0x00CC2100,
    0x00CD2200, 0x00CF2500, 0x00D02800, 0x00D12A00, 0x00D32C00, 0x00D42E00, 0x00D43100, 0x00D43400,
    0x00D43400, 0x00D53600, 0x00D53B00, 0x00D53D00, 0x00D54200, 0x00D74600, 0x00D84800, 0x00D84A00,
    0x00D94C00, 0x00D94E00, 0x00D95000, 0x00D95100, 0x00D95300, 0x00DA5600, 0x00DB5900, 0x00DC5C00,
    0x00DC5E00, 0x00DD5F00, 0x00DD6100, 0x00DD6200, 0x00DE6300, 0x00DE6600, 0x00DF6900, 0x00DF6B00,
    0x00DF6D00, 0x00DF7100, 0x00E07500, 0x00E07800, 0x00E07B00, 0x00E17F00, 0x00E18100, 0x00E28300,
    0x00E38500, 0x00E48800, 0x00E58B00, 0x00E58E00, 0x00E59000, 0x00E69200, 0x00E69300, 0x00E79600,
    0x00E79700, 0x00E79B00, 0x00E89C00, 0x00E89E00, 0x00E9A100, 0x00E9A400, 0x00EAA700, 0x00EBAA00,
    0x00EBAD00, 0x00ECAF00, 0x00EDB000, 0x00EEB200, 0x00EEB300, 0x00EEB500, 0x00EFB800, 0x00EFBA00,
    0x00EFBC00, 0x00EFBF00, 0x00EFC000, 0x00EFC200, 0x00EFC400, 0x00F0C800, 0x00F0CB00, 0x00F1CF00,
    0x00F1D400, 0x00F2DA00, 0x00F3DF00, 0x00F3E100, 0x00F5E200, 0x00F5E600, 0x00F5E900, 0x00F7EB00,
    0x00F8EE00, 0x00F8F000, 0x00F9F400, 0x00FAF800, 0x00FBFA03, 0x00FCFB04, 0x00FDFD08, 0x00FEFE09,
    0x00FEFF0B, 0x00FEFF0E, 0x00FCFF0F, 0x00FBFF14, 0x00FAFF17, 0x00F8FF1A, 0x00F6FF1B, 0x00F5FF1E,
    0x00F4FF20, 0x00F2FF23, 0x00F0FF24, 0x00EEFF26, 0x00ECFF28, 0x00EAFF2B, 0x00EAFF2D, 0x00E8FF30,
    0x00E8FF33, 0x00E5FF36, 0x00E2FF39, 0x00DFFF3C, 0x00DCFF3F, 0x00D9FF43, 0x00D7FF47, 0x00D4FF4A,
    0x00D2FF4E, 0x00D0FF53, 0x00CFFF57, 0x00CBFF5C, 0x00C8FF5F, 0x00C6FF63, 0x00C4FF67, 0x00C1FF68,
    0x00C0FF6C, 0x00BFFF71, 0x00BDFF75, 0x00BAFF79, 0x00B8FF7E, 0x00B5FF82, 0x00B3FF86, 0x00B1FE89,
    0x00AFFE8C, 0x00ADFE90, 0x00ACFE96, 0x00AAFE9A, 0x00A8FE9D, 0x00A7FE9F, 0x00A5FEA3, 0x00A2FEA7,
    0x00A1FEAB, 0x009FFEAF, 0x009DFEB3, 0x009CFEB6, 0x009AFEB8, 0x0099FEBA, 0x0098FEBB, 0x0097FEBE,
    0x0096FEC0, 0x0093FEC3, 0x0091FEC7, 0x008EFECA, 0x008CFECC, 0x0089FECF, 0x0087FED3, 0x0085FED6,
    0x0083FEDA, 0x0081FEDD, 0x0080FEDF, 0x007DFEE3, 0x007BFEE6, 0x007AFEE9, 0x0078FEEB, 0x0074FEEE,
    0x0072FEF1, 0x0071FEF5, 0x006FFEF8, 0x006EFEFC, 0x006DFEFE, 0x006BFDFE, 0x006AFEFF, 0x0069FEFF,
    0x0068FCFF, 0x0068F8FF, 0x0068F2FE, 0x0067EFFC, 0x0067ECFB, 0x0066E9F9, 0x0065E5F8, 0x0065E1F7,
    0x0064DCF6, 0x0064D9F6, 0x0063D6F6, 0x0063D3F5, 0x0061CFF5, 0x0060CBF1, 0x0060C7EF, 0x005FC4EC,
    0x005FBFEB, 0x005FB9E9, 0x005EB4E7, 0x005EB1E6, 0x005EADE4, 0x005EABE3, 0x005EA6E3, 0x005EA3E1,
    0x005E9EE1, 0x005E9ADF, 0x005E97DD, 0x005E93DA, 0x005E8FD8, 0x005E8DD7, 0x005E89D6, 0x005E86D5,
    0x005E82D4, 0x005E80D3, 0x005E7DD2, 0x005E7BD0, 0x005D72CF, 0x005D6FCD, 0x005D6CCD, 0x005D69CB,
    0x005C62CA, 0x005C5CC7, 0x005C58C6, 0x005C54C6, 0x005C52C4, 0x005C50C3, 0x005C4DC2, 0x005C49C0,
    0x005C44BF, 0x005C41BF, 0x005C3EBD, 0x005C3CBC, 0x005C39BC, 0x005C37BC, 0x005C33BC, 0x005C30BC
};

static unsigned long darkPalette[256] =
{
    // generated by NO3M
    /*
    { 0, 0, 0}, { 0, 0, 1}, { 0, 0, 2}, { 0, 0, 3}, { 0, 0, 4},
     { 0, 1, 5}, { 0, 1, 6}, { 0, 1, 7}, { 0, 1, 8}, { 0, 1, 9},
     { 0, 1, 10}, { 0, 2, 11}, { 1, 2, 12}, { 1, 2, 13}, { 1, 2, 14},
     { 1, 2, 15}, { 1, 2, 16}, { 1, 3, 17}, { 1, 3, 18}, { 1, 3, 19},
     { 2, 3, 20}, { 2, 4, 21}, { 2, 4, 22}, { 2, 4, 23}, { 2, 4, 24},
     { 2, 5, 25}, { 3, 5, 26}, { 3, 5, 27}, { 3, 6, 28}, { 3, 6, 29},
     { 4, 6, 30}, { 4, 6, 31}, { 4, 7, 32}, { 4, 7, 33}, { 5, 7, 34},
     { 5, 8, 35}, { 5, 8, 36}, { 5, 9, 37}, { 6, 9, 38}, { 6, 9, 39},
     { 6, 10, 40}, { 7, 10, 41}, { 7, 10, 42}, { 7, 11, 43}, { 8, 11, 44},
     { 8, 12, 45}, { 8, 12, 46}, { 9, 12, 47}, { 9, 13, 48}, { 9, 13, 49},
     { 10, 14, 50}, { 10, 14, 51}, { 11, 15, 52}, { 11, 15, 53}, { 11, 16, 54},
     { 12, 16, 55}, { 12, 17, 56}, { 13, 17, 57}, { 13, 18, 58}, { 14, 18, 59},
     { 14, 19, 60}, { 15, 19, 61}, { 15, 20, 62}, { 16, 20, 63}, { 16, 21, 64},
     { 17, 21, 65}, { 17, 22, 66}, { 18, 22, 67}, { 18, 23, 68}, { 19, 24, 69},
     { 19, 24, 70}, { 20, 25, 71}, { 20, 25, 72}, { 21, 26, 73}, { 21, 27, 74},
     { 22, 27, 75}, { 23, 28, 76}, { 23, 29, 77}, { 24, 29, 78}, { 24, 30, 79},
     { 25, 30, 80}, { 26, 31, 81}, { 26, 32, 82}, { 27, 33, 83}, { 28, 33, 84},
     { 28, 34, 85}, { 29, 35, 86}, { 30, 35, 87}, { 30, 36, 88}, { 31, 37, 89},
     { 32, 37, 90}, { 32, 38, 91}, { 33, 39, 92}, { 34, 40, 93}, { 35, 40, 94},
     { 35, 41, 95}, { 36, 42, 96}, { 37, 43, 97}, { 38, 44, 98}, { 38, 44, 99},
     { 39, 45, 100}, { 40, 46, 101}, { 41, 47, 102}, { 41, 48, 103}, { 42, 48, 104},
     { 43, 49, 105}, { 44, 50, 106}, { 45, 51, 107}, { 46, 52, 108}, { 46, 53, 109},
     { 47, 54, 110}, { 48, 54, 111}, { 49, 55, 112}, { 50, 56, 113}, { 51, 57, 114},
     { 52, 58, 115}, { 53, 59, 116}, { 53, 60, 117}, { 54, 61, 118}, { 55, 62, 119},
     { 56, 63, 120}, { 57, 64, 121}, { 58, 65, 122}, { 59, 65, 123}, { 60, 66, 124},
     { 61, 67, 125}, { 62, 68, 126}, { 63, 69, 127}, { 64, 70, 128}, { 65, 71, 129},
     { 66, 72, 130}, { 67, 73, 131}, { 68, 74, 132}, { 69, 75, 133}, { 70, 77, 134},
     { 71, 78, 135}, { 72, 79, 136}, { 73, 80, 137}, { 74, 81, 138}, { 75, 82, 139},
     { 77, 83, 140}, { 78, 84, 141}, { 79, 85, 142}, { 80, 86, 143}, { 81, 87, 144},
     { 82, 88, 145}, { 83, 90, 146}, { 84, 91, 147}, { 86, 92, 148}, { 87, 93, 149},
     { 88, 94, 150}, { 89, 95, 151}, { 90, 96, 152}, { 91, 98, 153}, { 93, 99, 154},
     { 94, 100, 155}, { 95, 101, 156}, { 96, 102, 157}, { 98, 104, 158}, { 99, 105, 159},
     {100, 106, 160}, {101, 107, 161}, {103, 108, 162}, {104, 110, 163}, {105, 111, 164},
     {106, 112, 165}, {108, 113, 166}, {109, 115, 167}, {110, 116, 168}, {112, 117, 169},
     {113, 119, 170}, {114, 120, 171}, {116, 121, 172}, {117, 123, 173}, {118, 124, 174},
     {120, 125, 175}, {121, 126, 176}, {122, 128, 177}, {124, 129, 178}, {125, 131, 179},
     {127, 132, 180}, {128, 133, 181}, {129, 135, 182}, {131, 136, 183}, {132, 137, 184},
     {134, 139, 185}, {135, 140, 186}, {137, 142, 187}, {138, 143, 188}, {140, 144, 189},
     {141, 146, 190}, {143, 147, 191}, {144, 149, 192}, {146, 150, 193}, {147, 152, 194},
     {149, 153, 195}, {150, 155, 196}, {152, 156, 197}, {153, 158, 198}, {155, 159, 199},
     {156, 161, 200}, {158, 162, 201}, {159, 164, 202}, {161, 165, 203}, {163, 167, 204},
     {164, 168, 205}, {166, 170, 206}, {167, 171, 207}, {169, 173, 208}, {171, 174, 209},
     {172, 176, 210}, {174, 178, 211}, {176, 179, 212}, {177, 181, 213}, {179, 182, 214},
     {181, 184, 215}, {182, 186, 216}, {184, 187, 217}, {186, 189, 218}, {187, 191, 219},
     {189, 192, 220}, {191, 194, 221}, {193, 195, 222}, {194, 197, 223}, {196, 199, 224},
     {198, 200, 225}, {200, 202, 226}, {201, 204, 227}, {203, 206, 228}, {205, 207, 229},
     {207, 209, 230}, {208, 211, 231}, {210, 212, 232}, {212, 214, 233}, {214, 216, 234},
     {216, 218, 235}, {218, 219, 236}, {219, 221, 237}, {221, 223, 238}, {223, 225, 239},
     {225, 226, 240}, {227, 228, 241}, {229, 230, 242}, {231, 232, 243}, {233, 234, 244},
     {234, 236, 245}, {236, 237, 246}, {238, 239, 247}, {240, 241, 248}, {242, 243, 249},
     {244, 245, 250}, {246, 247, 251}, {248, 248, 252}, {250, 250, 253}, {252, 252, 254},
     {254, 254, 255}
    */
    0x00000000, 0x00010000, 0x00020000, 0x00030000, 0x00040000, 0x00050100, 0x00060100, 0x00070100,
    0x00080100, 0x00090100, 0x000A0100, 0x000B0200, 0x000C0201, 0x000D0201, 0x000E0201, 0x000F0201,
    0x00100201, 0x00110301, 0x00120301, 0x00130301, 0x00140302, 0x00150402, 0x00160402, 0x00170402,
    0x00180402, 0x00190502, 0x001A0503, 0x001B0503, 0x001C0603, 0x001D0603, 0x001E0604, 0x001F0604,
    0x00200704, 0x00210704, 0x00220705, 0x00230805, 0x00240805, 0x00250905, 0x00260906, 0x00270906,
    0x00280A06, 0x00290A07, 0x002A0A07, 0x002B0B07, 0x002C0B08, 0x002D0C08, 0x002E0C08, 0x002F0C09,
    0x00300D09, 0x00310D09, 0x00320E0A, 0x00330E0A, 0x00340F0B, 0x00350F0B, 0x0036100B, 0x0037100C,
    0x0038110C, 0x0039110D, 0x003A120D, 0x003B120E, 0x003C130E, 0x003D130F, 0x003E140F, 0x003F1410,
    0x00401510, 0x00411511, 0x00421611, 0x00431612, 0x00441712, 0x00451813, 0x00461813, 0x00471914,
    0x00481914, 0x00491A15, 0x004A1B15, 0x004B1B16, 0x004C1C17, 0x004D1D17, 0x004E1D18, 0x004F1E18,
    0x00501E19, 0x00511F1A, 0x0052201A, 0x0053211B, 0x0054211C, 0x0055221C, 0x0056231D, 0x0057231E,
    0x0058241E, 0x0059251F, 0x005A2520, 0x005B2620, 0x005C2721, 0x005D2822, 0x005E2823, 0x005F2923,
    0x00602A24, 0x00612B25, 0x00622C26, 0x00632C26, 0x00642D27, 0x00652E28, 0x00662F29, 0x00673029,
    0x0068302A, 0x0069312B, 0x006A322C, 0x006B332D, 0x006C342E, 0x006D352E, 0x006E362F, 0x006F3630,
    0x00703731, 0x00713832, 0x00723933, 0x00733A34, 0x00743B35, 0x00753C35, 0x00763D36, 0x00773E37,
    0x00783F38, 0x00794039, 0x007A413A, 0x007B413B, 0x007C423C, 0x007D433D, 0x007E443E, 0x007F453F,
    0x00804640, 0x00814741, 0x00824842, 0x00834943, 0x00844A44, 0x00854B45, 0x00864D46, 0x00874E47,
    0x00884F48, 0x00895049, 0x008A514A, 0x008B524B, 0x008C534D, 0x008D544E, 0x008E554F, 0x008F5650,
    0x00905751, 0x00915852, 0x00925A53, 0x00935B54, 0x00945C56, 0x00955D57, 0x00965E58, 0x00975F59,
    0x0098605A, 0x0099625B, 0x009A635D, 0x009B645E, 0x009C655F, 0x009D6660, 0x009E6862, 0x009F6963,
    0x00A06A64, 0x00A16B65, 0x00A26C67, 0x00A36E68, 0x00A46F69, 0x00A5706A, 0x00A6716C, 0x00A7736D,
    0x00A8746E, 0x00A97570, 0x00AA7771, 0x00AB7872, 0x00AC7974, 0x00AD7B75, 0x00AE7C76, 0x00AF7D78,
    0x00B07E79, 0x00B1807A, 0x00B2817C, 0x00B3837D, 0x00B4847F, 0x00B58580, 0x00B68781, 0x00B78883,
    0x00B88984, 0x00B98B86, 0x00BA8C87, 0x00BB8E89, 0x00BC8F8A, 0x00BD908C, 0x00BE928D, 0x00BF938F,
    0x00C09590, 0x00C19692, 0x00C29893, 0x00C39995, 0x00C49B96, 0x00C59C98, 0x00C69E99, 0x00C79F9B,
    0x00C8A19C, 0x00C9A29E, 0x00CAA49F, 0x00CBA5A1, 0x00CCA7A3, 0x00CDA8A4, 0x00CEAAA6, 0x00CFABA7,
    0x00D0ADA9, 0x00D1AEAB, 0x00D2B0AC, 0x00D3B2AE, 0x00D4B3B0, 0x00D5B5B1, 0x00D6B6B3, 0x00D7B8B5,
    0x00D8BAB6, 0x00D9BBB8, 0x00DABDBA, 0x00DBBFBB, 0x00DCC0BD, 0x00DDC2BF, 0x00DEC3C1, 0x00DFC5C2,
    0x00E0C7C4, 0x00E1C8C6, 0x00E2CAC8, 0x00E3CCC9, 0x00E4CECB, 0x00E5CFCD, 0x00E6D1CF, 0x00E7D3D0,
    0x00E8D4D2, 0x00E9D6D4, 0x00EAD8D6, 0x00EBDAD8, 0x00ECDBDA, 0x00EDDDDB, 0x00EEDFDD, 0x00EFE1DF,
    0x00F0E2E1, 0x00F1E4E3, 0x00F2E6E5, 0x00F3E8E7, 0x00F4EAE9, 0x00F5ECEA, 0x00F6EDEC, 0x00F7EFEE,
    0x00F8F1F0, 0x00F9F3F2, 0x00FAF5F4, 0x00FBF7F6, 0x00FCF8F8, 0x00FDFAFA, 0x00FEFCFC, 0x00FFFEFE
};

static unsigned long lightPalette[256] =
{
    // generated by NO3M
    /*
    {0,12,80}, {0,12,85}, {0,14,90}, {0,12,95}, {0,12,100},
     {0,12,102}, {0,10,106}, {0,12,106}, {0,12,106}, {0,13,108},
     {0,13,110}, {0,13,112}, {0,13,114}, {0,13,112}, {0,13,114},
     {0,14,116}, {0,14,118}, {0,11,120}, {0,14,118}, {0,11,120},
     {0,12,124}, {0,14,122}, {0,12,126}, {0,15,126}, {0,12,128},
     {0,12,130}, {0,15,128}, {0,16,132}, {0,16,132}, {0,16,132},
     {0,13,136}, {0,13,138}, {0,13,140}, {0,13,140}, {0,16,140},
     {0,13,142}, {0,13,142}, {0,14,144}, {0,14,146}, {0,14,148},
     {0,14,150}, {0,14,150}, {0,14,152}, {0,15,154}, {0,15,156},
     {0,15,156}, {0,15,156}, {0,15,158}, {0,15,160}, {0,15,162},
     {0,16,164}, {0,19,162}, {0,19,164}, {0,16,166}, {0,20,168},
     {0,16,168}, {0,16,170}, {0,20,170}, {0,16,172}, {0,17,176},
     {0,17,176}, {0,17,178}, {0,17,178}, {0,17,180}, {0,17,182},
     {1,18,183}, {4,21,182}, {4,21,182}, {4,21,182}, {5,22,183},
     {5,22,185}, {6,23,188}, {8,25,186}, {8,25,186}, {7,24,189},
     {9,26,189}, {9,26,191}, {12,25,190}, {13,29,187}, {14,30,188},
     {14,31,190}, {15,32,193}, {16,33,192}, {16,33,192}, {17,34,193},
     {17,34,193}, {19,36,195}, {19,36,195}, {22,38,196}, {23,39,195},
     {23,39,195}, {26,38,198}, {26,42,198}, {26,42,200}, {28,44,198},
     {27,39,201}, {30,46,200}, {30,46,200}, {31,47,201}, {33,49,199},
     {32,48,202}, {33,49,203}, {35,51,203}, {37,53,203}, {38,54,204},
     {38,54,204}, {39,55,205}, {41,57,205}, {43,58,205}, {44,55,206},
     {43,59,207}, {44,60,208}, {47,58,209}, {49,64,207}, {48,63,208},
     {49,60,209}, {51,62,209}, {51,62,209}, {52,63,212}, {53,68,211},
     {54,65,212}, {56,71,212}, {56,71,212}, {57,72,215}, {60,71,214},
     {60,71,216}, {60,71,216}, {62,73,216}, {65,79,215}, {65,79,215},
     {65,79,217}, {67,81,217}, {68,82,216}, {69,83,217}, {72,86,218},
     {73,87,219}, {74,88,218}, {74,84,218}, {75,85,219}, {76,86,222},
     {79,92,219}, {79,92,221}, {80,93,220}, {83,93,221}, {84,97,222},
     {85,98,223}, {85,98,223}, {86,99,224}, {89,98,223}, {90,99,224},
     {91,104,225}, {92,101,226}, {93,102,227}, {93,102,227}, {95,107,225},
     {97,109,227}, {98,110,228}, {98,110,228}, {101,113,227}, {102,114,228},
     {103,115,229}, {104,116,230}, {105,117,231}, {108,120,230}, {109,115,231},
     {111,119,229}, {113,121,231}, {114,122,230}, {115,123,231}, {115,123,231},
     {117,128,231}, {119,130,233}, {120,128,234}, {120,128,234}, {124,132,234},
     {125,133,235}, {125,133,235}, {128,135,232}, {128,136,234}, {131,138,233},
     {129,137,235}, {131,141,235}, {134,144,236}, {135,145,237}, {136,141,238},
     {136,143,238}, {138,145,238}, {142,149,236}, {144,151,236}, {144,151,238},
     {144,153,238}, {146,155,238}, {148,155,240}, {150,156,240}, {151,157,241},
     {154,160,240}, {155,161,241}, {155,163,241}, {158,166,240}, {159,167,241},
     {159,167,241}, {163,169,241}, {164,170,242}, {166,171,242}, {166,173,244},
     {166,173,244}, {170,174,244}, {170,175,244}, {174,179,242}, {175,180,243},
     {177,183,243}, {178,184,244}, {179,185,245}, {179,185,245}, {184,187,246},
     {184,188,246}, {185,191,247}, {186,190,246}, {190,194,244}, {192,196,246},
     {193,198,245}, {193,197,247}, {194,199,248}, {197,201,247}, {199,203,249},
     {202,205,248}, {201,206,249}, {203,205,249}, {205,207,247}, {206,209,248},
     {210,213,248}, {209,213,249}, {212,216,250}, {215,215,249}, {216,216,250},
     {217,219,251}, {219,223,249}, {221,224,249}, {223,227,249}, {224,226,250},
     {226,228,250}, {226,228,252}, {230,231,252}, {231,232,253}, {232,232,252},
     {236,236,250}, {238,238,252}, {238,239,252}, {239,241,253}, {242,242,252},
     {245,245,251}, {245,246,253}, {248,248,254}, {250,251,252}, {251,252,253},
     {255,255,255}
     */
    0x00500C00, 0x00550C00, 0x005A0E00, 0x005F0C00, 0x00640C00, 0x00660C00, 0x006A0A00, 0x006A0C00,
    0x006A0C00, 0x006C0D00, 0x006E0D00, 0x00700D00, 0x00720D00, 0x00700D00, 0x00720D00, 0x00740E00,
    0x00760E00, 0x00780B00, 0x00760E00, 0x00780B00, 0x007C0C00, 0x007A0E00, 0x007E0C00, 0x007E0F00,
    0x00800C00, 0x00820C00, 0x00800F00, 0x00841000, 0x00841000, 0x00841000, 0x00880D00, 0x008A0D00,
    0x008C0D00, 0x008C0D00, 0x008C1000, 0x008E0D00, 0x008E0D00, 0x00900E00, 0x00920E00, 0x00940E00,
    0x00960E00, 0x00960E00, 0x00980E00, 0x009A0F00, 0x009C0F00, 0x009C0F00, 0x009C0F00, 0x009E0F00,
    0x00A00F00, 0x00A20F00, 0x00A41000, 0x00A21300, 0x00A41300, 0x00A61000, 0x00A81400, 0x00A81000,
    0x00AA1000, 0x00AA1400, 0x00AC1000, 0x00B01100, 0x00B01100, 0x00B21100, 0x00B21100, 0x00B41100,
    0x00B61100, 0x00B71201, 0x00B61504, 0x00B61504, 0x00B61504, 0x00B71605, 0x00B91605, 0x00BC1706,
    0x00BA1908, 0x00BA1908, 0x00BD1807, 0x00BD1A09, 0x00BF1A09, 0x00BE190C, 0x00BB1D0D, 0x00BC1E0E,
    0x00BE1F0E, 0x00C1200F, 0x00C02110, 0x00C02110, 0x00C12211, 0x00C12211, 0x00C32413, 0x00C32413,
    0x00C42616, 0x00C32717, 0x00C32717, 0x00C6261A, 0x00C62A1A, 0x00C82A1A, 0x00C62C1C, 0x00C9271B,
    0x00C82E1E, 0x00C82E1E, 0x00C92F1F, 0x00C73121, 0x00CA3020, 0x00CB3121, 0x00CB3323, 0x00CB3525,
    0x00CC3626, 0x00CC3626, 0x00CD3727, 0x00CD3929, 0x00CD3A2B, 0x00CE372C, 0x00CF3B2B, 0x00D03C2C,
    0x00D13A2F, 0x00CF4031, 0x00D03F30, 0x00D13C31, 0x00D13E33, 0x00D13E33, 0x00D43F34, 0x00D34435,
    0x00D44136, 0x00D44738, 0x00D44738, 0x00D74839, 0x00D6473C, 0x00D8473C, 0x00D8473C, 0x00D8493E,
    0x00D74F41, 0x00D74F41, 0x00D94F41, 0x00D95143, 0x00D85244, 0x00D95345, 0x00DA5648, 0x00DB5749,
    0x00DA584A, 0x00DA544A, 0x00DB554B, 0x00DE564C, 0x00DB5C4F, 0x00DD5C4F, 0x00DC5D50, 0x00DD5D53,
    0x00DE6154, 0x00DF6255, 0x00DF6255, 0x00E06356, 0x00DF6259, 0x00E0635A, 0x00E1685B, 0x00E2655C,
    0x00E3665D, 0x00E3665D, 0x00E16B5F, 0x00E36D61, 0x00E46E62, 0x00E46E62, 0x00E37165, 0x00E47266,
    0x00E57367, 0x00E67468, 0x00E77569, 0x00E6786C, 0x00E7736D, 0x00E5776F, 0x00E77971, 0x00E67A72,
    0x00E77B73, 0x00E77B73, 0x00E78075, 0x00E98277, 0x00EA8078, 0x00EA8078, 0x00EA847C, 0x00EB857D,
    0x00EB857D, 0x00E88780, 0x00EA8880, 0x00E98A83, 0x00EB8981, 0x00EB8D83, 0x00EC9086, 0x00ED9187,
    0x00EE8D88, 0x00EE8F88, 0x00EE918A, 0x00EC958E, 0x00EC9790, 0x00EE9790, 0x00EE9990, 0x00EE9B92,
    0x00F09B94, 0x00F09C96, 0x00F19D97, 0x00F0A09A, 0x00F1A19B, 0x00F1A39B, 0x00F0A69E, 0x00F1A79F,
    0x00F1A79F, 0x00F1A9A3, 0x00F2AAA4, 0x00F2ABA6, 0x00F4ADA6, 0x00F4ADA6, 0x00F4AEAA, 0x00F4AFAA,
    0x00F2B3AE, 0x00F3B4AF, 0x00F3B7B1, 0x00F4B8B2, 0x00F5B9B3, 0x00F5B9B3, 0x00F6BBB8, 0x00F6BCB8,
    0x00F7BFB9, 0x00F6BEBA, 0x00F4C2BE, 0x00F6C4C0, 0x00F5C6C1, 0x00F7C5C1, 0x00F8C7C2, 0x00F7C9C5,
    0x00F9CBC7, 0x00F8CDCA, 0x00F9CEC9, 0x00F9CDCB, 0x00F7CFCD, 0x00F8D1CE, 0x00F8D5D2, 0x00F9D5D1,
    0x00FAD8D4, 0x00F9D7D7, 0x00FAD8D8, 0x00FBDBD9, 0x00F9DFDB, 0x00F9E0DD, 0x00F9E3DF, 0x00FAE2E0,
    0x00FAE4E2, 0x00FCE4E2, 0x00FCE7E6, 0x00FDE8E7, 0x00FCE8E8, 0x00FAECEC, 0x00FCEEEE, 0x00FCEFEE,
    0x00FDF1EF, 0x00FCF2F2, 0x00FBF5F5, 0x00FDF6F5, 0x00FEF8F8, 0x00FCFBFA, 0x00FDFCFB, 0x00FFFFFF
};

static unsigned long specextPalette[256] =
{
    // generated by NO3M
    /*
    { 0, 0, 1}, { 0, 0, 2}, { 0, 0, 3}, { 0, 0, 5}, { 0, 0, 7},
     { 0, 0, 9}, { 0, 0, 11}, { 0, 0, 14}, { 0, 0, 17}, { 0, 0, 20},
     { 0, 0, 23}, { 0, 0, 25}, { 0, 0, 28}, { 0, 0, 31}, { 0, 0, 34},
     { 0, 0, 36}, { 0, 0, 39}, { 0, 0, 41}, { 1, 0, 44}, { 1, 0, 46},
     { 1, 0, 49}, { 1, 0, 52}, { 1, 0, 55}, { 1, 0, 58}, { 2, 0, 62},
     { 2, 0, 66}, { 2, 0, 70}, { 2, 0, 74}, { 2, 0, 78}, { 2, 0, 81},
     { 2, 0, 85}, { 2, 0, 88}, { 2, 0, 91}, { 2, 0, 94}, { 2, 0, 97},
     { 2, 0, 99}, { 1, 0, 102}, { 1, 0, 104}, { 1, 0, 107}, { 1, 0, 110},
     { 1, 0, 113}, { 1, 0, 116}, { 1, 0, 119}, { 1, 0, 122}, { 1, 0, 125},
     { 1, 0, 128}, { 1, 0, 130}, { 1, 0, 133}, { 1, 0, 136}, { 1, 0, 138},
     { 1, 0, 141}, { 1, 0, 143}, { 1, 0, 146}, { 1, 0, 148}, { 1, 0, 151},
     { 1, 0, 153}, { 1, 0, 156}, { 1, 0, 158}, { 1, 0, 161}, { 1, 0, 164},
     { 1, 0, 166}, { 1, 0, 169}, { 2, 0, 171}, { 3, 0, 174}, { 4, 0, 176},
     { 5, 0, 178}, { 7, 0, 180}, { 10, 0, 182}, { 13, 0, 183}, { 16, 0, 185},
     { 19, 0, 186}, { 23, 0, 188}, { 27, 0, 189}, { 31, 0, 190}, { 35, 0, 191},
     { 39, 0, 192}, { 43, 0, 193}, { 48, 0, 195}, { 52, 0, 196}, { 56, 0, 197},
     { 60, 0, 199}, { 65, 0, 200}, { 69, 0, 201}, { 73, 0, 203}, { 77, 0, 204},
     { 81, 0, 206}, { 85, 0, 207}, { 89, 0, 208}, { 93, 0, 209}, { 97, 0, 211},
     {102, 0, 212}, {106, 0, 213}, {111, 0, 213}, {115, 0, 214}, {119, 0, 214},
     {123, 0, 215}, {127, 0, 214}, {130, 0, 213}, {134, 1, 212}, {137, 2, 210},
     {140, 3, 207}, {144, 4, 204}, {147, 5, 201}, {150, 6, 197}, {153, 7, 192},
     {156, 8, 188}, {159, 9, 182}, {162, 10, 177}, {165, 11, 171}, {168, 12, 166},
     {170, 13, 161}, {173, 14, 156}, {176, 15, 151}, {179, 15, 146}, {181, 16, 141},
     {184, 17, 136}, {187, 18, 131}, {190, 18, 127}, {193, 19, 123}, {196, 20, 119},
     {200, 20, 115}, {204, 21, 111}, {207, 21, 106}, {211, 22, 102}, {215, 22, 97},
     {218, 23, 93}, {222, 24, 87}, {225, 25, 82}, {228, 26, 76}, {231, 27, 70},
     {234, 28, 64}, {236, 30, 57}, {239, 31, 51}, {241, 32, 44}, {243, 34, 37},
     {244, 35, 30}, {246, 37, 23}, {247, 39, 18}, {249, 41, 13}, {249, 43, 9},
     {250, 45, 6}, {251, 47, 3}, {251, 50, 2}, {252, 53, 1}, {252, 55, 1},
     {252, 58, 1}, {253, 61, 1}, {253, 64, 1}, {253, 67, 1}, {253, 70, 1},
     {252, 73, 1}, {252, 76, 1}, {252, 79, 2}, {251, 82, 2}, {251, 85, 1},
     {250, 89, 1}, {250, 92, 1}, {250, 96, 1}, {250, 99, 1}, {250, 102, 1},
     {250, 106, 1}, {250, 109, 1}, {250, 112, 2}, {250, 115, 2}, {251, 118, 2},
     {251, 121, 2}, {251, 124, 2}, {251, 127, 2}, {251, 130, 1}, {251, 133, 1},
     {251, 136, 1}, {251, 140, 0}, {251, 143, 0}, {251, 146, 0}, {251, 149, 0},
     {251, 153, 0}, {251, 156, 0}, {250, 159, 0}, {250, 162, 0}, {250, 165, 0},
     {250, 168, 0}, {249, 171, 0}, {249, 174, 0}, {249, 177, 0}, {248, 180, 0},
     {248, 183, 0}, {247, 186, 0}, {247, 189, 0}, {246, 193, 0}, {246, 196, 0},
     {246, 199, 0}, {246, 202, 0}, {246, 206, 0}, {246, 208, 0}, {246, 211, 0},
     {246, 214, 0}, {246, 217, 0}, {247, 219, 0}, {247, 222, 0}, {247, 225, 0},
     {247, 227, 0}, {247, 230, 1}, {248, 232, 2}, {248, 235, 3}, {248, 237, 4},
     {249, 240, 6}, {249, 242, 8}, {250, 244, 11}, {250, 245, 14}, {251, 247, 17},
     {251, 248, 21}, {251, 249, 25}, {252, 250, 29}, {252, 251, 34}, {252, 251, 39},
     {252, 252, 44}, {252, 252, 49}, {252, 252, 55}, {252, 252, 61}, {252, 253, 67},
     {252, 253, 73}, {252, 253, 78}, {252, 253, 84}, {252, 253, 90}, {252, 254, 95},
     {252, 254, 101}, {252, 254, 106}, {252, 254, 112}, {252, 254, 117}, {252, 254, 123},
     {252, 254, 128}, {252, 254, 133}, {252, 254, 139}, {251, 254, 144}, {251, 254, 150},
     {251, 254, 155}, {251, 254, 161}, {251, 254, 166}, {251, 254, 172}, {251, 254, 177},
     {251, 254, 183}, {251, 254, 188}, {251, 254, 193}, {251, 254, 198}, {251, 254, 204},
     {251, 254, 209}, {251, 254, 215}, {251, 254, 220}, {251, 254, 225}, {251, 254, 230},
     {251, 254, 234}, {251, 254, 239}, {252, 254, 242}, {252, 254, 245}, {252, 254, 247},
     {255, 255, 255}
    */
    0x00010000, 0x00020000, 0x00030000, 0x00050000, 0x00070000, 0x00090000, 0x000B0000, 0x000E0000,
    0x00110000, 0x00140000, 0x00170000, 0x00190000, 0x001C0000, 0x001F0000, 0x00220000, 0x00240000,
    0x00270000, 0x00290000, 0x002C0001, 0x002E0001, 0x00310001, 0x00340001, 0x00370001, 0x003A0001,
    0x003E0002, 0x00420002, 0x00460002, 0x004A0002, 0x004E0002, 0x00510002, 0x00550002, 0x00580002,
    0x005B0002, 0x005E0002, 0x00610002, 0x00630002, 0x00660001, 0x00680001, 0x006B0001, 0x006E0001,
    0x00710001, 0x00740001, 0x00770001, 0x007A0001, 0x007D0001, 0x00800001, 0x00820001, 0x00850001,
    0x00880001, 0x008A0001, 0x008D0001, 0x008F0001, 0x00920001, 0x00940001, 0x00970001, 0x00990001,
    0x009C0001, 0x009E0001, 0x00A10001, 0x00A40001, 0x00A60001, 0x00A90001, 0x00AB0002, 0x00AE0003,
    0x00B00004, 0x00B20005, 0x00B40007, 0x00B6000A, 0x00B7000D, 0x00B90010, 0x00BA0013, 0x00BC0017,
    0x00BD001B, 0x00BE001F, 0x00BF0023, 0x00C00027, 0x00C1002B, 0x00C30030, 0x00C40034, 0x00C50038,
    0x00C7003C, 0x00C80041, 0x00C90045, 0x00CB0049, 0x00CC004D, 0x00CE0051, 0x00CF0055, 0x00D00059,
    0x00D1005D, 0x00D30061, 0x00D40066, 0x00D5006A, 0x00D5006F, 0x00D60073, 0x00D60077, 0x00D7007B,
    0x00D6007F, 0x00D50082, 0x00D40186, 0x00D20289, 0x00CF038C, 0x00CC0490, 0x00C90593, 0x00C50696,
    0x00C00799, 0x00BC089C, 0x00B6099F, 0x00B10AA2, 0x00AB0BA5, 0x00A60CA8, 0x00A10DAA, 0x009C0EAD,
    0x00970FB0, 0x00920FB3, 0x008D10B5, 0x008811B8, 0x008312BB, 0x007F12BE, 0x007B13C1, 0x007714C4,
    0x007314C8, 0x006F15CC, 0x006A15CF, 0x006616D3, 0x006116D7, 0x005D17DA, 0x005718DE, 0x005219E1,
    0x004C1AE4, 0x00461BE7, 0x00401CEA, 0x00391EEC, 0x00331FEF, 0x002C20F1, 0x002522F3, 0x001E23F4,
    0x001725F6, 0x001227F7, 0x000D29F9, 0x00092BF9, 0x00062DFA, 0x00032FFB, 0x000232FB, 0x000135FC,
    0x000137FC, 0x00013AFC, 0x00013DFD, 0x000140FD, 0x000143FD, 0x000146FD, 0x000149FC, 0x00014CFC,
    0x00024FFC, 0x000252FB, 0x000155FB, 0x000159FA, 0x00015CFA, 0x000160FA, 0x000163FA, 0x000166FA,
    0x00016AFA, 0x00016DFA, 0x000270FA, 0x000273FA, 0x000276FB, 0x000279FB, 0x00027CFB, 0x00027FFB,
    0x000182FB, 0x000185FB, 0x000188FB, 0x00008CFB, 0x00008FFB, 0x000092FB, 0x000095FB, 0x000099FB,
    0x00009CFB, 0x00009FFA, 0x0000A2FA, 0x0000A5FA, 0x0000A8FA, 0x0000ABF9, 0x0000AEF9, 0x0000B1F9,
    0x0000B4F8, 0x0000B7F8, 0x0000BAF7, 0x0000BDF7, 0x0000C1F6, 0x0000C4F6, 0x0000C7F6, 0x0000CAF6,
    0x0000CEF6, 0x0000D0F6, 0x0000D3F6, 0x0000D6F6, 0x0000D9F6, 0x0000DBF7, 0x0000DEF7, 0x0000E1F7,
    0x0000E3F7, 0x0001E6F7, 0x0002E8F8, 0x0003EBF8, 0x0004EDF8, 0x0006F0F9, 0x0008F2F9, 0x000BF4FA,
    0x000EF5FA, 0x0011F7FB, 0x0015F8FB, 0x0019F9FB, 0x001DFAFC, 0x0022FBFC, 0x0027FBFC, 0x002CFCFC,
    0x0031FCFC, 0x0037FCFC, 0x003DFCFC, 0x0043FDFC, 0x0049FDFC, 0x004EFDFC, 0x0054FDFC, 0x005AFDFC,
    0x005FFEFC, 0x0065FEFC, 0x006AFEFC, 0x0070FEFC, 0x0075FEFC, 0x007BFEFC, 0x0080FEFC, 0x0085FEFC,
    0x008BFEFC, 0x0090FEFB, 0x0096FEFB, 0x009BFEFB, 0x00A1FEFB, 0x00A6FEFB, 0x00ACFEFB, 0x00B1FEFB,
    0x00B7FEFB, 0x00BCFEFB, 0x00C1FEFB, 0x00C6FEFB, 0x00CCFEFB, 0x00D1FEFB, 0x00D7FEFB, 0x00DCFEFB,
    0x00E1FEFB, 0x00E6FEFB, 0x00EAFEFB, 0x00EFFEFB, 0x00F2FEFC, 0x00F5FEFC, 0x00F7FEFC, 0x00FFFFFF
};

static unsigned long wsjtxPalette[256] =
{
    // generated by NO3M from wsjtx
    /* static short Palette[9][3] = {
        {   0,  0,  0 }, {   0,  6,136 }, {   0, 19,198 }, {   0, 32,239 }, { 172,167,105 },
        { 194,198, 49 }, { 225,228,107 }, { 255,255,  0 }, { 255, 51,  0 }
    }; */
    0x00000000, 0x00040000, 0x00080000, 0x000C0000, 0x00110000, 0x00150000, 0x00190100, 0x001D0100,
    0x00220100, 0x00260100, 0x002A0100, 0x002E0200, 0x00330200, 0x00370200, 0x003B0200, 0x003F0200,
    0x00440300, 0x00480300, 0x004C0300, 0x00500300, 0x00550300, 0x00590300, 0x005D0400, 0x00610400,
    0x00660400, 0x006A0400, 0x006E0400, 0x00720500, 0x00770500, 0x007B0500, 0x007F0500, 0x00830500,
    0x00880600, 0x00890600, 0x008B0600, 0x008D0700, 0x008F0700, 0x00910800, 0x00930800, 0x00950800,
    0x00970900, 0x00990900, 0x009B0A00, 0x009D0A00, 0x009F0A00, 0x00A10B00, 0x00A30B00, 0x00A50C00,
    0x00A70C00, 0x00A80C00, 0x00AA0D00, 0x00AC0D00, 0x00AE0E00, 0x00B00E00, 0x00B20E00, 0x00B40F00,
    0x00B60F00, 0x00B81000, 0x00BA1000, 0x00BC1000, 0x00BE1100, 0x00C01100, 0x00C21200, 0x00C41200,
    0x00C61300, 0x00C71300, 0x00C81300, 0x00C91400, 0x00CB1400, 0x00CC1500, 0x00CD1500, 0x00CE1500,
    0x00D01600, 0x00D11600, 0x00D21700, 0x00D41700, 0x00D51700, 0x00D61800, 0x00D71800, 0x00D91900,
    0x00DA1900, 0x00DB1900, 0x00DD1A00, 0x00DE1A00, 0x00DF1B00, 0x00E01B00, 0x00E21B00, 0x00E31C00,
    0x00E41C00, 0x00E61D00, 0x00E71D00, 0x00E81D00, 0x00E91E00, 0x00EB1E00, 0x00EC1F00, 0x00ED1F00,
    0x00EF2000, 0x00EB2405, 0x00E7280A, 0x00E32C10, 0x00DF3015, 0x00DB351A, 0x00D63920, 0x00D23D25,
    0x00CE412B, 0x00CA4530, 0x00C64A35, 0x00C14E3B, 0x00BD5240, 0x00B95645, 0x00B55B4B, 0x00B15F50,
    0x00AC6356, 0x00A8675B, 0x00A46B60, 0x00A07066, 0x009C746B, 0x00987870, 0x00937C76, 0x008F817B,
    0x008B8581, 0x00878986, 0x00838D8B, 0x007E9191, 0x007A9696, 0x00769A9B, 0x00729EA1, 0x006EA2A6,
    0x0069A7AC, 0x0068A7AC, 0x0066A8AD, 0x0064A9AE, 0x0062AAAE, 0x0061ABAF, 0x005FACB0, 0x005DADB0,
    0x005BAEB1, 0x005AAFB2, 0x0058B0B2, 0x0056B1B3, 0x0054B2B4, 0x0053B3B4, 0x0051B4B5, 0x004FB5B6,
    0x004DB6B7, 0x004CB7B7, 0x004AB8B8, 0x0048B9B9, 0x0046BAB9, 0x0045BBBA, 0x0043BCBB, 0x0041BDBB,
    0x003FBEBC, 0x003EBFBD, 0x003CC0BD, 0x003AC1BE, 0x0038C2BF, 0x0037C3BF, 0x0035C4C0, 0x0033C5C1,
    0x0031C6C2, 0x0032C6C2, 0x0034C7C3, 0x0036C8C4, 0x0038C9C5, 0x003ACAC6, 0x003BCBC7, 0x003DCCC8,
    0x003FCDC9, 0x0041CECA, 0x0043CFCB, 0x0044D0CC, 0x0046D1CD, 0x0048D2CE, 0x004AD3CF, 0x004CD4D0,
    0x004ED5D1, 0x004FD5D2, 0x0051D6D3, 0x0053D7D4, 0x0055D8D5, 0x0057D9D6, 0x0058DAD7, 0x005ADBD8,
    0x005CDCD9, 0x005EDDDA, 0x0060DEDB, 0x0061DFDC, 0x0063E0DD, 0x0065E1DE, 0x0067E2DF, 0x0069E3E0,
    0x006BE4E1, 0x0068E4E1, 0x0065E5E2, 0x0061E6E3, 0x005EE7E4, 0x005BE8E5, 0x0057E9E6, 0x0054E9E7,
    0x0051EAE8, 0x004DEBE9, 0x004AECEA, 0x0047EDEB, 0x0043EEEC, 0x0040EEED, 0x003DEFEE, 0x0039F0EF,
    0x0036F1F0, 0x0033F2F0, 0x002FF3F1, 0x002CF4F2, 0x0029F4F3, 0x0025F5F4, 0x0022F6F5, 0x001FF7F6,
    0x001BF8F7, 0x0018F9F8, 0x0015F9F9, 0x0011FAFA, 0x000EFBFB, 0x000BFCFC, 0x0007FDFD, 0x0004FEFE,
    0x0000FFFF, 0x0000F9FF, 0x0000F3FF, 0x0000ECFF, 0x0000E6FF, 0x0000E0FF, 0x0000D9FF, 0x0000D3FF,
    0x0000CCFF, 0x0000C6FF, 0x0000C0FF, 0x0000B9FF, 0x0000B3FF, 0x0000ADFF, 0x0000A6FF, 0x0000A0FF,
    0x000099FF, 0x000093FF, 0x00008DFF, 0x000086FF, 0x000080FF, 0x00007AFF, 0x000073FF, 0x00006DFF,
    0x000066FF, 0x000060FF, 0x00005AFF, 0x000053FF, 0x00004DFF, 0x000047FF, 0x000040FF, 0x00003AFF
};

static unsigned long digipanPalette[256] =
{
    // generated by NO3M from  fldigi
    /* static short Palette[9][3] = {
        {   0,  0,  0 }, {   0,  0, 64 }, {   0,  0,128 }, {   0,  0,217 }, { 150,147, 92 },
        { 183,186, 46 }, { 225,228,107 }, { 255,255,  0 }, { 255, 51,  0 }
    }; */
    0x00000000, 0x00020000, 0x00040000, 0x00060000, 0x00080000, 0x000A0000, 0x000C0000, 0x000E0000,
    0x00100000, 0x00120000, 0x00140000, 0x00160000, 0x00180000, 0x001A0000, 0x001C0000, 0x001E0000,
    0x00200000, 0x00220000, 0x00240000, 0x00260000, 0x00280000, 0x002A0000, 0x002C0000, 0x002E0000,
    0x00300000, 0x00320000, 0x00340000, 0x00360000, 0x00380000, 0x003A0000, 0x003C0000, 0x003E0000,
    0x00400000, 0x00420000, 0x00440000, 0x00460000, 0x00480000, 0x004A0000, 0x004C0000, 0x004E0000,
    0x00500000, 0x00520000, 0x00540000, 0x00560000, 0x00580000, 0x005A0000, 0x005C0000, 0x005E0000,
    0x00600000, 0x00620000, 0x00640000, 0x00660000, 0x00680000, 0x006A0000, 0x006C0000, 0x006E0000,
    0x00700000, 0x00720000, 0x00740000, 0x00760000, 0x00780000, 0x007A0000, 0x007C0000, 0x007E0000,
    0x00800000, 0x00820000, 0x00850000, 0x00880000, 0x008B0000, 0x008D0000, 0x00900000, 0x00930000,
    0x00960000, 0x00990000, 0x009B0000, 0x009E0000, 0x00A10000, 0x00A40000, 0x00A60000, 0x00A90000,
    0x00AC0000, 0x00AF0000, 0x00B20000, 0x00B40000, 0x00B70000, 0x00BA0000, 0x00BD0000, 0x00BF0000,
    0x00C20000, 0x00C50000, 0x00C80000, 0x00CB0000, 0x00CD0000, 0x00D00000, 0x00D30000, 0x00D60000,
    0x00D90000, 0x00D60404, 0x00D20909, 0x00CE0D0E, 0x00CA1212, 0x00C61617, 0x00C21B1C, 0x00BE2020,
    0x00BA2425, 0x00B6292A, 0x00B22D2E, 0x00AF3233, 0x00AB3738, 0x00A73B3C, 0x00A34041, 0x009F4446,
    0x009B494B, 0x00974E4F, 0x00935254, 0x008F5759, 0x008B5B5D, 0x00876062, 0x00846567, 0x0080696B,
    0x007C6E70, 0x00787275, 0x00747779, 0x00707C7E, 0x006C8083, 0x00688587, 0x0064898C, 0x00608E91,
    0x005C9396, 0x005B9497, 0x005A9598, 0x00589699, 0x0057979A, 0x0055999B, 0x00549A9C, 0x00529B9D,
    0x00519C9E, 0x00509D9F, 0x004E9FA0, 0x004DA0A1, 0x004BA1A2, 0x004AA2A3, 0x0048A4A4, 0x0047A5A5,
    0x0045A6A6, 0x0044A7A7, 0x0043A8A8, 0x0041AAA9, 0x0040ABAA, 0x003EACAB, 0x003DADAC, 0x003BAFAD,
    0x003AB0AE, 0x0039B1AF, 0x0037B2B0, 0x0036B3B1, 0x0034B5B2, 0x0033B6B3, 0x0031B7B4, 0x0030B8B5,
    0x002EBAB7, 0x002FBBB8, 0x0031BCB9, 0x0033BDBA, 0x0035BFBC, 0x0037C0BD, 0x0039C1BE, 0x003BC3C0,
    0x003DC4C1, 0x003FC5C2, 0x0041C7C4, 0x0042C8C5, 0x0044C9C6, 0x0046CBC8, 0x0048CCC9, 0x004ACDCA,
    0x004CCFCC, 0x004ED0CD, 0x0050D1CE, 0x0052D2CF, 0x0054D4D1, 0x0056D5D2, 0x0057D6D3, 0x0059D8D5,
    0x005BD9D6, 0x005DDAD7, 0x005FDCD9, 0x0061DDDA, 0x0063DEDB, 0x0065E0DD, 0x0067E1DE, 0x0069E2DF,
    0x006BE4E1, 0x0068E4E1, 0x0065E5E2, 0x0061E6E3, 0x005EE7E4, 0x005BE8E5, 0x0057E9E6, 0x0054E9E7,
    0x0051EAE8, 0x004DEBE9, 0x004AECEA, 0x0047EDEB, 0x0043EEEC, 0x0040EEED, 0x003DEFEE, 0x0039F0EF,
    0x0036F1F0, 0x0033F2F0, 0x002FF3F1, 0x002CF4F2, 0x0029F4F3, 0x0025F5F4, 0x0022F6F5, 0x001FF7F6,
    0x001BF8F7, 0x0018F9F8, 0x0015F9F9, 0x0011FAFA, 0x000EFBFB, 0x000BFCFC, 0x0007FDFD, 0x0004FEFE,
    0x0000FFFF, 0x0000F9FF, 0x0000F3FF, 0x0000ECFF, 0x0000E6FF, 0x0000E0FF, 0x0000D9FF, 0x0000D3FF,
    0x0000CCFF, 0x0000C6FF, 0x0000C0FF, 0x0000B9FF, 0x0000B3FF, 0x0000ADFF, 0x0000A6FF, 0x0000A0FF,
    0x000099FF, 0x000093FF, 0x00008DFF, 0x000086FF, 0x000080FF, 0x00007AFF, 0x000073FF, 0x00006DFF,
    0x000066FF, 0x000060FF, 0x00005AFF, 0x000053FF, 0x00004DFF, 0x000047FF, 0x000040FF, 0x00003AFF
};

static unsigned long fldigiPalette[256] =
{
    // generated by NO3M from  fldigi
    /* static short Palette[9][3] = {
        {   0,  0,  0 }, {   0,  0,177 }, {   3,110,227 }, {   0,204,204 }, { 223,223,223 },
        {   0,234,  0 }, { 244,244,  0 }, { 250,126,  0 }, { 244,  0,  0 }
    }; */
    0x00000000, 0x00050000, 0x000B0000, 0x00100000, 0x00160000, 0x001B0000, 0x00210000, 0x00260000,
    0x002C0000, 0x00310000, 0x00370000, 0x003C0000, 0x00420000, 0x00470000, 0x004D0000, 0x00520000,
    0x00580000, 0x005E0000, 0x00630000, 0x00690000, 0x006E0000, 0x00740000, 0x00790000, 0x007F0000,
    0x00840000, 0x008A0000, 0x008F0000, 0x00950000, 0x009A0000, 0x00A00000, 0x00A50000, 0x00AB0000,
    0x00B10000, 0x00B20300, 0x00B40600, 0x00B50A00, 0x00B70D00, 0x00B81100, 0x00BA1400, 0x00BB1800,
    0x00BD1B00, 0x00BF1E00, 0x00C02200, 0x00C22501, 0x00C32901, 0x00C52C01, 0x00C63001, 0x00C83301,
    0x00CA3701, 0x00CB3A01, 0x00CD3D01, 0x00CE4101, 0x00D04401, 0x00D14801, 0x00D34B02, 0x00D44F02,
    0x00D65202, 0x00D85502, 0x00D95902, 0x00DB5C02, 0x00DC6002, 0x00DE6302, 0x00DF6702, 0x00E16A02,
    0x00E36E03, 0x00E37003, 0x00E27303, 0x00E17603, 0x00E17903, 0x00E07C03, 0x00DF7F03, 0x00DE8203,
    0x00DE8503, 0x00DD8803, 0x00DC8B03, 0x00DC8E02, 0x00DB9102, 0x00DA9402, 0x00D99702, 0x00D99A02,
    0x00D89D02, 0x00D79F02, 0x00D7A202, 0x00D6A502, 0x00D5A802, 0x00D4AB02, 0x00D4AE01, 0x00D3B101,
    0x00D2B401, 0x00D2B701, 0x00D1BA01, 0x00D0BD01, 0x00CFC001, 0x00CFC301, 0x00CEC601, 0x00CDC901,
    0x00CCCC00, 0x00CCCC06, 0x00CDCD0D, 0x00CDCD14, 0x00CECE1B, 0x00CECE22, 0x00CFCF29, 0x00D0D030,
    0x00D0D037, 0x00D1D13E, 0x00D1D145, 0x00D2D24C, 0x00D3D353, 0x00D3D35A, 0x00D4D461, 0x00D4D468,
    0x00D5D56F, 0x00D6D676, 0x00D6D67D, 0x00D7D784, 0x00D7D78B, 0x00D8D892, 0x00D9D999, 0x00D9D9A0,
    0x00DADAA7, 0x00DADAAE, 0x00DBDBB5, 0x00DCDCBC, 0x00DCDCC3, 0x00DDDDCA, 0x00DDDDD1, 0x00DEDED8,
    0x00DFDFDF, 0x00D9DFD9, 0x00D2DFD2, 0x00CBE0CB, 0x00C4E0C4, 0x00BDE0BD, 0x00B6E1B6, 0x00AFE1AF,
    0x00A8E1A8, 0x00A1E2A1, 0x009AE29A, 0x0093E293, 0x008CE38C, 0x0085E385, 0x007EE37E, 0x0077E477,
    0x0070E470, 0x0069E469, 0x0062E562, 0x005BE55B, 0x0054E554, 0x004DE64D, 0x0046E646, 0x003FE63F,
    0x0038E738, 0x0031E731, 0x002AE72A, 0x0023E823, 0x001CE81C, 0x0015E815, 0x000EE90E, 0x0007E907,
    0x0000EA00, 0x0000EA07, 0x0000EA0F, 0x0000EA16, 0x0000EB1E, 0x0000EB26, 0x0000EB2D, 0x0000EC35,
    0x0000EC3D, 0x0000EC44, 0x0000ED4C, 0x0000ED53, 0x0000ED5B, 0x0000EE63, 0x0000EE6A, 0x0000EE72,
    0x0000EF7A, 0x0000EF81, 0x0000EF89, 0x0000EF90, 0x0000F098, 0x0000F0A0, 0x0000F0A7, 0x0000F1AF,
    0x0000F1B7, 0x0000F1BE, 0x0000F2C6, 0x0000F2CD, 0x0000F2D5, 0x0000F3DD, 0x0000F3E4, 0x0000F3EC,
    0x0000F4F4, 0x0000F1F4, 0x0000EDF4, 0x0000E9F4, 0x0000E6F4, 0x0000E2F4, 0x0000DEF5, 0x0000DBF5,
    0x0000D7F5, 0x0000D3F5, 0x0000D0F5, 0x0000CCF6, 0x0000C8F6, 0x0000C5F6, 0x0000C1F6, 0x0000BDF6,
    0x0000B9F7, 0x0000B6F7, 0x0000B2F7, 0x0000AEF7, 0x0000ABF7, 0x0000A7F7, 0x0000A3F8, 0x0000A0F8,
    0x00009CF8, 0x000098F8, 0x000095F8, 0x000091F9, 0x00008DF9, 0x00008AF9, 0x000086F9, 0x000082F9,
    0x00007EFA, 0x00007BFA, 0x000077FA, 0x000073FA, 0x00006FFA, 0x00006BFA, 0x000067F9, 0x000063F9,
    0x00005FF9, 0x00005BF9, 0x000057F9, 0x000053F8, 0x00004FF8, 0x00004BF8, 0x000047F8, 0x000043F8,
    0x00003FF7, 0x00003CF7, 0x000038F7, 0x000034F7, 0x000030F7, 0x00002CF7, 0x000028F6, 0x000024F6,
    0x000020F6, 0x00001CF6, 0x000018F6, 0x000014F5, 0x000010F5, 0x00000CF5, 0x000008F5, 0x000004F5
};

static unsigned long gmfskPalette[256] =
{
    // generated by NO3M from  fldigi
    /* static short Palette[9][3] = {
        {   0,  0,255 }, {   0, 62,194 }, {   0,126,130 }, {   0,190, 66 }, {   0,254,  2 },
        {  62,194,  0 }, { 126,130,  0 }, { 190, 66,  0 }, { 254,  2,  0 }
    }; */
    0x00FF0000, 0x00FE0100, 0x00FC0300, 0x00FA0500, 0x00F80700, 0x00F60900, 0x00F40B00, 0x00F20D00,
    0x00F00F00, 0x00EE1100, 0x00EC1300, 0x00EB1500, 0x00E91700, 0x00E71900, 0x00E51B00, 0x00E31D00,
    0x00E11F00, 0x00DF2000, 0x00DD2200, 0x00DB2400, 0x00D92600, 0x00D72800, 0x00D62A00, 0x00D42C00,
    0x00D22E00, 0x00D03000, 0x00CE3200, 0x00CC3400, 0x00CA3600, 0x00C83800, 0x00C63A00, 0x00C43C00,
    0x00C23E00, 0x00C04000, 0x00BE4200, 0x00BC4400, 0x00BA4600, 0x00B84800, 0x00B64A00, 0x00B44C00,
    0x00B24E00, 0x00B05000, 0x00AE5200, 0x00AC5400, 0x00AA5600, 0x00A85800, 0x00A65A00, 0x00A45C00,
    0x00A25E00, 0x00A06000, 0x009E6200, 0x009C6400, 0x009A6600, 0x00986800, 0x00966A00, 0x00946C00,
    0x00926E00, 0x00907000, 0x008E7200, 0x008C7400, 0x008A7600, 0x00887800, 0x00867A00, 0x00847C00,
    0x00827E00, 0x00808000, 0x007E8200, 0x007C8400, 0x007A8600, 0x00788800, 0x00768A00, 0x00748C00,
    0x00728E00, 0x00709000, 0x006E9200, 0x006C9400, 0x006A9600, 0x00689800, 0x00669A00, 0x00649C00,
    0x00629E00, 0x0060A000, 0x005EA200, 0x005CA400, 0x005AA600, 0x0058A800, 0x0056AA00, 0x0054AC00,
    0x0052AE00, 0x0050B000, 0x004EB200, 0x004CB400, 0x004AB600, 0x0048B800, 0x0046BA00, 0x0044BC00,
    0x0042BE00, 0x0040C000, 0x003EC200, 0x003CC400, 0x003AC600, 0x0038C800, 0x0036CA00, 0x0034CC00,
    0x0032CE00, 0x0030D000, 0x002ED200, 0x002CD400, 0x002AD600, 0x0028D800, 0x0026DA00, 0x0024DC00,
    0x0022DE00, 0x0020E000, 0x001EE200, 0x001CE400, 0x001AE600, 0x0018E800, 0x0016EA00, 0x0014EC00,
    0x0012EE00, 0x0010F000, 0x000EF200, 0x000CF400, 0x000AF600, 0x0008F800, 0x0006FA00, 0x0004FC00,
    0x0002FE00, 0x0002FD01, 0x0002FB03, 0x0002F905, 0x0002F707, 0x0002F509, 0x0002F30B, 0x0002F10D,
    0x0002EF0F, 0x0002EE11, 0x0002EC13, 0x0002EA15, 0x0002E817, 0x0002E619, 0x0002E41B, 0x0002E21D,
    0x0001E01F, 0x0001DF20, 0x0001DD22, 0x0001DB24, 0x0001D926, 0x0001D728, 0x0001D52A, 0x0001D32C,
    0x0001D12E, 0x0001D030, 0x0001CE32, 0x0001CC34, 0x0001CA36, 0x0001C838, 0x0001C63A, 0x0001C43C,
    0x0000C23E, 0x0000C040, 0x0000BE42, 0x0000BC44, 0x0000BA46, 0x0000B848, 0x0000B64A, 0x0000B44C,
    0x0000B24E, 0x0000B050, 0x0000AE52, 0x0000AC54, 0x0000AA56, 0x0000A858, 0x0000A65A, 0x0000A45C,
    0x0000A25E, 0x0000A060, 0x00009E62, 0x00009C64, 0x00009A66, 0x00009868, 0x0000966A, 0x0000946C,
    0x0000926E, 0x00009070, 0x00008E72, 0x00008C74, 0x00008A76, 0x00008878, 0x0000867A, 0x0000847C,
    0x0000827E, 0x00008080, 0x00007E82, 0x00007C84, 0x00007A86, 0x00007888, 0x0000768A, 0x0000748C,
    0x0000728E, 0x00007090, 0x00006E92, 0x00006C94, 0x00006A96, 0x00006898, 0x0000669A, 0x0000649C,
    0x0000629E, 0x000060A0, 0x00005EA2, 0x00005CA4, 0x00005AA6, 0x000058A8, 0x000056AA, 0x000054AC,
    0x000052AE, 0x000050B0, 0x00004EB2, 0x00004CB4, 0x00004AB6, 0x000048B8, 0x000046BA, 0x000044BC,
    0x000042BE, 0x000040C0, 0x00003EC2, 0x00003CC4, 0x00003AC6, 0x000038C8, 0x000036CA, 0x000034CC,
    0x000032CE, 0x000030D0, 0x00002ED2, 0x00002CD4, 0x00002AD6, 0x000028D8, 0x000026DA, 0x000024DC,
    0x000022DE, 0x000020E0, 0x00001EE2, 0x00001CE4, 0x00001AE6, 0x000018E8, 0x000016EA, 0x000014EC,
    0x000012EE, 0x000010F0, 0x00000EF2, 0x00000CF4, 0x00000AF6, 0x000008F8, 0x000006FA, 0x000004FC
};

static unsigned long negativePalette[256] =
{
    // generated by NO3M from  fldigi
    /* static short Palette[9][3] = {
                { 255,255,255 }, { 223,223,223 }, { 191,191,191 }, { 159,159,159 }, { 127,127,127 },
                {  95, 95, 95 }, {  63, 63, 63 }, {  31, 31, 31 }, {   0,  0,  0 }
    };*/
    0x00FFFFFF, 0x00FEFEFE, 0x00FDFDFD, 0x00FCFCFC, 0x00FBFBFB, 0x00FAFAFA, 0x00F9F9F9, 0x00F8F8F8,
    0x00F7F7F7, 0x00F6F6F6, 0x00F5F5F5, 0x00F4F4F4, 0x00F3F3F3, 0x00F2F2F2, 0x00F1F1F1, 0x00F0F0F0,
    0x00EFEFEF, 0x00EEEEEE, 0x00EDEDED, 0x00ECECEC, 0x00EBEBEB, 0x00EAEAEA, 0x00E9E9E9, 0x00E8E8E8,
    0x00E7E7E7, 0x00E6E6E6, 0x00E5E5E5, 0x00E4E4E4, 0x00E3E3E3, 0x00E2E2E2, 0x00E1E1E1, 0x00E0E0E0,
    0x00DFDFDF, 0x00DEDEDE, 0x00DDDDDD, 0x00DCDCDC, 0x00DBDBDB, 0x00DADADA, 0x00D9D9D9, 0x00D8D8D8,
    0x00D7D7D7, 0x00D6D6D6, 0x00D5D5D5, 0x00D4D4D4, 0x00D3D3D3, 0x00D2D2D2, 0x00D1D1D1, 0x00D0D0D0,
    0x00CFCFCF, 0x00CECECE, 0x00CDCDCD, 0x00CCCCCC, 0x00CBCBCB, 0x00CACACA, 0x00C9C9C9, 0x00C8C8C8,
    0x00C7C7C7, 0x00C6C6C6, 0x00C5C5C5, 0x00C4C4C4, 0x00C3C3C3, 0x00C2C2C2, 0x00C1C1C1, 0x00C0C0C0,
    0x00BFBFBF, 0x00BEBEBE, 0x00BDBDBD, 0x00BCBCBC, 0x00BBBBBB, 0x00BABABA, 0x00B9B9B9, 0x00B8B8B8,
    0x00B7B7B7, 0x00B6B6B6, 0x00B5B5B5, 0x00B4B4B4, 0x00B3B3B3, 0x00B2B2B2, 0x00B1B1B1, 0x00B0B0B0,
    0x00AFAFAF, 0x00AEAEAE, 0x00ADADAD, 0x00ACACAC, 0x00ABABAB, 0x00AAAAAA, 0x00A9A9A9, 0x00A8A8A8,
    0x00A7A7A7, 0x00A6A6A6, 0x00A5A5A5, 0x00A4A4A4, 0x00A3A3A3, 0x00A2A2A2, 0x00A1A1A1, 0x00A0A0A0,
    0x009F9F9F, 0x009E9E9E, 0x009D9D9D, 0x009C9C9C, 0x009B9B9B, 0x009A9A9A, 0x00999999, 0x00989898,
    0x00979797, 0x00969696, 0x00959595, 0x00949494, 0x00939393, 0x00929292, 0x00919191, 0x00909090,
    0x008F8F8F, 0x008E8E8E, 0x008D8D8D, 0x008C8C8C, 0x008B8B8B, 0x008A8A8A, 0x00898989, 0x00888888,
    0x00878787, 0x00868686, 0x00858585, 0x00848484, 0x00838383, 0x00828282, 0x00818181, 0x00808080,
    0x007F7F7F, 0x007E7E7E, 0x007D7D7D, 0x007C7C7C, 0x007B7B7B, 0x007A7A7A, 0x00797979, 0x00787878,
    0x00777777, 0x00767676, 0x00757575, 0x00747474, 0x00737373, 0x00727272, 0x00717171, 0x00707070,
    0x006F6F6F, 0x006E6E6E, 0x006D6D6D, 0x006C6C6C, 0x006B6B6B, 0x006A6A6A, 0x00696969, 0x00686868,
    0x00676767, 0x00666666, 0x00656565, 0x00646464, 0x00636363, 0x00626262, 0x00616161, 0x00606060,
    0x005F5F5F, 0x005E5E5E, 0x005D5D5D, 0x005C5C5C, 0x005B5B5B, 0x005A5A5A, 0x00595959, 0x00585858,
    0x00575757, 0x00565656, 0x00555555, 0x00545454, 0x00535353, 0x00525252, 0x00515151, 0x00505050,
    0x004F4F4F, 0x004E4E4E, 0x004D4D4D, 0x004C4C4C, 0x004B4B4B, 0x004A4A4A, 0x00494949, 0x00484848,
    0x00474747, 0x00464646, 0x00454545, 0x00444444, 0x00434343, 0x00424242, 0x00414141, 0x00404040,
    0x003F3F3F, 0x003E3E3E, 0x003D3D3D, 0x003C3C3C, 0x003B3B3B, 0x003A3A3A, 0x00393939, 0x00383838,
    0x00373737, 0x00363636, 0x00353535, 0x00343434, 0x00333333, 0x00323232, 0x00313131, 0x00303030,
    0x002F2F2F, 0x002E2E2E, 0x002D2D2D, 0x002C2C2C, 0x002B2B2B, 0x002A2A2A, 0x00292929, 0x00282828,
    0x00272727, 0x00262626, 0x00252525, 0x00242424, 0x00232323, 0x00222222, 0x00212121, 0x00202020,
    0x001F1F1F, 0x001F1F1F, 0x001E1E1E, 0x001D1D1D, 0x001C1C1C, 0x001B1B1B, 0x001A1A1A, 0x00191919,
    0x00181818, 0x00171717, 0x00161616, 0x00151515, 0x00141414, 0x00131313, 0x00121212, 0x00111111,
    0x00101010, 0x000F0F0F, 0x000E0E0E, 0x000D0D0D, 0x000C0C0C, 0x000B0B0B, 0x000A0A0A, 0x00090909,
    0x00080808, 0x00070707, 0x00060606, 0x00050505, 0x00040404, 0x00030303, 0x00020202, 0x00010101
};

static unsigned long spectrogramPalette[256] =
{
    // from speclab
    0x00030202,0x000C0002,0x00160002,0x00200002,0x002A0002,0x00340002,0x003E0002,0x00480002,
    0x00520002,0x005C0002,0x00660002,0x00700002,0x007A0002,0x00840002,0x008E0002,0x00980002,
    0x00A20002,0x00AC0302,0x00B60502,0x00BA0802,0x00BE0A02,0x00C20D02,0x00C60F02,0x00C71202,
    0x00C81402,0x00CA1702,0x00CB1902,0x00CD1C02,0x00CE1E02,0x00D02102,0x00D12302,0x00D32602,
    0x00D32802,0x00D32B02,0x00D42D02,0x00D43002,0x00D53202,0x00D53502,0x00D63702,0x00D63A02,
    0x00D73C02,0x00D73F02,0x00D84202,0x00D84402,0x00D94702,0x00D94902,0x00DA4C02,0x00DA4E02,
    0x00DB5102,0x00DB5302,0x00DC5602,0x00DC5802,0x00DD5B02,0x00DD5D02,0x00DE6002,0x00DE6202,
    0x00DF6502,0x00DF6702,0x00E06A02,0x00E06C02,0x00E16F02,0x00E27102,0x00E27402,0x00E37602,
    0x00E37902,0x00E47B02,0x00E47E02,0x00E58102,0x00E58302,0x00E68602,0x00E68802,0x00E78B02,
    0x00E78D02,0x00E89002,0x00E89202,0x00E99502,0x00E99702,0x00EA9A02,0x00EA9C02,0x00EB9F02,
    0x00EBA102,0x00ECA402,0x00ECA602,0x00EDA902,0x00EDAB02,0x00EEAE02,0x00EEB002,0x00EFB302,
    0x00EFB502,0x00F0B802,0x00F1BA02,0x00F1BD02,0x00F2C002,0x00F2C202,0x00F3C502,0x00F3C702,
    0x00F4CA02,0x00F4CC02,0x00F5CF02,0x00F5D102,0x00F6D402,0x00F6D602,0x00F7D902,0x00F7DB02,
    0x00F8DE02,0x00F8E002,0x00F9E302,0x00F9E502,0x00FAE802,0x00FAEA02,0x00FBED01,0x00FBEF02,
    0x00FCF204,0x00FCF405,0x00FDF707,0x00FDF908,0x00FEFC0A,0x00FFFF0C,0x00FEFE0D,0x00FCFF0F,
    0x00FAFF10,0x00F9FF12,0x00F7FF14,0x00F5FF17,0x00F4FF1A,0x00F2FF1D,0x00F0FF20,0x00EFFF23,
    0x00EDFF26,0x00EBFF29,0x00E9FF2D,0x00E8FF30,0x00E6FF33,0x00E4FF36,0x00E3FF39,0x00E1FF3C,
    0x00DFFF3F,0x00DEFF43,0x00DCFF46,0x00DAFF49,0x00D9FF4C,0x00D7FF4F,0x00D5FF52,0x00D3FF55,
    0x00D1FF58,0x00CFFF5C,0x00CDFF5F,0x00CBFF62,0x00C9FF65,0x00C7FF68,0x00C5FF6B,0x00C3FF6E,
    0x00C1FF72,0x00BFFF75,0x00BDFF78,0x00BBFF7B,0x00B9FF7E,0x00B7FF81,0x00B5FF84,0x00B3FF87,
    0x00B1FF8B,0x00AFFF8E,0x00ADFF91,0x00ABFF94,0x00A9FF97,0x00A7FF9A,0x00A5FF9D,0x00A3FFA1,
    0x00A1FFA4,0x009FFFA7,0x009DFFAA,0x009BFFAD,0x0099FFB0,0x0097FFB3,0x0095FFB6,0x0093FFBA,
    0x0091FFBD,0x008FFFC0,0x008DFFC3,0x008BFFC6,0x0089FFC9,0x0087FFCC,0x0085FFD0,0x0083FFD3,
    0x0082FFD6,0x0080FFD9,0x007EFFDC,0x007BFFDF,0x0079FFE2,0x0077FFE5,0x0074FFE9,0x0073FFEC,
    0x0072FFEF,0x0071FFF2,0x0070FFF5,0x006FFFF8,0x006EFFFB,0x006DFFFF,0x006CFCFF,0x006BF8FF,
    0x006AF4FF,0x0069F0FF,0x0068ECFE,0x0067E8FD,0x0066E4FC,0x0065E0FB,0x0064DCFA,0x0064D8F9,
    0x0064D4F8,0x0063D1F7,0x0063CDF6,0x0061C9F5,0x0060C5F4,0x0060C1F3,0x005FBDF2,0x005FB9F1,
    0x005FB5F0,0x005EB1EF,0x005EADEE,0x005EA9ED,0x005EA5EC,0x005EA2EB,0x005E9EEA,0x005E9AE9,
    0x005E96E8,0x005E92E7,0x005E8EE6,0x005E8AE5,0x005E86E4,0x005E82E3,0x005E7EE2,0x005E7AE1,
    0x005E77E0,0x005E73DF,0x005E6FDE,0x005D6BDD,0x005D67DC,0x005D63DB,0x005D5FDA,0x005C5BD9,
    0x005C57D8,0x005C53D7,0x005C4FD6,0x005C4BD5,0x005C48D4,0x005C44D3,0x005C40D2,0x005C3CD1,
    0x005C38D0,0x005C34CF,0x005C30CE,0x005C2CCD,0x005C28CC,0x005C24CB,0x005C20CA,0x005C1CC9
};

static unsigned long stereo3dPalette[256] =
{
    // from speclab
    0x00FFFF00,0x00FFFF00,0x00FEFE01,0x00FDFD02,0x00FCFC03,0x00FBFB04,0x00FAFA05,0x00F9F906,
    0x00F8F807,0x00F7F708,0x00F6F609,0x00F5F50A,0x00F4F40B,0x00F3F30C,0x00F2F20D,0x00F1F10E,
    0x00F0F00F,0x00EFEF10,0x00EEEE11,0x00EDED12,0x00ECEC13,0x00EBEB14,0x00EAEA15,0x00E9E916,
    0x00E8E817,0x00E7E718,0x00E6E619,0x00E5E51A,0x00E4E41B,0x00E3E31C,0x00E2E21D,0x00E1E11E,
    0x00E0E01F,0x00DFDF20,0x00DEDE21,0x00DDDD22,0x00DCDC23,0x00DBDB24,0x00DADA25,0x00D9D926,
    0x00D8D827,0x00D7D728,0x00D6D629,0x00D5D52A,0x00D4D42B,0x00D3D32C,0x00D2D22D,0x00D1D12E,
    0x00D0D02F,0x00CFCF30,0x00CECE31,0x00CDCD32,0x00CCCC33,0x00CBCB34,0x00CACA35,0x00C9C936,
    0x00C8C837,0x00C7C738,0x00C6C639,0x00C5C53A,0x00C4C43B,0x00C3C33C,0x00C2C23D,0x00C1C13E,
    0x00C0C03F,0x00BFBF40,0x00BEBE41,0x00BDBD42,0x00BCBC43,0x00BBBB44,0x00BABA45,0x00B9B946,
    0x00B8B847,0x00B7B748,0x00B6B649,0x00B5B54A,0x00B4B44B,0x00B3B34C,0x00B2B24D,0x00B1B14E,
    0x00B0B04F,0x00AFAF50,0x00AEAE51,0x00ADAD52,0x00ACAC53,0x00ABAB54,0x00AAAA55,0x00A9A956,
    0x00A8A857,0x00A7A758,0x00A6A659,0x00A5A55A,0x00A4A45B,0x00A3A35C,0x00A2A25D,0x00A1A15E,
    0x00A0A05F,0x009F9F60,0x009E9E61,0x009D9D62,0x009C9C63,0x009B9B64,0x009A9A65,0x00999966,
    0x00989867,0x00979768,0x00969669,0x0095956A,0x0094946B,0x0093936C,0x0092926D,0x0091916E,
    0x0090906F,0x008F8F70,0x008E8E71,0x008D8D72,0x008C8C73,0x008B8B74,0x008A8A75,0x00898976,
    0x00888877,0x00878778,0x00868679,0x0085857A,0x0084847B,0x0083837C,0x0082827D,0x0081817E,
    0x0080807F,0x007F7F80,0x007E7E81,0x007D7D82,0x007C7C83,0x007B7B84,0x007A7A85,0x00797986,
    0x00787887,0x00777788,0x00767689,0x0075758A,0x0074748B,0x0073738C,0x0072728D,0x0071718E,
    0x0070708F,0x006F6F90,0x006E6E91,0x006D6D92,0x006C6C93,0x006B6B94,0x006A6A95,0x00696996,
    0x00686897,0x00676798,0x00666699,0x0065659A,0x0064649B,0x0063639C,0x0062629D,0x0061619E,
    0x0060609F,0x005F5FA0,0x005E5EA1,0x005D5DA2,0x005C5CA3,0x005B5BA4,0x005A5AA5,0x005959A6,
    0x005858A7,0x005757A8,0x005656A9,0x005555AA,0x005454AB,0x005353AC,0x005252AD,0x005151AE,
    0x005050AF,0x004F4FB0,0x004E4EB1,0x004D4DB2,0x004C4CB3,0x004B4BB4,0x004A4AB5,0x004949B6,
    0x004848B7,0x004747B8,0x004646B9,0x004545BA,0x004444BB,0x004343BC,0x004242BD,0x004141BE,
    0x004040BF,0x003F3FC0,0x003E3EC1,0x003D3DC2,0x003C3CC3,0x003B3BC4,0x003A3AC5,0x003939C6,
    0x003838C7,0x003737C8,0x003636C9,0x003535CA,0x003434CB,0x003333CC,0x003232CD,0x003131CE,
    0x003030CF,0x002F2FD0,0x002E2ED1,0x002D2DD2,0x002C2CD3,0x002B2BD4,0x002A2AD5,0x002929D6,
    0x002828D7,0x002727D8,0x002626D9,0x002525DA,0x002424DB,0x002323DC,0x002222DD,0x002121DE,
    0x002020DF,0x001F1FE0,0x001E1EE1,0x001D1DE2,0x001C1CE3,0x001B1BE4,0x001A1AE5,0x001919E6,
    0x001818E7,0x001717E8,0x001616E9,0x001515EA,0x001414EB,0x001313EC,0x001212ED,0x001111EE,
    0x001010EF,0x000F0FF0,0x000E0EF1,0x000D0DF2,0x000C0CF3,0x000B0BF4,0x000A0AF5,0x000909F6,
    0x000808F7,0x000707F8,0x000606F9,0x000505FA,0x000404FB,0x000303FC,0x000202FD,0x000101FF
};

static unsigned long spectrumlabPalette[256] =
{
    // from speclab
    0x00040404,0x00060404,0x00080404,0x000A0404,0x000D0404,0x000F0404,0x00110404,0x00130404,
    0x00160404,0x00180404,0x001A0404,0x001C0404,0x001F0404,0x00210404,0x00230404,0x00250303,
    0x00280303,0x002A0303,0x002C0303,0x002F0303,0x00310303,0x00330303,0x00350303,0x00380303,
    0x003A0303,0x003C0303,0x003E0303,0x00410303,0x00430303,0x00450303,0x00470303,0x004A0303,
    0x004C0303,0x004E0303,0x00510303,0x00520303,0x00540303,0x00560303,0x00580303,0x00590303,
    0x005B0303,0x005D0303,0x005F0303,0x00600303,0x00620303,0x00640303,0x00660303,0x00660303,
    0x00670300,0x00670301,0x00680300,0x00680301,0x00690303,0x00690305,0x006A0307,0x006A0309,
    0x006B030B,0x006C030D,0x006C030F,0x006C0311,0x006D0313,0x006D0314,0x006E0316,0x006E0318,
    0x006F031A,0x006F031C,0x0070031E,0x00700320,0x00710322,0x00710324,0x00710326,0x00710327,
    0x00710329,0x0071032B,0x0071032D,0x0071032F,0x00710331,0x00710333,0x00710335,0x00710337,
    0x00710339,0x0071033A,0x0070033C,0x0070033E,0x00700340,0x00700342,0x00700344,0x00700346,
    0x006F0348,0x006F034A,0x006F034C,0x006F034E,0x006F034F,0x006F0351,0x006E0353,0x006E0355,
    0x006E0357,0x006E0359,0x006E035B,0x006E035D,0x006D035F,0x006D0361,0x006D0362,0x006C0364,
    0x006C0366,0x006B0368,0x006B036A,0x006B036C,0x006A036E,0x006A0370,0x00690272,0x00680474,
    0x00670675,0x00650877,0x00640A79,0x00620D7B,0x00620F7D,0x0061117F,0x005F1381,0x005E1683,
    0x005D1885,0x005B1A87,0x005A1C89,0x00591E8A,0x0058218C,0x0057238E,0x00552590,0x00542792,
    0x00522A94,0x00502C96,0x004F2E98,0x004D309A,0x004C329C,0x004B359D,0x0048379F,0x004739A1,
    0x00453BA3,0x00433EA5,0x004140A7,0x003F42A9,0x003D44AB,0x003B46AD,0x003949AF,0x00384BB0,
    0x00374DB2,0x00354FB4,0x003352B6,0x003254B8,0x002F56BA,0x002D58BC,0x002C5ABE,0x002A5CC0,
    0x00285EC2,0x002760C4,0x002562C5,0x002364C7,0x002266C9,0x002068CB,0x001F6ACD,0x001D6CCF,
    0x001B6ED1,0x001A70D3,0x001872D5,0x001774D7,0x001576D8,0x001479DA,0x00137BDC,0x00127DDE,
    0x000D7FE0,0x000F81E2,0x000E83E4,0x000D85E6,0x000D87E8,0x000C89EA,0x000B8BEB,0x000B8DED,
    0x000B8FEF,0x000A91F1,0x000993F3,0x000895F5,0x000797F7,0x000799F9,0x00079BFB,0x00069DFD,
    0x0006A0FF,0x0006A1FF,0x0005A3FF,0x0005A5FF,0x0004A6FF,0x0004A8FF,0x0004AAFF,0x0004ABFF,
    0x0004ADFF,0x0004AFFF,0x0004B1FF,0x0004B2FF,0x0004B4FF,0x0004B6FF,0x0004B7FF,0x0004B9FF,
    0x0004BBFF,0x0004BDFF,0x0004BEFF,0x0004C0FF,0x0004C2FF,0x0004C3FF,0x0004C5FF,0x0004C7FF,
    0x0004C8FF,0x0004CAFF,0x0004CCFF,0x0004CEFF,0x0004CFFF,0x0004D1FF,0x0004D3FF,0x0004D4FF,
    0x0004D6FF,0x0004D8FF,0x0004DAFF,0x0004DBFF,0x0004DCFF,0x0004DDFF,0x0004DEFF,0x0004DFFF,
    0x0004E0FF,0x0004E1FF,0x0000E2FF,0x0001E3FF,0x0001E4FF,0x0007E5FF,0x000EE6FF,0x0015E7FF,
    0x001BE8FF,0x0022E9FF,0x0029EAFF,0x002FEBFF,0x0036ECFF,0x003DEDFF,0x0044EEFF,0x0051EFFF,
    0x005FF0FF,0x006DF1FF,0x007AF2FF,0x0088F3FF,0x0096F4FF,0x00A4F5FF,0x00B1F6FF,0x00BFF7FF,
    0x00CDF8FF,0x00DBF9FF,0x00E7FAFF,0x00F4FBFF,0x00F5FCFF,0x00F8FDFF,0x00FAFEFF,0x00FEFFFF
};

static unsigned long no3m1Palette[256] =
{
    // generated with speclab
    0x00000000,0x00000000,0x00000000,0x00010101,0x00010101,0x00020202,0x00020202,0x00020202,
    0x00030303,0x00030303,0x00040404,0x00040404,0x00050505,0x00050505,0x00050505,0x00060606,
    0x00060606,0x00070707,0x00070707,0x00070707,0x00080808,0x00080808,0x00090909,0x00090909,
    0x000A0A0A,0x000A0A0A,0x000A0A0A,0x000B0B0B,0x000B0B0B,0x000C0C0C,0x000C0C0C,0x000C0C0C,
    0x000D0D0D,0x000D0D0D,0x000E0E0E,0x000E0E0E,0x000F0F0F,0x000F0F0F,0x000F0F0F,0x00101010,
    0x00101010,0x00111111,0x00111111,0x00111111,0x00121212,0x00121212,0x00131313,0x00131313,
    0x00141414,0x00141414,0x00141414,0x00151515,0x00151515,0x00161616,0x00161616,0x00161616,
    0x00171717,0x00171717,0x00181818,0x00181818,0x00191919,0x00191919,0x00191919,0x001A1A1A,
    0x001A1A1A,0x001B1B1B,0x001B1B1B,0x001B1B1B,0x001C1C1C,0x001C1C1C,0x001D1D1D,0x001D1D1D,
    0x001E1E1E,0x001E1E1E,0x001E1E1E,0x001F1F1F,0x001F1F1F,0x00202020,0x00202020,0x00202020,
    0x00212121,0x00212121,0x00222222,0x00222222,0x00232323,0x00232323,0x00232323,0x00242424,
    0x00242424,0x00252525,0x00252525,0x00262626,0x00282828,0x002B2B2B,0x002D2D2D,0x00303030,
    0x00323232,0x00353535,0x00383838,0x003A3A3A,0x003D3D3D,0x003F3F3F,0x00424242,0x00454545,
    0x00474747,0x004A4A4A,0x004C4C4C,0x004F4F4F,0x00515151,0x00545454,0x00575757,0x00595959,
    0x005C5C5C,0x005E5E5E,0x00616161,0x00646464,0x00666666,0x00696969,0x006B6B6B,0x006E6E6E,
    0x00717171,0x00737373,0x00767676,0x00787878,0x007B7B7B,0x007D7D7D,0x00808080,0x00838383,
    0x00858585,0x00888888,0x008A8A8A,0x008D8D8D,0x00909090,0x00929292,0x00959595,0x00979797,
    0x009A9A9A,0x009D9D9D,0x009F9F9F,0x00A2A2A2,0x00A5A5A5,0x00A7A7A7,0x00AAAAAA,0x00ADADAD,
    0x00AFAFAF,0x00B2B2B2,0x00B5B5B5,0x00B8B8B8,0x00BABABA,0x00BDBDBD,0x00C0C0C0,0x00C2C2C2,
    0x00C5C5C5,0x00C8C8C8,0x00CBCBCB,0x00CBCBCB,0x00CCCCCC,0x00CCCCCC,0x00CDCDCD,0x00CDCDCD,
    0x00CECECE,0x00CECECE,0x00CFCFCF,0x00CFCFCF,0x00D0D0D0,0x00D0D0D0,0x00D1D1D1,0x00D1D1D1,
    0x00D2D2D2,0x00D2D2D2,0x00D3D3D3,0x00D3D3D3,0x00D4D4D4,0x00D4D4D4,0x00D5D5D5,0x00D5D5D5,
    0x00D6D6D6,0x00D6D6D6,0x00D7D7D7,0x00D7D7D7,0x00D8D8D8,0x00D8D8D8,0x00D9D9D9,0x00D9D9D9,
    0x00DADADA,0x00DADADA,0x00DBDBDB,0x00DBDBDB,0x00DCDCDC,0x00DDDDDD,0x00DDDDDD,0x00DEDEDE,
    0x00DEDEDE,0x00DFDFDF,0x00DFDFDF,0x00E0E0E0,0x00E0E0E0,0x00E1E1E1,0x00E1E1E1,0x00E2E2E2,
    0x00E2E2E2,0x00E3E3E3,0x00E3E3E3,0x00E4E4E4,0x00E4E4E4,0x00E5E5E5,0x00E5E5E5,0x00E6E6E6,
    0x00E6E6E6,0x00E7E7E7,0x00E7E7E7,0x00E8E8E8,0x00E8E8E8,0x00E9E9E9,0x00E9E9E9,0x00EAEAEA,
    0x00EAEAEA,0x00EBEBEB,0x00EBEBEB,0x00ECECEC,0x00ECECEC,0x00EDEDED,0x00EEEEEE,0x00EEEEEE,
    0x00EFEFEF,0x00EFEFEF,0x00F0F0F0,0x00F0F0F0,0x00F1F1F1,0x00F1F1F1,0x00F2F2F2,0x00F2F2F2,
    0x00F3F3F3,0x00F3F3F3,0x00F4F4F4,0x00F4F4F4,0x00F5F5F5,0x00F5F5F5,0x00F6F6F6,0x00F6F6F6,
    0x00F7F7F7,0x00F7F7F7,0x00F8F8F8,0x00F8F8F8,0x00F9F9F9,0x00F9F9F9,0x00FAFAFA,0x00FAFAFA,
    0x00FBFBFB,0x00FBFBFB,0x00FCFCFC,0x00FCFCFC,0x00FDFDFD,0x00FDFDFD,0x00FEFEFE,0x00FFFFFF
};

static unsigned long no3m1linPalette[256] =
{
    // generated with speclab
    0x00000000,0x00010101,0x00020202,0x00030303,0x00040404,0x00050505,0x00060606,0x00070707,
    0x00080808,0x00090909,0x000A0A0A,0x000B0B0B,0x000C0C0C,0x000D0D0D,0x000E0E0E,0x000F0F0F,
    0x00101010,0x00111111,0x00121212,0x00131313,0x00141414,0x00151515,0x00161616,0x00171717,
    0x00181818,0x00191919,0x001A1A1A,0x001B1B1B,0x001C1C1C,0x001D1D1D,0x001E1E1E,0x001F1F1F,
    0x00202020,0x00212121,0x00222222,0x00232323,0x00242424,0x00252525,0x00262626,0x00272727,
    0x00282828,0x00292929,0x002A2A2A,0x002B2B2B,0x002C2C2C,0x002D2D2D,0x002E2E2E,0x002F2F2F,
    0x00303030,0x00313131,0x00323232,0x00333333,0x00343434,0x00353535,0x00363636,0x00373737,
    0x00383838,0x00393939,0x003A3A3A,0x003B3B3B,0x003C3C3C,0x003D3D3D,0x003E3E3E,0x003F3F3F,
    0x00404040,0x00414141,0x00424242,0x00434343,0x00444444,0x00454545,0x00464646,0x00474747,
    0x00484848,0x00494949,0x004A4A4A,0x004B4B4B,0x004C4C4C,0x004D4D4D,0x004E4E4E,0x004F4F4F,
    0x00505050,0x00515151,0x00525252,0x00535353,0x00545454,0x00555555,0x00565656,0x00575757,
    0x00585858,0x00595959,0x005A5A5A,0x005B5B5B,0x005C5C5C,0x005D5D5D,0x005E5E5E,0x005F5F5F,
    0x00606060,0x00616161,0x00626262,0x00636363,0x00646464,0x00656565,0x00666666,0x00676767,
    0x00686868,0x00696969,0x006A6A6A,0x006B6B6B,0x006C6C6C,0x006D6D6D,0x006E6E6E,0x006F6F6F,
    0x00707070,0x00717171,0x00727272,0x00737373,0x00747474,0x00757575,0x00767676,0x00777777,
    0x00787878,0x00797979,0x007A7A7A,0x007B7B7B,0x007C7C7C,0x007D7D7D,0x007E7E7E,0x007F7F7F,
    0x00808080,0x00818181,0x00828282,0x00838383,0x00848484,0x00858585,0x00868686,0x00878787,
    0x00888888,0x00898989,0x008A8A8A,0x008B8B8B,0x008C8C8C,0x008D8D8D,0x008E8E8E,0x008F8F8F,
    0x00909090,0x00919191,0x00929292,0x00939393,0x00949494,0x00959595,0x00969696,0x00979797,
    0x00989898,0x00999999,0x009A9A9A,0x009B9B9B,0x009C9C9C,0x009D9D9D,0x009E9E9E,0x009F9F9F,
    0x00A0A0A0,0x00A1A1A1,0x00A2A2A2,0x00A3A3A3,0x00A4A4A4,0x00A5A5A5,0x00A6A6A6,0x00A7A7A7,
    0x00A8A8A8,0x00A9A9A9,0x00AAAAAA,0x00ABABAB,0x00ACACAC,0x00ADADAD,0x00AEAEAE,0x00AFAFAF,
    0x00B0B0B0,0x00B1B1B1,0x00B2B2B2,0x00B3B3B3,0x00B4B4B4,0x00B5B5B5,0x00B6B6B6,0x00B7B7B7,
    0x00B8B8B8,0x00B9B9B9,0x00BABABA,0x00BBBBBB,0x00BCBCBC,0x00BDBDBD,0x00BEBEBE,0x00BFBFBF,
    0x00C0C0C0,0x00C1C1C1,0x00C2C2C2,0x00C3C3C3,0x00C4C4C4,0x00C5C5C5,0x00C6C6C6,0x00C7C7C7,
    0x00C8C8C8,0x00C9C9C9,0x00CACACA,0x00CBCBCB,0x00CCCCCC,0x00CDCDCD,0x00CECECE,0x00CFCFCF,
    0x00D0D0D0,0x00D1D1D1,0x00D2D2D2,0x00D3D3D3,0x00D4D4D4,0x00D5D5D5,0x00D6D6D6,0x00D7D7D7,
    0x00D8D8D8,0x00D9D9D9,0x00DADADA,0x00DBDBDB,0x00DCDCDC,0x00DDDDDD,0x00DEDEDE,0x00DFDFDF,
    0x00E0E0E0,0x00E1E1E1,0x00E2E2E2,0x00E3E3E3,0x00E4E4E4,0x00E5E5E5,0x00E6E6E6,0x00E7E7E7,
    0x00E8E8E8,0x00E9E9E9,0x00EAEAEA,0x00EBEBEB,0x00ECECEC,0x00EDEDED,0x00EEEEEE,0x00EFEFEF,
    0x00F0F0F0,0x00F1F1F1,0x00F2F2F2,0x00F3F3F3,0x00F4F4F4,0x00F5F5F5,0x00F6F6F6,0x00F7F7F7,
    0x00F8F8F8,0x00F9F9F9,0x00FAFAFA,0x00FBFBFB,0x00FCFCFC,0x00FDFDFD,0x00FEFEFE,0x00FFFFFF
};

static unsigned long no3m1negPalette[256] =
{
    // generated with speclab
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FEFEFE,0x00FEFEFE,0x00FEFEFE,0x00FDFDFD,0x00FDFDFD,
    0x00FDFDFD,0x00FCFCFC,0x00FCFCFC,0x00FCFCFC,0x00FBFBFB,0x00FBFBFB,0x00FBFBFB,0x00FAFAFA,
    0x00FAFAFA,0x00FAFAFA,0x00F9F9F9,0x00F9F9F9,0x00F9F9F9,0x00F8F8F8,0x00F8F8F8,0x00F8F8F8,
    0x00F7F7F7,0x00F7F7F7,0x00F7F7F7,0x00F6F6F6,0x00F6F6F6,0x00F6F6F6,0x00F5F5F5,0x00F5F5F5,
    0x00F5F5F5,0x00F4F4F4,0x00F4F4F4,0x00F4F4F4,0x00F3F3F3,0x00F3F3F3,0x00F3F3F3,0x00F2F2F2,
    0x00F2F2F2,0x00F2F2F2,0x00F1F1F1,0x00F1F1F1,0x00F1F1F1,0x00F0F0F0,0x00F0F0F0,0x00F0F0F0,
    0x00EFEFEF,0x00EFEFEF,0x00EEEEEE,0x00EEEEEE,0x00EEEEEE,0x00EDEDED,0x00EDEDED,0x00EDEDED,
    0x00ECECEC,0x00ECECEC,0x00ECECEC,0x00EBEBEB,0x00EBEBEB,0x00EBEBEB,0x00EAEAEA,0x00EAEAEA,
    0x00EAEAEA,0x00E9E9E9,0x00E9E9E9,0x00E9E9E9,0x00E8E8E8,0x00E8E8E8,0x00E8E8E8,0x00E7E7E7,
    0x00E7E7E7,0x00E7E7E7,0x00E6E6E6,0x00E6E6E6,0x00E6E6E6,0x00E5E5E5,0x00E5E5E5,0x00E5E5E5,
    0x00E4E4E4,0x00E4E4E4,0x00E4E4E4,0x00E3E3E3,0x00E3E3E3,0x00E3E3E3,0x00E2E2E2,0x00E2E2E2,
    0x00E2E2E2,0x00E1E1E1,0x00E1E1E1,0x00E1E1E1,0x00E0E0E0,0x00E0E0E0,0x00E0E0E0,0x00DFDFDF,
    0x00DFDFDF,0x00DEDEDE,0x00D9D9D9,0x00D4D4D4,0x00CECECE,0x00C9C9C9,0x00C3C3C3,0x00BEBEBE,
    0x00B8B8B8,0x00B3B3B3,0x00ADADAD,0x00A8A8A8,0x00A2A2A2,0x009D9D9D,0x00979797,0x00929292,
    0x008C8C8C,0x00878787,0x00818181,0x007C7C7C,0x00777777,0x00717171,0x006C6C6C,0x00666666,
    0x00616161,0x005B5B5B,0x00565656,0x00505050,0x004B4B4B,0x00454545,0x00404040,0x003A3A3A,
    0x00353535,0x002F2F2F,0x002A2A2A,0x00242424,0x00242424,0x00242424,0x00242424,0x00232323,
    0x00232323,0x00232323,0x00222222,0x00222222,0x00222222,0x00222222,0x00212121,0x00212121,
    0x00212121,0x00202020,0x00202020,0x00202020,0x00202020,0x001F1F1F,0x001F1F1F,0x001F1F1F,
    0x001E1E1E,0x001E1E1E,0x001E1E1E,0x001E1E1E,0x001D1D1D,0x001D1D1D,0x001D1D1D,0x001C1C1C,
    0x001C1C1C,0x001C1C1C,0x001B1B1B,0x001B1B1B,0x001B1B1B,0x001B1B1B,0x001A1A1A,0x001A1A1A,
    0x001A1A1A,0x00191919,0x00191919,0x00191919,0x00191919,0x00181818,0x00181818,0x00181818,
    0x00171717,0x00171717,0x00171717,0x00171717,0x00161616,0x00161616,0x00161616,0x00151515,
    0x00151515,0x00151515,0x00151515,0x00141414,0x00141414,0x00141414,0x00131313,0x00131313,
    0x00131313,0x00121212,0x00121212,0x00121212,0x00121212,0x00111111,0x00111111,0x00111111,
    0x00101010,0x00101010,0x00101010,0x00101010,0x000F0F0F,0x000F0F0F,0x000F0F0F,0x000E0E0E,
    0x000E0E0E,0x000E0E0E,0x000E0E0E,0x000D0D0D,0x000D0D0D,0x000D0D0D,0x000C0C0C,0x000C0C0C,
    0x000C0C0C,0x000C0C0C,0x000B0B0B,0x000B0B0B,0x000B0B0B,0x000A0A0A,0x000A0A0A,0x000A0A0A,
    0x00090909,0x00090909,0x00090909,0x00090909,0x00080808,0x00080808,0x00080808,0x00070707,
    0x00070707,0x00070707,0x00070707,0x00060606,0x00060606,0x00060606,0x00050505,0x00050505,
    0x00050505,0x00050505,0x00040404,0x00040404,0x00040404,0x00030303,0x00030303,0x00030303,
    0x00030303,0x00020202,0x00020202,0x00020202,0x00010101,0x00010101,0x00010101,0x00000000
};

static unsigned long no3m1linnegPalette[256] =
{
    // generated with speclab
    0x00FFFFFF,0x00FEFEFE,0x00FDFDFD,0x00FCFCFC,0x00FBFBFB,0x00FAFAFA,0x00F9F9F9,0x00F8F8F8,
    0x00F7F7F7,0x00F6F6F6,0x00F5F5F5,0x00F4F4F4,0x00F3F3F3,0x00F2F2F2,0x00F1F1F1,0x00F0F0F0,
    0x00EFEFEF,0x00EEEEEE,0x00EDEDED,0x00ECECEC,0x00EBEBEB,0x00EAEAEA,0x00E9E9E9,0x00E8E8E8,
    0x00E7E7E7,0x00E6E6E6,0x00E5E5E5,0x00E4E4E4,0x00E3E3E3,0x00E2E2E2,0x00E1E1E1,0x00E0E0E0,
    0x00DFDFDF,0x00DEDEDE,0x00DDDDDD,0x00DCDCDC,0x00DBDBDB,0x00DADADA,0x00D9D9D9,0x00D8D8D8,
    0x00D7D7D7,0x00D6D6D6,0x00D5D5D5,0x00D4D4D4,0x00D3D3D3,0x00D2D2D2,0x00D1D1D1,0x00D0D0D0,
    0x00CFCFCF,0x00CECECE,0x00CDCDCD,0x00CCCCCC,0x00CBCBCB,0x00CACACA,0x00C9C9C9,0x00C8C8C8,
    0x00C7C7C7,0x00C6C6C6,0x00C5C5C5,0x00C4C4C4,0x00C3C3C3,0x00C2C2C2,0x00C1C1C1,0x00C0C0C0,
    0x00BFBFBF,0x00BEBEBE,0x00BDBDBD,0x00BCBCBC,0x00BBBBBB,0x00BABABA,0x00B9B9B9,0x00B8B8B8,
    0x00B7B7B7,0x00B6B6B6,0x00B5B5B5,0x00B4B4B4,0x00B3B3B3,0x00B2B2B2,0x00B1B1B1,0x00B0B0B0,
    0x00AFAFAF,0x00AEAEAE,0x00ADADAD,0x00ACACAC,0x00ABABAB,0x00AAAAAA,0x00A9A9A9,0x00A8A8A8,
    0x00A7A7A7,0x00A6A6A6,0x00A5A5A5,0x00A4A4A4,0x00A3A3A3,0x00A2A2A2,0x00A1A1A1,0x00A0A0A0,
    0x009F9F9F,0x009E9E9E,0x009D9D9D,0x009C9C9C,0x009B9B9B,0x009A9A9A,0x00999999,0x00989898,
    0x00979797,0x00969696,0x00959595,0x00949494,0x00939393,0x00929292,0x00919191,0x00909090,
    0x008F8F8F,0x008E8E8E,0x008D8D8D,0x008C8C8C,0x008B8B8B,0x008A8A8A,0x00898989,0x00888888,
    0x00878787,0x00868686,0x00858585,0x00848484,0x00838383,0x00828282,0x00818181,0x00808080,
    0x007F7F7F,0x007E7E7E,0x007D7D7D,0x007C7C7C,0x007B7B7B,0x007A7A7A,0x00797979,0x00787878,
    0x00777777,0x00767676,0x00757575,0x00747474,0x00737373,0x00727272,0x00717171,0x00707070,
    0x006F6F6F,0x006E6E6E,0x006D6D6D,0x006C6C6C,0x006B6B6B,0x006A6A6A,0x00696969,0x00686868,
    0x00676767,0x00666666,0x00656565,0x00646464,0x00636363,0x00626262,0x00616161,0x00606060,
    0x005F5F5F,0x005E5E5E,0x005D5D5D,0x005C5C5C,0x005B5B5B,0x005A5A5A,0x00595959,0x00585858,
    0x00575757,0x00565656,0x00555555,0x00545454,0x00535353,0x00525252,0x00515151,0x00505050,
    0x004F4F4F,0x004E4E4E,0x004D4D4D,0x004C4C4C,0x004B4B4B,0x004A4A4A,0x00494949,0x00484848,
    0x00474747,0x00464646,0x00454545,0x00444444,0x00434343,0x00424242,0x00414141,0x00404040,
    0x003F3F3F,0x003E3E3E,0x003D3D3D,0x003C3C3C,0x003B3B3B,0x003A3A3A,0x00393939,0x00383838,
    0x00373737,0x00363636,0x00353535,0x00343434,0x00333333,0x00323232,0x00313131,0x00303030,
    0x002F2F2F,0x002E2E2E,0x002D2D2D,0x002C2C2C,0x002B2B2B,0x002A2A2A,0x00292929,0x00282828,
    0x00272727,0x00262626,0x00252525,0x00242424,0x00232323,0x00222222,0x00212121,0x00202020,
    0x001F1F1F,0x001E1E1E,0x001D1D1D,0x001C1C1C,0x001B1B1B,0x001A1A1A,0x00191919,0x00181818,
    0x00171717,0x00161616,0x00151515,0x00141414,0x00131313,0x00121212,0x00111111,0x00101010,
    0x000F0F0F,0x000E0E0E,0x000D0D0D,0x000C0C0C,0x000B0B0B,0x000A0A0A,0x00090909,0x00080808,
    0x00070707,0x00060606,0x00050505,0x00040404,0x00030303,0x00020202,0x00010101,0x00000000
};

static unsigned long rockyPalette[256] =
{
    // generated with speclab
/*
    0x00232300,0x00232300,0x00232300,0x00232300,0x00232300,0x00242400,0x00242400,0x00242400,
    0x00242400,0x00252500,0x00252500,0x00252500,0x00252500,0x00252500,0x00262600,0x00262600,
    0x00262600,0x00262600,0x00272700,0x00272700,0x00272700,0x00272700,0x00272700,0x00282800,
    0x00282800,0x00282800,0x00282800,0x00292900,0x00292900,0x00292900,0x00292900,0x002A2A00,
    0x002A2A00,0x002A2A00,0x002A2A00,0x002A2A00,0x002B2B00,0x002B2B00,0x002B2B00,0x002B2B00,
    0x002C2C00,0x002C2C00,0x002C2C00,0x002C2C00,0x002C2C00,0x002D2D00,0x002D2D00,0x002D2D00,
    0x002D2D00,0x002E2E00,0x002E2E00,0x002E2E00,0x002E2E00,0x002F2F00,0x00323200,0x00353500,
    0x00383800,0x003B3B00,0x003F3F00,0x00424200,0x00454500,0x00484800,0x004C4C00,0x004F4F00,
    0x00525200,0x00555500,0x00595900,0x005C5C00,0x005F5F00,0x00626200,0x00666600,0x00696900,
    0x006C6C00,0x006F6F00,0x00737300,0x00767600,0x00797900,0x007C7C00,0x00808000,0x00838300,
    0x00868600,0x00898900,0x008D8D00,0x00909000,0x00939300,0x00969600,0x009A9A00,0x009D9D00,
    0x00A0A000,0x00A3A300,0x00A7A700,0x00AAAA00,0x00ADAD00,0x00B0B000,0x00B4B400,0x00B7B700,
    0x00BABA00,0x00BDBD00,0x00C1C100,0x00C4C400,0x00C7C700,0x00CACA00,0x00CECE00,0x00D1D100,
    0x00D4D400,0x00D7D700,0x00DBDB00,0x00DBDB00,0x00DBDB00,0x00DBDB00,0x00DBDB00,0x00DCDC00,
    0x00DCDC00,0x00DCDC00,0x00DCDC00,0x00DDDD00,0x00DDDD00,0x00DDDD00,0x00DDDD00,0x00DEDE00,
    0x00DEDE00,0x00DEDE00,0x00DEDE00,0x00DFDF00,0x00DFDF00,0x00DFDF00,0x00DFDF00,0x00E0E000,
    0x00E0E000,0x00E0E000,0x00E0E000,0x00E1E100,0x00E1E100,0x00E1E100,0x00E1E100,0x00E2E200,
    0x00E2E200,0x00E2E200,0x00E2E200,0x00E2E200,0x00E3E300,0x00E3E300,0x00E3E300,0x00E3E300,
    0x00E4E400,0x00E4E400,0x00E4E400,0x00E4E400,0x00E5E500,0x00E5E500,0x00E5E500,0x00E5E500,
    0x00E6E600,0x00E6E600,0x00E6E600,0x00E6E600,0x00E7E700,0x00E7E700,0x00E7E700,0x00E7E700,
    0x00E8E800,0x00E8E800,0x00E8E800,0x00E8E800,0x00E9E900,0x00E9E900,0x00E9E900,0x00E9E900,
    0x00E9E900,0x00EAEA00,0x00EAEA00,0x00EAEA00,0x00EAEA00,0x00EBEB00,0x00EBEB00,0x00EBEB00,
    0x00EBEB00,0x00ECEC00,0x00ECEC00,0x00ECEC00,0x00ECEC00,0x00EDED00,0x00EDED00,0x00EDED00,
    0x00EDED00,0x00EEEE00,0x00EEEE00,0x00EEEE00,0x00EEEE00,0x00EFEF00,0x00EFEF00,0x00EFEF00,
    0x00EFEF00,0x00F0F000,0x00F0F000,0x00F0F000,0x00F0F000,0x00F0F000,0x00F1F100,0x00F1F100,
    0x00F1F100,0x00F1F100,0x00F2F200,0x00F2F200,0x00F2F200,0x00F2F200,0x00F3F300,0x00F3F300,
    0x00F3F300,0x00F3F300,0x00F4F400,0x00F4F400,0x00F4F400,0x00F4F400,0x00F5F500,0x00F5F500,
    0x00F5F500,0x00F5F500,0x00F6F600,0x00F6F600,0x00F6F600,0x00F6F600,0x00F7F700,0x00F7F700,
    0x00F7F700,0x00F7F700,0x00F7F700,0x00F8F800,0x00F8F800,0x00F8F800,0x00F8F800,0x00F9F900,
    0x00F9F900,0x00F9F900,0x00F9F900,0x00FAFA00,0x00FAFA00,0x00FAFA00,0x00FAFA00,0x00FBFB00,
    0x00FBFB00,0x00FBFB00,0x00FBFB00,0x00FCFC00,0x00FCFC00,0x00FCFC00,0x00FCFC00,0x00FDFD00,
    0x00FDFD00,0x00FDFD00,0x00FDFD00,0x00FEFE00,0x00FEFE00,0x00FEFE00,0x00FEFE00,0x00FFFF00
        */
    0x001D1D00,0x001D1D00,0x001D1D00,0x001D1D00,0x001E1E00,0x001E1E00,0x001E1E00,0x001E1E00,
    0x001F1F00,0x001F1F00,0x001F1F00,0x001F1F00,0x00202000,0x00202000,0x00202000,0x00212100,
    0x00212100,0x00212100,0x00212100,0x00222200,0x00222200,0x00222200,0x00222200,0x00232300,
    0x00232300,0x00232300,0x00232300,0x00242400,0x00242400,0x00242400,0x00252500,0x00252500,
    0x00252500,0x00252500,0x00262600,0x00262600,0x00262600,0x00262600,0x00272700,0x00272700,
    0x00272700,0x00272700,0x00282800,0x00282800,0x00282800,0x00292900,0x00292900,0x00292900,
    0x00292900,0x002A2A00,0x002A2A00,0x002A2A00,0x002A2A00,0x002B2B00,0x002B2B00,0x002B2B00,
    0x002B2B00,0x002C2C00,0x002C2C00,0x002C2C00,0x002D2D00,0x002E2E00,0x00303000,0x00323200,
    0x00343400,0x00363600,0x00383800,0x003A3A00,0x003C3C00,0x003E3E00,0x00404000,0x00424200,
    0x00444400,0x00464600,0x00484800,0x004A4A00,0x004C4C00,0x004E4E00,0x00505000,0x00515100,
    0x00535300,0x00555500,0x00575700,0x00595900,0x005B5B00,0x005D5D00,0x005F5F00,0x00616100,
    0x00636300,0x00656500,0x00676700,0x00696900,0x006B6B00,0x006D6D00,0x006F6F00,0x00717100,
    0x00737300,0x00747400,0x00767600,0x00787800,0x007A7A00,0x007C7C00,0x007E7E00,0x00808000,
    0x00828200,0x00848400,0x00868600,0x00888800,0x008A8A00,0x008C8C00,0x008E8E00,0x00909000,
    0x00929200,0x00949400,0x00969600,0x00979700,0x00999900,0x009B9B00,0x009D9D00,0x009F9F00,
    0x00A1A100,0x00A3A300,0x00A5A500,0x00A7A700,0x00A9A900,0x00ABAB00,0x00ADAD00,0x00AFAF00,
    0x00B1B100,0x00B3B300,0x00B5B500,0x00B7B700,0x00B9B900,0x00B9B900,0x00BABA00,0x00BABA00,
    0x00BBBB00,0x00BBBB00,0x00BCBC00,0x00BCBC00,0x00BDBD00,0x00BEBE00,0x00BEBE00,0x00BFBF00,
    0x00BFBF00,0x00C0C000,0x00C0C000,0x00C1C100,0x00C2C200,0x00C2C200,0x00C3C300,0x00C3C300,
    0x00C4C400,0x00C4C400,0x00C5C500,0x00C6C600,0x00C6C600,0x00C7C700,0x00C7C700,0x00C8C800,
    0x00C8C800,0x00C9C900,0x00CACA00,0x00CACA00,0x00CBCB00,0x00CBCB00,0x00CCCC00,0x00CCCC00,
    0x00CDCD00,0x00CECE00,0x00CECE00,0x00CFCF00,0x00CFCF00,0x00D0D000,0x00D0D000,0x00D1D100,
    0x00D2D200,0x00D2D200,0x00D3D300,0x00D3D303,0x00D4D406,0x00D4D409,0x00D5D50D,0x00D6D610,
    0x00D6D613,0x00D7D717,0x00D7D71A,0x00D8D81D,0x00D8D821,0x00D9D924,0x00DADA27,0x00DADA2B,
    0x00DBDB2E,0x00DBDB31,0x00DCDC34,0x00DCDC38,0x00DDDD3B,0x00DDDD3E,0x00DEDE42,0x00DFDF45,
    0x00DFDF48,0x00E0E04C,0x00E0E04F,0x00E1E152,0x00E1E156,0x00E2E259,0x00E3E35C,0x00E3E360,
    0x00E4E463,0x00E4E466,0x00E5E569,0x00E5E56D,0x00E6E670,0x00E7E773,0x00E7E777,0x00E8E87A,
    0x00E8E87D,0x00E9E981,0x00E9E984,0x00EAEA87,0x00EBEB8B,0x00EBEB8E,0x00ECEC91,0x00ECEC95,
    0x00EDED98,0x00EDED9B,0x00EEEE9E,0x00EFEFA2,0x00EFEFA5,0x00F0F0A8,0x00F0F0AC,0x00F1F1AF,
    0x00F1F1B2,0x00F2F2B6,0x00F3F3B9,0x00F3F3BC,0x00F4F4C0,0x00F4F4C3,0x00F5F5C6,0x00F5F5CA,
    0x00F6F6CD,0x00F7F7D0,0x00F7F7D3,0x00F8F8D7,0x00F8F8DA,0x00F9F9DD,0x00F9F9E1,0x00FAFAE4,
    0x00FBFBE7,0x00FBFBEB,0x00FCFCEE,0x00FCFCF1,0x00FDFDF5,0x00FDFDF8,0x00FEFEFB,0x00FFFFFF
};

static unsigned long testPalette[256] =
{

    0x001A1A1A,0x001B1B1B,0x001B1B1B,0x001B1B1B,0x001C1C1C,0x001C1C1C,0x001D1D1D,0x001D1D1D,
    0x001E1E1E,0x001E1E1E,0x001E1E1E,0x001F1F1F,0x001F1F1F,0x00202020,0x00202020,0x00202020,
    0x00212121,0x00212121,0x00222222,0x00222222,0x00232323,0x00232323,0x00232323,0x00242424,
    0x00242424,0x00252525,0x00252525,0x00262626,0x00282828,0x002B2B2B,0x002D2D2D,0x00303030,
    0x00323232,0x00353535,0x00383838,0x003A3A3A,0x003D3D3D,0x003F3F3F,0x00424242,0x00454545,
    0x00474747,0x004A4A4A,0x004C4C4C,0x004F4F4F,0x00515151,0x00545454,0x00575757,0x00595959,
    0x005C5C5C,0x005E5E5E,0x00616161,0x00646464,0x00666666,0x00696969,0x006B6B6B,0x006E6E6E,
    0x00717171,0x00737373,0x00767676,0x00787878,0x007B7B7B,0x007D7D7D,0x00808080,0x00838383,
    0x00858585,0x00888888,0x008A8A8A,0x008D8D8D,0x00909090,0x00929292,0x00959595,0x00979797,
    0x009A9A9A,0x009D9D9D,0x009F9F9F,0x00A2A2A2,0x00A5A5A5,0x00A7A7A7,0x00AAAAAA,0x00ADADAD,
    0x00AFAFAF,0x00B2B2B2,0x00B5B5B5,0x00B8B8B8,0x00BABABA,0x00BDBDBD,0x00C0C0C0,0x00C2C2C2,
    0x00C5C5C5,0x00C8C8C8,0x00CBCBCB,0x00CBCBCB,0x00CCCCCC,0x00CCCCCC,0x00CDCDCD,0x00CDCDCD,
    0x00CECECE,0x00CECECE,0x00CFCFCF,0x00CFCFCF,0x00D0D0D0,0x00D0D0D0,0x00D1D1D1,0x00D1D1D1,
    0x00D2D2D2,0x00D2D2D2,0x00D3D3D3,0x00D3D3D3,0x00D4D4D4,0x00D4D4D4,0x00D5D5D5,0x00D5D5D5,
    0x00D6D6D6,0x00D6D6D6,0x00D7D7D7,0x00D7D7D7,0x00D8D8D8,0x00D8D8D8,0x00D9D9D9,0x00D9D9D9,
    0x00DADADA,0x00DADADA,0x00DBDBDB,0x00DBDBDB,0x00DCDCDC,0x00DDDDDD,0x00DDDDDD,0x00DEDEDE,
    0x00DEDEDE,0x00DFDFDF,0x00DFDFDF,0x00E0E0E0,0x00E0E0E0,0x00E1E1E1,0x00E1E1E1,0x00E2E2E2,
    0x00E2E2E2,0x00E3E3E3,0x00E3E3E3,0x00E4E4E4,0x00E4E4E4,0x00E5E5E5,0x00E5E5E5,0x00E6E6E6,
    0x00E6E6E6,0x00E7E7E7,0x00E7E7E7,0x00E8E8E8,0x00E8E8E8,0x00E9E9E9,0x00E9E9E9,0x00EAEAEA,
    0x00EAEAEA,0x00EBEBEB,0x00EBEBEB,0x00ECECEC,0x00ECECEC,0x00EDEDED,0x00EEEEEE,0x00EEEEEE,
    0x00EFEFEF,0x00EFEFEF,0x00F0F0F0,0x00F0F0F0,0x00F1F1F1,0x00F1F1F1,0x00F2F2F2,0x00F2F2F2,
    0x00F3F3F3,0x00F3F3F3,0x00F4F4F4,0x00F4F4F4,0x00F5F5F5,0x00F5F5F5,0x00F6F6F6,0x00F6F6F6,
    0x00F7F7F7,0x00F7F7F7,0x00F8F8F8,0x00F8F8F8,0x00F9F9F9,0x00F9F9F9,0x00FAFAFA,0x00FAFAFA,
    0x00FBFBFB,0x00FBFBFB,0x00FCFCFC,0x00FCFCFC,0x00FDFDFD,0x00FDFDFD,0x00FEFEFE,0x00FFFFFF,
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,
    0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF,0x00FFFFFF
};

// Additional palettes from Fldigi
/*
        //banana
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  59, 59, 27 }, { 119,119, 59 }, { 179,179, 91 }, { 227,227,123 },
            { 235,235,151 }, { 239,239,183 }, { 247,247,219 }, { 255,255,255 }
        };
        //blue1
        static short Palette[9][3] = {
            {   0,  0,  2 }, {   0,  0, 64 }, {   7, 11,128 }, {  39, 47,192 }, {  95,115,217 },
            { 151,179,231 }, { 187,203,239 }, { 219,227,247 }, { 255,255,255 }
        };
        //blue2
        static short Palette[9][3] = {
            {   3,  3, 64 }, {   7, 11,128 }, {  39, 47,192 }, {  95,115,217 }, { 151,179,231 },
            { 187,203,239 }, { 219,227,247 }, { 255,255,255 }, { 255,253,108 }
        };
        //blue3
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  31, 31, 31 }, {  63, 63, 63 }, {  91, 91,167 }, { 119,119,191 },
            { 155,155,219 }, { 191,191,191 }, { 223,223,223 }, { 255,255,255 }
        };
        //brown
        static short Palette[9][3] = {
            {   0,  0,  0 }, { 107, 63, 11 }, { 175, 95, 31 }, { 199,119, 43 }, { 215,163, 63 },
            { 231,211, 87 }, { 243,247,111 }, { 247,251,179 }, { 255,255,255 }
        };
        //cyan1
        static short Palette[9][3] = {
            {   0,  0,  0 }, {   5, 10, 10 }, {  22, 42, 42 }, {  52, 99, 99 }, {  94,175,175 },
            { 131,209,209 }, { 162,224,224 }, { 202,239,239 }, { 255,255,255 }
        };
        //cyan2
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  35, 51, 51 }, {  75,103,103 }, { 115,159,159 }, { 155,211,211 },
            { 183,231,231 }, { 203,239,239 }, { 227,247,247 }, { 255,255,255 }
        };
        //cyan3
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  94,114,114 }, { 138,162,162 }, { 171,201,201 }, { 199,232,232 },
            { 216,243,243 }, { 228,247,247 }, { 241,251,251 }, { 255,255,255 }
        };
        //gray1
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  69, 69, 69 }, {  99, 99, 99 }, { 121,121,121 }, { 140,140,140 },
            { 157,157,157 }, { 172,172,172 }, { 186,186,186 }, { 199,199,199 }
        };
        //gray2
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  88, 88, 88 }, { 126,126,126 }, { 155,155,155 }, { 179,179,179 },
            { 200,200,200 }, { 220,220,220 }, { 237,237,237 }, { 254,254,254 }
        };
        //green1
        static short Palette[9][3] = {
            {   0,  0,  0 }, {   0, 32,  0 }, {   0, 64,  0 }, {   0, 96,  0 }, {   0,128,  0 },
            {   0,160,  0 }, {   0,192,  0 }, {   0,224,  0 }, { 255,255,255 }
        };
        //green2
        static short Palette[9][3] = {
            {   0,  0,  0 }, {   0, 60,  0 }, {   0,102,  0 }, {   0,151,  0 }, {   0,242,  0 },
            { 255,255, 89 }, { 240,120,  0 }, { 255,148, 40 }, { 255,  0,  0 }
        };
        //jungle
        static short Palette[9][3] = {
            {   0,  0,  0 }, { 107, 67,  0 }, { 223,143,  0 }, { 255,123, 27 }, { 255, 91, 71 },
            { 255,195, 95 }, { 195,255,111 }, { 151,255,151 }, { 255,255,255 }
        };
        //orange
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  63, 27,  0 }, { 131, 63,  0 }, { 199, 95,  0 }, { 251,127, 11 },
            { 251,155, 71 }, { 251,187,131 }, { 251,219,191 }, { 255,255,255 }
        };
        //pink
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  63, 35, 35 }, { 135, 75, 75 }, { 203,111,111 }, { 255,147,147 },
            { 255,175,175 }, { 255,199,199 }, { 255,227,227 }, { 255,255,255 }
        };
        //rainbow
        static short Palette[9][3] = {
            {   0,  0,163 }, {   0, 87,191 }, {   0,207,219 }, {   0,247,139 }, {   0,255, 23 },
            {  95,255,  0 }, { 219,255,  0 }, { 255,171,155 }, { 255,255,255 }
        };
        //scope
        static short Palette[9][3] = {
            {   0,  0,  0 }, {   0,  0,167 }, {   0, 79,255 }, {   0,239,255 }, {   0,255, 75 },
            {  95,255,  0 }, { 255,255,  0 }, { 255,127,  0 }, { 255,  0,  0 }
        };
        //sunburst
        static short Palette[9][3] = {
            {   0,  0,  0 }, {   0,  0, 59 }, {   0,  0,123 }, { 131,  0,179 }, { 235,  0, 75 },
            { 255, 43, 43 }, { 255,215,111 }, { 255,255,183 }, { 255,255,255 }
        };
        //vk4bdj
        static short Palette[9][3] = {
            {   0,  0,  0 }, {   0, 32,  0 }, {   0,154,  0 }, {   0,161,  0 }, {   0,177,  0 },
            { 156,209,144 }, { 192,185,183 }, { 214,222,224 }, { 255,255,255 }
        };
        //Yellow1
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  31, 31,  0 }, {  63, 63,  0 }, {  95, 95,  0 }, { 127,127,  0 },
            { 159,159,  0 }, { 191,191,  0 }, { 223,223,  0 }, { 255,255,  0 }
        };
        //Yellow2
        static short Palette[9][3] = {
            {   0,  0,  0 }, {  39, 39,  0 }, {  75, 75,  0 }, { 111,111,  0 }, { 147,147,  0 },
            { 183,183,  0 }, { 219,219,  0 }, { 255,255,  0 }, { 255,255,255 }
        };
        //YL2KF
        static short Palette[9][3] = {
            {   0,  0,  0 }, {   0,  0,119 }, {   7, 11,195 }, {  39, 47,159 }, {  95,115,203 },
            { 151,179,255 }, { 187,203,255 }, { 219,227,255 }, { 255,255,  5 }
        };
        //ZL1FZ
        static short Palette[9][3] = {
            {   0,  0,  0 }, {   0,  0,  0 }, {   0,  0,  0 }, {   0,  0,  0 }, {   0,255,  0 },
            { 255,255,  0 }, { 255,255,  0 }, { 255,255,  0 }, { 255,  0,  0 }
        };

        // fldigi function to render above palettes
        for (int n = 0; n < 8; n++) {
            for (int i = 0; i < 32; i++) {
                spec_r[i + 32*n] = Palette[n][0] + (int)(1.0 * i * (Palette[n+1][0] - Palette[n][0]) / 32.0);
                spec_g[i + 32*n] = Palette[n][1] + (int)(1.0 * i * (Palette[n+1][1] - Palette[n][1]) / 32.0);
                spec_b[i + 32*n] = Palette[n][2] + (int)(1.0 * i * (Palette[n+1][2] - Palette[n][2]) / 32.0);
            }
        }

        // palettes from GLFER
        long c, color, _draw_colors = 256;
        for (c = 0; c < _draw_colors; c++) {
          color = c * 256;
          color /= _draw_colors;
          if (spectrumPalette == 39) {           // HSV
            if (color < 64) {
              spec_r[c] = 0;
              spec_g[c] = (unsigned char) (color * 4.0);
              spec_b[c] = 255;
            } else if (color < 128) {
              spec_r[c] = 0;
              spec_g[c] = 255;
              spec_b[c] = (unsigned char) (510.0 - color * 4.0);
            } else if (color < 192) {
              spec_r[c] = (unsigned char) (color * 4.0 - 510.0);
              spec_g[c] = 255;
              spec_b[c] = 0;
            } else {
              spec_r[c] = 255;
              spec_g[c] = (unsigned char) (1020.0 - color * 4.0);
              spec_b[c] = 0;
            }
          } else if (spectrumPalette == 40) { // Thresholded HSV
            if (color < 16) {
              spec_r[c] = 0;
              spec_g[c] = 0;
              spec_b[c] = 0;
            } else if (color < 64) {
              spec_r[c] = 0;
              spec_g[c] = (unsigned char) (color * 4.0);
              spec_b[c] = 255;
            } else if (color < 128) {
              spec_r[c] = 0;
              spec_g[c] = 255;
              spec_b[c] = (unsigned char) (510.0 - color * 4.0);
            } else if (color < 192) {
              spec_r[c] = (unsigned char) (color * 4.0 - 510.0);
              spec_g[c] = 255;
              spec_b[c] = 0;
            } else {
              spec_r[c] = 255;
              spec_g[c] = (unsigned char) (1020.0 - color * 4.0);
              spec_b[c] = 0;
            }
          } else if (spectrumPalette == 41) {   // cool
            spec_r[c] = (unsigned char) color;
            spec_g[c] = (unsigned char) (255 - color);
            spec_b[c] = 255;
          } else if (spectrumPalette == 42) {    // hot
            if (color < 96) {
              spec_r[c] = (unsigned char) (color * 2.66667 + 0.5);
              spec_g[c] = 0;
              spec_b[c] = 0;
            } else if (color < 192) {
              spec_r[c] = 255;
              spec_g[c] = (unsigned char) (color * 2.66667 - 254);
              spec_b[c] = 0;
            } else {
              spec_r[c] = 255;
              spec_g[c] = 255;
              spec_b[c] = (unsigned char) (color * 4.0 - 766.0);
            }
          } else if (spectrumPalette == 43) {   // bone
            if (color < 96) {
              spec_r[c] = (unsigned char) (color * 0.88889);
              spec_g[c] = (unsigned char) (color * 0.88889);
              spec_b[c] = (unsigned char) (color * 1.20000);
            } else if (color < 192) {
              spec_r[c] = (unsigned char) (color * 0.88889);
              spec_g[c] = (unsigned char) (color * 1.20000 - 29);
              spec_b[c] = (unsigned char) (color * 0.88889 + 29);
            } else {
              spec_r[c] = (unsigned char) (color * 1.20000 - 60);
              spec_g[c] = (unsigned char) (color * 0.88889 + 29);
              spec_b[c] = (unsigned char) (color * 0.88889 + 29);
            }
          } else if (spectrumPalette == 44) { // copper
            if (color < 208) {
              spec_r[c] = (unsigned char) (color * 1.23);
              spec_g[c] = (unsigned char) (color * 0.78);
              spec_b[c] = (unsigned char) (color * 0.5);
            } else {
              spec_r[c] = 255;
              spec_g[c] = (unsigned char) (color * 0.78);
              spec_b[c] = (unsigned char) (color * 0.5);
            }
          } else if (spectrumPalette == 45) {    // where did I take this palette ??
            apertureAutoDelta = -17;
            if (color < 128) {
              spec_r[c] = 0;
              spec_g[c] = (unsigned char) (2.0 * color - 1.0);
              spec_b[c] = (unsigned char) (2.0 * (127.0 - color) + 1.0);
            } else {
              spec_r[c] = (unsigned char) (2.0 * (color - 127.0) - 1.0);
              spec_g[c] = (unsigned char) (2.0 * (255.0 - color) + 1.0);
              spec_b[c] = 0;
            }
          } else {                    // Black and white
            spec_r[c] = (unsigned char) color;
            spec_g[c] = (unsigned char) color;
            spec_b[c] = (unsigned char) color;
          }
        }



        // default SDR-shell .... same as Linrad?!?
        for (int i = 0; i < DEFAPERTURE_SIZE; i++)
        {
            spec_b[i] =  0; spec_g[i] =  0; spec_r[i] =  0;
        }

        spec_b[0] =  0; spec_g[0] =  0; spec_r[0] =  0;
        spec_b[1] =  9; spec_g[1] =  1; spec_r[1] =  1;
        spec_b[2] =  15; spec_g[2] =  1; spec_r[2] =  1;
        spec_b[3] =  21; spec_g[3] =  1; spec_r[3] =  1;
        spec_b[4] =  28; spec_g[4] =  1; spec_r[4] =  1;
        spec_b[5] =  34; spec_g[5] =  1; spec_r[5] =  1;
        spec_b[6] =  40; spec_g[6] =  0; spec_r[6] =  0;
        spec_b[7] =  46; spec_g[7] =  0; spec_r[7] =  0;
        spec_b[8] =  56; spec_g[8] =  0; spec_r[8] =  0;
        spec_b[9] =  62; spec_g[9] =  1; spec_r[9] =  1;
        spec_b[10] =  68; spec_g[10] =  1; spec_r[10] =  1;
        spec_b[11] =  75; spec_g[11] =  0; spec_r[11] =  0;
        spec_b[12] =  79; spec_g[12] =  0; spec_r[12] =  0;
        spec_b[13] =  84; spec_g[13] =  0; spec_r[13] =  0;
        spec_b[14] =  88; spec_g[14] =  0; spec_r[14] =  0;
        spec_b[15] =  95; spec_g[15] =  0; spec_r[15] =  0;
        spec_b[16] =  100; spec_g[16] =  3; spec_r[16] =  0;
        spec_b[17] =  104; spec_g[17] =  8; spec_r[17] =  0;
        spec_b[18] =  108; spec_g[18] =  13; spec_r[18] =  0;
        spec_b[19] =  110; spec_g[19] =  18; spec_r[19] =  0;
        spec_b[20] =  113; spec_g[20] =  23; spec_r[20] =  0;
        spec_b[21] =  115; spec_g[21] =  28; spec_r[21] =  0;
        spec_b[22] =  119; spec_g[22] =  35; spec_r[22] =  0;
        spec_b[23] =  121; spec_g[23] =  40; spec_r[23] =  0;
        spec_b[24] =  124; spec_g[24] =  45; spec_r[24] =  0;
        spec_b[25] =  124; spec_g[25] =  50; spec_r[25] =  0;
        spec_b[26] =  124; spec_g[26] =  55; spec_r[26] =  0;
        spec_b[27] =  124; spec_g[27] =  60; spec_r[27] =  0;
        spec_b[28] =  124; spec_g[28] =  65; spec_r[28] =  1;
        spec_b[29] =  124; spec_g[29] =  72; spec_r[29] =  1;
        spec_b[30] =  125; spec_g[30] =  77; spec_r[30] =  1;
        spec_b[31] =  123; spec_g[31] =  82; spec_r[31] =  1;
        spec_b[32] =  121; spec_g[32] =  87; spec_r[32] =  0;
        spec_b[33] =  119; spec_g[33] =  92; spec_r[33] =  0;
        spec_b[34] =  116; spec_g[34] =  97; spec_r[34] =  1;
        spec_b[35] =  112; spec_g[35] =  102; spec_r[35] =  1;
        spec_b[36] =  106; spec_g[36] =  110; spec_r[36] =  1;
        spec_b[37] =  101; spec_g[37] =  112; spec_r[37] =  1;
        spec_b[38] =  97; spec_g[38] =  115; spec_r[38] =  1;
        spec_b[39] =  92; spec_g[39] =  118; spec_r[39] =  1;
        spec_b[40] =  88; spec_g[40] =  121; spec_r[40] =  1;
        spec_b[41] =  80; spec_g[41] =  124; spec_r[41] =  0;
        spec_b[42] =  78; spec_g[42] =  127; spec_r[42] =  0;
        spec_b[43] =  69; spec_g[43] =  131; spec_r[43] =  0;
        spec_b[44] =  63; spec_g[44] =  134; spec_r[44] =  0;
        spec_b[45] =  57; spec_g[45] =  137; spec_r[45] =  0;
        spec_b[46] =  51; spec_g[46] =  140; spec_r[46] =  0;
        spec_b[47] =  45; spec_g[47] =  143; spec_r[47] =  1;
        spec_b[48] =  39; spec_g[48] =  146; spec_r[48] =  0;
        spec_b[49] =  33; spec_g[49] =  149; spec_r[49] =  1;
        spec_b[50] =  24; spec_g[50] =  152; spec_r[50] =  0;
        spec_b[51] =  18; spec_g[51] =  154; spec_r[51] =  7;
        spec_b[52] =  12; spec_g[52] =  156; spec_r[52] =  19;
        spec_b[53] =  6; spec_g[53] =  158; spec_r[53] =  31;
        spec_b[54] =  0; spec_g[54] =  160; spec_r[54] =  43;
        spec_b[55] =  0; spec_g[55] =  160; spec_r[55] =  55;
        spec_b[56] =  1; spec_g[56] =  160; spec_r[56] =  67;
        spec_b[57] =  1; spec_g[57] =  160; spec_r[57] =  79;
        spec_b[58] =  0; spec_g[58] =  160; spec_r[58] =  97;
        spec_b[59] =  0; spec_g[59] =  160; spec_r[59] =  109;
        spec_b[60] =  0; spec_g[60] =  159; spec_r[60] =  121;
        spec_b[61] =  0; spec_g[61] =  157; spec_r[61] =  128;
        spec_b[62] =  1; spec_g[62] =  155; spec_r[62] =  135;
        spec_b[63] =  1; spec_g[63] =  154; spec_r[63] =  142;
        spec_b[64] =  1; spec_g[64] =  152; spec_r[64] =  149;
        spec_b[65] =  1; spec_g[65] =  148; spec_r[65] =  160;
        spec_b[66] =  1; spec_g[66] =  145; spec_r[66] =  167;
        spec_b[67] =  1; spec_g[67] =  142; spec_r[67] =  174;
        spec_b[68] =  1; spec_g[68] =  139; spec_r[68] =  178;
        spec_b[69] =  1; spec_g[69] =  136; spec_r[69] =  182;
        spec_b[70] =  1; spec_g[70] =  133; spec_r[70] =  185;
        spec_b[71] =  0; spec_g[71] =  131; spec_r[71] =  188;
        spec_b[72] =  1; spec_g[72] =  126; spec_r[72] =  192;
        spec_b[73] =  1; spec_g[73] =  123; spec_r[73] =  194;
        spec_b[74] =  1; spec_g[74] =  120; spec_r[74] =  196;
        spec_b[75] =  1; spec_g[75] =  117; spec_r[75] =  198;
        spec_b[76] =  1; spec_g[76] =  112; spec_r[76] =  200;
        spec_b[77] =  1; spec_g[77] =  107; spec_r[77] =  202;
        spec_b[78] =  1; spec_g[78] =  102; spec_r[78] =  204;
        spec_b[79] =  1; spec_g[79] =  94; spec_r[79] =  206;
        spec_b[80] =  1; spec_g[80] =  89; spec_r[80] =  207;
        spec_b[81] =  0; spec_g[81] =  84; spec_r[81] =  208;
        spec_b[82] =  0; spec_g[82] =  79; spec_r[82] =  210;
        spec_b[83] =  0; spec_g[83] =  74; spec_r[83] =  212;
        spec_b[84] =  0; spec_g[84] =  69; spec_r[84] =  214;
        spec_b[85] =  1; spec_g[85] =  64; spec_r[85] =  217;
        spec_b[86] =  1; spec_g[86] =  56; spec_r[86] =  220;
        spec_b[87] =  1; spec_g[87] =  51; spec_r[87] =  222;
        spec_b[88] =  0; spec_g[88] =  46; spec_r[88] =  224;
        spec_b[89] =  2; spec_g[89] =  41; spec_r[89] =  227;
        spec_b[90] =  2; spec_g[90] =  35; spec_r[90] =  229;
        spec_b[91] =  2; spec_g[91] =  32; spec_r[91] =  231;
        spec_b[92] =  2; spec_g[92] =  29; spec_r[92] =  233;
        spec_b[93] =  10; spec_g[93] =  25; spec_r[93] =  237;
        spec_b[94] =  19; spec_g[94] =  21; spec_r[94] =  239;
        spec_b[95] =  28; spec_g[95] =  28; spec_r[95] =  241;
        spec_b[96] =  37; spec_g[96] =  37; spec_r[96] =  243;
        spec_b[97] =  46; spec_g[97] =  46; spec_r[97] =  246;
        spec_b[98] =  55; spec_g[98] =  55; spec_r[98] =  248;
        spec_b[99] =  64; spec_g[99] =  64; spec_r[99] =  250;
        spec_b[100] =  77; spec_g[100] =  77; spec_r[100] =  253;
        spec_b[101] =  86; spec_g[101] =  86; spec_r[101] =  255;
        spec_b[102] =  95; spec_g[102] =  95; spec_r[102] =  255;
        spec_b[103] =  104; spec_g[103] =  104; spec_r[103] =  255;
        spec_b[104] =  112; spec_g[104] =  112; spec_r[104] =  255;
        spec_b[105] =  121; spec_g[105] =  121; spec_r[105] =  255;
        spec_b[106] =  130; spec_g[106] =  130; spec_r[106] =  255;
        spec_b[107] =  139; spec_g[107] =  139; spec_r[107] =  255;
        spec_b[108] =  152; spec_g[108] =  152; spec_r[108] =  255;
        spec_b[109] =  161; spec_g[109] =  161; spec_r[109] =  255;
        spec_b[110] =  170; spec_g[110] =  170; spec_r[110] =  255;
        spec_b[111] =  179; spec_g[111] =  179; spec_r[111] =  255;
        spec_b[112] =  188; spec_g[112] =  188; spec_r[112] =  255;
        spec_b[113] =  197; spec_g[113] =  197; spec_r[113] =  255;
        spec_b[114] =  206; spec_g[114] =  206; spec_r[114] =  255;
        spec_b[115] =  219; spec_g[115] =  219; spec_r[115] =  255;
        spec_b[116] =  228; spec_g[116] =  228; spec_r[116] =  255;
        spec_b[117] =  237; spec_g[117] =  237; spec_r[117] =  255;
        spec_b[118] =  246; spec_g[118] =  246; spec_r[118] =  255;
        spec_b[119] =  255; spec_g[119] =  255; spec_r[119] =  255;


*/
